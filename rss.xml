<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog]]></title><description><![CDATA[My study log of software development]]></description><link>https://ny-a.github.io/blog2</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 17 Jun 2020 15:05:51 GMT</lastBuildDate><item><title><![CDATA[subscribe の意味]]></title><description><![CDATA[subscribe という英単語を購読するという意味と認識していたのですが、
他にも意味を持っているようだったので驚きました。 寄付する、署名する、などの意味を持っているようですね。
sub+scribe…]]></description><link>https://ny-a.github.io/blog22020-06/meaning-of-subscribe/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/meaning-of-subscribe/</guid><pubDate>Thu, 18 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;subscribe という英単語を購読するという意味と認識していたのですが、
他にも意味を持っているようだったので驚きました。&lt;/p&gt;
&lt;p&gt;寄付する、署名する、などの意味を持っているようですね。
sub+scribe と考えるとイメージはつきますが、今まで考えたことも
ありませんでした……。&lt;/p&gt;
&lt;p&gt;よく使う英単語でも知らなかった意味を持っていることはよくあるので、
まだまだ勉強不足を感じますね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Fitbit から普通の腕時計に変えました]]></title><description><![CDATA[しばらく Fitbit をつけて生活していたのですが、新しい腕時計を買って
つけてみたら満足してしまったので Fitbit をつけなくなりました。 時間が常に表示されているとやっぱり違うものですね。
Apple watch…]]></description><link>https://ny-a.github.io/blog22020-06/unsmartize-watch/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/unsmartize-watch/</guid><pubDate>Wed, 17 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;しばらく Fitbit をつけて生活していたのですが、新しい腕時計を買って
つけてみたら満足してしまったので Fitbit をつけなくなりました。&lt;/p&gt;
&lt;p&gt;時間が常に表示されているとやっぱり違うものですね。
Apple watch で常時表示ができるようになったときも同じような感想を
よく見かけましたが、確かに……となりました。&lt;/p&gt;
&lt;p&gt;Wena wrist も検討していたのですが、スマートフォンを持たずに
出かけたり買い物をしたりすることもあまりないので、とりあえずは
不要かなと思っています。&lt;/p&gt;
&lt;p&gt;通知機能は……今のところ通知に常に即座に対応しなければいけないわけでは
ないため不要かなと思いはじめました。仕事中なんかはスマートフォンの
通知に気付かないことはないですし。&lt;/p&gt;
&lt;p&gt;ただ、もっと Suica に対応しているスマートウォッチの選択肢が増えて
ほしいなとは思います。wena……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWeb-jp にレビューのボットが追加されていました]]></title><description><![CDATA[ArchWeb に新しいニュースが追加されると、それを翻訳して ArchWeb-jp に
PullRequest…]]></description><link>https://ny-a.github.io/blog22020-06/archweb-review-bot/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/archweb-review-bot/</guid><pubDate>Tue, 16 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchWeb に新しいニュースが追加されると、それを翻訳して ArchWeb-jp に
PullRequest を投げるわけですが、確かにレビュー側からすると原文や
機械翻訳の内容と比較できる方が親切でしたね……。&lt;/p&gt;
&lt;p&gt;こういうサポートをぱっと思いついて実装できるのってすごいなあと
思いました。&lt;/p&gt;
&lt;p&gt;あと、sqlint ははじめて知りました。あんまり SQLite 使わないので
調べたことがありませんでした……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[pacman の --overwrite についてよく分かっていない]]></title><description><![CDATA[pacman の —overwrite…]]></description><link>https://ny-a.github.io/blog22020-06/pacman-overwrite/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/pacman-overwrite/</guid><pubDate>Mon, 15 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;pacman の —overwrite オプションは滅多に使わないですが、パッケージが
壊れてしまったときなどには使うことがあります。&lt;/p&gt;
&lt;p&gt;ただ、ワイルドカードがどのように解決されていて、ディレクトリを再帰的に
含めてくれるのか……などは分かっていません。&lt;/p&gt;
&lt;p&gt;そういえば、昔は —force オプションなんかがあったような気がするのですが、
今見たらないようでした。なくなったんですかね？&lt;/p&gt;
&lt;p&gt;—force にしろ —overwrite にしろ、上書き前にはそれぞれのファイルの状態を
確認しておきたいものです。私だったら、
&lt;a href=&quot;https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Listing_all_changed_files_from_packages&quot;&gt;ArchWiki&lt;/a&gt;
を参照して &lt;code class=&quot;language-text&quot;&gt;paccheck --md5sum --quiet&lt;/code&gt; なんかで壊れていそうなファイルの
一覧を得て、それぞれのファイルを確認してから xargs なんかで overwrite
するような気がします。&lt;/p&gt;
&lt;p&gt;まあ時々再インストールしてあげるのもいいと思いますけどね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pollyanna が届きました]]></title><description><![CDATA[ほぼ日 MOTHER プロジェクト第1弾の Pollyanna が届きました。 おまけのシールが付いていたりするのは知っていましたが、
今後のグッズの発売予定が書いてあり楽しみになりました。]]></description><link>https://ny-a.github.io/blog22020-06/received-pollyanna/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/received-pollyanna/</guid><pubDate>Sun, 14 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ほぼ日 MOTHER プロジェクト第1弾の Pollyanna が届きました。&lt;/p&gt;
&lt;p&gt;おまけのシールが付いていたりするのは知っていましたが、
今後のグッズの発売予定が書いてあり楽しみになりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ゆうパックが即日配送に対応していることを知りました]]></title><description><![CDATA[ゆうパックって、エリア内限定ですが午前中に出された荷物を
17-21時に配送するサービスがあったんですね。]]></description><link>https://ny-a.github.io/blog22020-06/you-pack-same-day-delivery/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/you-pack-same-day-delivery/</guid><pubDate>Sat, 13 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ゆうパックって、エリア内限定ですが午前中に出された荷物を
17-21時に配送するサービスがあったんですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Thinkpad を買いました]]></title><description><![CDATA[仕事で使っている PC に不満が出てきたので、Lenovo の Thinkpad を買いました。 購入時は FullHD パネルの在庫の問題か、納期が1ヶ月程度かかると表示されて
いたのですが、思ったより早く今日発送されたようでした。 届くのが楽しみです。]]></description><link>https://ny-a.github.io/blog22020-06/bought-thinkpad/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/bought-thinkpad/</guid><pubDate>Fri, 12 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;仕事で使っている PC に不満が出てきたので、Lenovo の Thinkpad を買いました。&lt;/p&gt;
&lt;p&gt;購入時は FullHD パネルの在庫の問題か、納期が1ヶ月程度かかると表示されて
いたのですが、思ったより早く今日発送されたようでした。&lt;/p&gt;
&lt;p&gt;届くのが楽しみです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[0sim を nuromobile に移行する手続きをしました]]></title><description><![CDATA[0sim のサービスが終了して、nuromobile に移行するという
メールがきていたので、移行の手続きを済ませました。 ドコモ回線だと 200MB で月300円なので、当面の寝かせる回線としては
(…]]></description><link>https://ny-a.github.io/blog22020-06/migrate-0sim-to-nuromobile/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/migrate-0sim-to-nuromobile/</guid><pubDate>Thu, 11 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;0sim のサービスが終了して、nuromobile に移行するという
メールがきていたので、移行の手続きを済ませました。&lt;/p&gt;
&lt;p&gt;ドコモ回線だと 200MB で月300円なので、当面の寝かせる回線としては
(0円には劣りますが) 安い方ではないかなと思います。&lt;/p&gt;
&lt;p&gt;わざわざ nuromobile を契約する必要があるのかと考えれば
微妙と言わざるを得ないですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RasPi 上で hostapd がうまく動きません]]></title><description><![CDATA[SSID が見えたり見えなくなったり、見えたとしても
接続に失敗したり……hostapd がうまく動いてくれません。  などと
いったエラーが出たり、hostapd 側から切断されているようです。 WiFi 周りって考えること多そうで難しいですね……。]]></description><link>https://ny-a.github.io/blog22020-06/hostapd-failure-on-rpi/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/hostapd-failure-on-rpi/</guid><pubDate>Wed, 10 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;SSID が見えたり見えなくなったり、見えたとしても
接続に失敗したり……hostapd がうまく動いてくれません。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;nl80211: set_key failed; err=-22 Invalid argument)&lt;/code&gt; などと
いったエラーが出たり、hostapd 側から切断されているようです。&lt;/p&gt;
&lt;p&gt;WiFi 周りって考えること多そうで難しいですね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Netgear GS308 を買いました]]></title><description><![CDATA[有線 LAN 機器が増えてきたのでアンマネージスイッチを買ってみました。 ……普通にスイッチングハブですよね……という感じです。設定項目もないので。 金属筐体で安心感がありますが、唯一の欠点というか、電源ポートが LAN…]]></description><link>https://ny-a.github.io/blog22020-06/bought-netgear-gs308v3/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/bought-netgear-gs308v3/</guid><pubDate>Tue, 09 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;有線 LAN 機器が増えてきたのでアンマネージスイッチを買ってみました。&lt;/p&gt;
&lt;p&gt;……普通にスイッチングハブですよね……という感じです。設定項目もないので。&lt;/p&gt;
&lt;p&gt;金属筐体で安心感がありますが、唯一の欠点というか、電源ポートが LAN 側に
あれば裏側のスペース確保が楽でいいのにな……と思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Abusix からメールが来ていました]]></title><description><![CDATA[独自ドメインのメールの postmaster 宛てに abusix からメールが届いていました。 ただ、存在しないメールアドレスなんですよね……。
Have I Been Pwned…]]></description><link>https://ny-a.github.io/blog22020-06/got-an-email-from-abusix/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/got-an-email-from-abusix/</guid><pubDate>Mon, 08 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;独自ドメインのメールの postmaster 宛てに abusix からメールが届いていました。&lt;/p&gt;
&lt;p&gt;ただ、存在しないメールアドレスなんですよね……。
Have I Been Pwned で確認してみても登録されていませんでした。
ただ、迷惑メールが届いているアドレスは存在するので、どこから漏れているのかは
気になっています……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DHL で個人輸入の税金を支払いました]]></title><description><![CDATA[海外の通販サイトから商品を購入すると、輸入の際に消費税などの支払いが必要になりますが、
DHL での配送の場合は DHL で税金の支払い代行サービスを利用することができます。 まず、DHL…]]></description><link>https://ny-a.github.io/blog22020-06/pay-tax-via-dhl/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/pay-tax-via-dhl/</guid><pubDate>Sun, 07 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;海外の通販サイトから商品を購入すると、輸入の際に消費税などの支払いが必要になりますが、
DHL での配送の場合は DHL で税金の支払い代行サービスを利用することができます。&lt;/p&gt;
&lt;p&gt;まず、DHL の追跡番号で状態を確認すると、支払いが必要である旨が表示されます。
チャットでの問い合わせなどで追跡番号を伝え、クレジットカードで支払いたいと
伝えるとメールでリンクが送られてきます。
そのサイトでクレジットカード決済をすると、あとは通常と同じように DHL で配送されます。&lt;/p&gt;
&lt;p&gt;チャットで問い合わせする際も親切に教えていただきとてもよかったです。
手数料がある程度必要ですが、かなり手軽に購入・支払いができるので
便利に利用させていただこうと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Kusakata.bot2 を倒せない]]></title><description><![CDATA[ArchWiki-jp 上初？なんですかね？連続編集回数が100回になっていました。
bot の、ですが。 今まで bot の連続記録が途切れていた原因って何なんでしょうか。
このままでは永遠に bot…]]></description><link>https://ny-a.github.io/blog22020-06/can-not-beat-bot/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/can-not-beat-bot/</guid><pubDate>Sat, 06 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchWiki-jp 上初？なんですかね？連続編集回数が100回になっていました。
bot の、ですが。&lt;/p&gt;
&lt;p&gt;今まで bot の連続記録が途切れていた原因って何なんでしょうか。
このままでは永遠に bot に勝てないですね……。
(勝つ必要もないのですが。)&lt;/p&gt;
&lt;p&gt;タイトルは語感がいいのでユーザー名をそのまま使ってしまいました……
問題があれば修正します。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ソニー銀行のキャッシュカードを再発行しました]]></title><description><![CDATA[名義変更をしたのでソニー銀行のキャッシュカードを再発行しました。 プレステデザインにしてみました。思ったよりかわいかったです。]]></description><link>https://ny-a.github.io/blog22020-06/reissue-sony-bank-cash-card/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/reissue-sony-bank-cash-card/</guid><pubDate>Fri, 05 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;名義変更をしたのでソニー銀行のキャッシュカードを再発行しました。&lt;/p&gt;
&lt;p&gt;プレステデザインにしてみました。思ったよりかわいかったです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[イトーヨカドーのクレジット決済手順]]></title><description><![CDATA[ヨーカドーでは、商品登録が終わった直後に CAT…]]></description><link>https://ny-a.github.io/blog22020-06/itoyokado-credit-payment/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/itoyokado-credit-payment/</guid><pubDate>Thu, 04 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ヨーカドーでは、商品登録が終わった直後に CAT に「クレジット」と
表示されて、クレジットカードを受け付ける状態になっていますが、
この状態では決済できないようでした。&lt;/p&gt;
&lt;p&gt;他の方の決済を見ていると、セブンアンドアイ系列のカードを差し込んで
いる方を見ることがあるので、ポイント関連の処理なんでしょうか。&lt;/p&gt;
&lt;p&gt;商品登録後は客側からの操作だけで完結すれば楽なのになあ……。なんて
思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Google Pay の QUICPay 番号を聞かれました]]></title><description><![CDATA[QUICPay で購入後、商品の交換をお願いしたところ、QUICPay の番号を
求められました。 GooglePay アプリからは下4桁しか表示されておらず、レシートも同じ
表記だったため、一旦保留にしていただき調査したのですが、
QUICPay…]]></description><link>https://ny-a.github.io/blog22020-06/google-pay-quicpay-number/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/google-pay-quicpay-number/</guid><pubDate>Wed, 03 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;QUICPay で購入後、商品の交換をお願いしたところ、QUICPay の番号を
求められました。&lt;/p&gt;
&lt;p&gt;GooglePay アプリからは下4桁しか表示されておらず、レシートも同じ
表記だったため、一旦保留にしていただき調査したのですが、
QUICPay の番号自体あまり普段から認識することもないため、
確認する方法を見つけることができませんでした。&lt;/p&gt;
&lt;p&gt;POS システムによって返品の方法は違うと思いますが、
QUICPay の番号を求められたのは初めてだったので驚きました。&lt;/p&gt;
&lt;p&gt;最終的にはタッチで返品→再決済できたので事無きを得ました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[やさしいタオルを追加で購入しました]]></title><description><![CDATA[また買っちゃいました。 今治タオルが割と最高峰？だと思っていたのですが、
全然そんなことはなかったですね。 売り切れになっている柄は入荷しないんでしょうか？
無地が欲しくなってきました。]]></description><link>https://ny-a.github.io/blog22020-06/bought-extra-yasashii-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/bought-extra-yasashii-towel/</guid><pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;また買っちゃいました。&lt;/p&gt;
&lt;p&gt;今治タオルが割と最高峰？だと思っていたのですが、
全然そんなことはなかったですね。&lt;/p&gt;
&lt;p&gt;売り切れになっている柄は入荷しないんでしょうか？
無地が欲しくなってきました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GBA に使う音量調整付きヘッドホン延長ケーブルを買いました]]></title><description><![CDATA[前にスライド式のものを買って使いにくいと感じていたので、
多回転っぽいものを買いました。 無音にもできますし、操作性もよく満足しています。 GBA のノイズも、GBA 側で音量を大きくしてあげると比較的軽減されるので
ゲームが捗りそうです。]]></description><link>https://ny-a.github.io/blog22020-06/gba-external-volume/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-06/gba-external-volume/</guid><pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;前にスライド式のものを買って使いにくいと感じていたので、
多回転っぽいものを買いました。&lt;/p&gt;
&lt;p&gt;無音にもできますし、操作性もよく満足しています。&lt;/p&gt;
&lt;p&gt;GBA のノイズも、GBA 側で音量を大きくしてあげると比較的軽減されるので
ゲームが捗りそうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[タオルがきれいになりました]]></title><description><![CDATA[やっぱりちゃんとすすいだのがよかったんですかね。
お日さまの香りっぽいなんかになりました。
……いや、面倒なので漂白するというのも一つの手だと思いました。]]></description><link>https://ny-a.github.io/blog22020-05/cleaned-up-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/cleaned-up-towel/</guid><pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;やっぱりちゃんとすすいだのがよかったんですかね。
お日さまの香りっぽいなんかになりました。
……いや、面倒なので漂白するというのも一つの手だと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[タオルのにおいを熱湯で取ってみます]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-05/clean-up-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/clean-up-towel/</guid><pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;大家族でもない限り (？)、洗濯を毎日するほど洗濯物は
貯まらないと思いますが、私も洗濯機は毎日回していないので、
タオルから嫌なにおいがしてくることがあります。&lt;/p&gt;
&lt;p&gt;基本的に使ったタオルは広げてかけておくようにして、
濡れた状態で細菌が繁殖するのは防ぐようにしているのですが、
部屋干しや乾燥機だとそれでも完全に防ぎきれていません。&lt;/p&gt;
&lt;p&gt;漂白剤を使う方法もありますが、ひとまず熱湯で漬け置きすると
ある程度においが取れるというのを聞いたことがあるので、
時々そうしているのですが、その後もすぐににおうように
なってきていました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.1101.com/yasashikunaitowel/index.html&quot;&gt;ほぼ日刊イトイ新聞 - 「やさしくないタオル」のつくりかた。&lt;/a&gt;
で
「タオルの繊維のなかに、洗剤、汚れ、水分が残されたままの状態」
になっている、という記述があったので、今回は熱湯に
漬け置きした後、(残った汚れを落とすように)よくすすいでから
もう一度熱湯に漬け置きしてみました。&lt;/p&gt;
&lt;p&gt;その後、洗濯が終わって乾燥中ですが、果たしてにおいは
取れているのでしょうか……
これで取れていなかったら漂白剤のお世話になろうと
思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RPi4 8GB 版が出ていました]]></title><description><![CDATA[ksy で見る限り1GB 版はまだ未定のようですが、公式サイトからは表記が消えていたので、
1GB をやめて 8GB にしたのかもしれません。 8GB……もうメモリ容量だけで見ると通常の PC と同じようなレベルになってきましたね。
ますます RPi…]]></description><link>https://ny-a.github.io/blog22020-05/rpi-4-8gb/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/rpi-4-8gb/</guid><pubDate>Fri, 29 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ksy で見る限り1GB 版はまだ未定のようですが、公式サイトからは表記が消えていたので、
1GB をやめて 8GB にしたのかもしれません。&lt;/p&gt;
&lt;p&gt;8GB……もうメモリ容量だけで見ると通常の PC と同じようなレベルになってきましたね。
ますます RPi の活躍できるフィールドが広がりそうで嬉しいのと、
arm64v8 の利用がもっと広まってほしいなあという気持ちがあります。&lt;/p&gt;
&lt;p&gt;GitLab なんかも arm 上に構築するの少し面倒なので……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[HTML5 の fragment identifier について調べました]]></title><description><![CDATA[調べると言っても StackOverFlow に
全て書いてあったのですが…… 全ての要素の id 属性にマッチするものがないかを調べて、次に name 属性を
見るようです。span である必要もないようですね。]]></description><link>https://ny-a.github.io/blog22020-05/html5-fragment-identifier/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/html5-fragment-identifier/</guid><pubDate>Thu, 28 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;調べると言っても &lt;a href=&quot;https://stackoverflow.com/a/484781&quot;&gt;StackOverFlow&lt;/a&gt; に
全て書いてあったのですが……&lt;/p&gt;
&lt;p&gt;全ての要素の id 属性にマッチするものがないかを調べて、次に name 属性を
見るようです。span である必要もないようですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[MediaWiki の重複するセクション名]]></title><description><![CDATA[MediaWiki の重複するセクション名に自動で _2 などの
suffix が付くことを知りました。 ページのソースを見て思ったのですが、セクションの
アンカーには span の id 属性が使われているんですかね？
ずっと a の name…]]></description><link>https://ny-a.github.io/blog22020-05/mediawiki-duplicate-section-name/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/mediawiki-duplicate-section-name/</guid><pubDate>Wed, 27 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;MediaWiki の重複するセクション名に自動で _2 などの
suffix が付くことを知りました。&lt;/p&gt;
&lt;p&gt;ページのソースを見て思ったのですが、セクションの
アンカーには span の id 属性が使われているんですかね？
ずっと a の name 属性しか使えないと思っていたので、
知識のアップデートが必要そうでした。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GBA のノイズが気になる]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-05/gba-noise/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/gba-noise/</guid><pubDate>Tue, 26 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;スピーカーでプレイしていると気にならなかったのですが、
イヤホンでプレイすると低音のノイズが気になりますね……。&lt;/p&gt;
&lt;p&gt;音量を上げてもノイズ自体の音量レベルは上がらないようなので、
音量を下げるような延長ケーブルを使えばノイズは一応改善しそう
ですね。&lt;/p&gt;
&lt;p&gt;既存の音量ボリュームを生かしながら音質の改善ができれば
いいのですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[やさしいタオルを洗濯乾燥機で洗ってみました]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-05/washed-yasashii-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/washed-yasashii-towel/</guid><pubDate>Mon, 25 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;書いてあった通り端が少し縮んでしまっていました。&lt;/p&gt;
&lt;p&gt;手元にアイロンがないので (ヘアアイロンはありますが……)、
手で伸ばしてみたところ、なんかいい感じになったように
思います。&lt;/p&gt;
&lt;p&gt;買い足すにはもう少し耐久性を見たいなとは思いますが、
十分信頼できそうな感じはあります。
ただ、白無地があればなあ……と思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GBA 用の IPS 液晶が売っているようです]]></title><description><![CDATA[秋葉原で GBA 用の IPS 液晶の販売を開始したというツイートを
見かけました。 ただ、これ前から AliExpress なんかで売っているもののよう
なんですよね……
気が向いたら GBA の中古を部品取りに調達 + AliExpress で
IPS…]]></description><link>https://ny-a.github.io/blog22020-05/gba-ips-display/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/gba-ips-display/</guid><pubDate>Sun, 24 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;秋葉原で GBA 用の IPS 液晶の販売を開始したというツイートを
見かけました。&lt;/p&gt;
&lt;p&gt;ただ、これ前から AliExpress なんかで売っているもののよう
なんですよね……
気が向いたら GBA の中古を部品取りに調達 + AliExpress で
IPS 液晶と対応ハウジングを買おうかなと悩んでいます……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[やさしいタオルが届いたので使ってみました]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-05/used-yasashii-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/used-yasashii-towel/</guid><pubDate>Sat, 23 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;すごい吸水力があってびっくりしました。&lt;/p&gt;
&lt;p&gt;私は割と何にでも洗濯乾燥機を使っているので、このタオルが
どのくらい持ってくれるのかが気になるところですが……。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.1101.com/yasashikunaitowel/index.html&quot;&gt;ほぼ日刊イトイ新聞 - 「やさしくないタオル」のつくりかた。&lt;/a&gt;
を読んでみると、乾燥機は割と優秀なようです。
ただ、天日干しよりは縮むようで……。難しいところです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ほぼ日 MOTHER プロジェクト]]></title><description><![CDATA[公式トリビュートコミックとバッグ、買わなきゃ(使命感)]]></description><link>https://ny-a.github.io/blog22020-05/hobonichi-mother-project/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/hobonichi-mother-project/</guid><pubDate>Fri, 22 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;公式トリビュートコミックとバッグ、買わなきゃ(使命感)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[やさしいタオルを買ってみました]]></title><description><![CDATA[MOTHER2 をプレイしてみて、実はすっかり糸井ワールドに魅せられているのですが、
ほぼ日ストアで売っているタオルが気になったので買ってみました。 片面がガーゼになっているタオルは使ったことがないので、届くのが楽しみです。]]></description><link>https://ny-a.github.io/blog22020-05/yasashii-towel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/yasashii-towel/</guid><pubDate>Thu, 21 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;MOTHER2 をプレイしてみて、実はすっかり糸井ワールドに魅せられているのですが、
ほぼ日ストアで売っているタオルが気になったので買ってみました。&lt;/p&gt;
&lt;p&gt;片面がガーゼになっているタオルは使ったことがないので、届くのが楽しみです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[MOTHER 1+2 が届きました]]></title><description><![CDATA[届いたので早速プレイしました。 10年以上前のゲームが当時の実機でそのままプレイできるのは
すごいなあ……と思いました。 あとは……始めたばかりなので……]]></description><link>https://ny-a.github.io/blog22020-05/mother-1-2/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/mother-1-2/</guid><pubDate>Wed, 20 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;届いたので早速プレイしました。&lt;/p&gt;
&lt;p&gt;10年以上前のゲームが当時の実機でそのままプレイできるのは
すごいなあ……と思いました。&lt;/p&gt;
&lt;p&gt;あとは……始めたばかりなので……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki-jp の編集回数が500回を超えていました]]></title><description><![CDATA[統計 - ArchWiki
に表示されていますが、ArchWiki-jp の私の編集回数が500回を超えていました。
過去の統計
を見ると、2019年9月の時点で5回以上編集しているユーザーの一覧がありますが、
50…]]></description><link>https://ny-a.github.io/blog22020-05/500-edits/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/500-edits/</guid><pubDate>Tue, 19 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.jp/index.php/ArchWiki:%E7%B5%B1%E8%A8%88&quot;&gt;統計 - ArchWiki&lt;/a&gt;
に表示されていますが、ArchWiki-jp の私の編集回数が500回を超えていました。
&lt;a href=&quot;https://wiki.archlinux.jp/index.php?title=ArchWiki:%E7%B5%B1%E8%A8%88&amp;#x26;oldid=14913&quot;&gt;過去の統計&lt;/a&gt;
を見ると、2019年9月の時点で5回以上編集しているユーザーの一覧がありますが、
500回以上編集されている方はいなかったようなので、最新のリストで管理人さんと
ボットを除けば1位になったようです。&lt;/p&gt;
&lt;p&gt;……とはいえ、編集数の多くなるような編集方法をしているので、総編集回数だけで
何位だという議論は無駄ではありますが。
また、外部 wiki に移行する前の編集の統計も出ていないようなので、それも
入れると変わってきそうですね。&lt;/p&gt;
&lt;p&gt;この調子で総編集回数を倍増させて(1000回)、ArchWiki の歴史に名を残して(？)
いきたいですね。あと連続編集記録も100日くらいまでは続けたいと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki の新しいページの訳出に慣れてきました]]></title><description><![CDATA[ページ名とか見出しとかはだいたい複数形になっているみたいなイメージが
できてきました。 あと熟語帳で見たことのある単語が出てくると「こんな所で使うんだ〜」と
なりますね。  とか。]]></description><link>https://ny-a.github.io/blog22020-05/archwiki-translating-new-page/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/archwiki-translating-new-page/</guid><pubDate>Mon, 18 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ページ名とか見出しとかはだいたい複数形になっているみたいなイメージが
できてきました。&lt;/p&gt;
&lt;p&gt;あと熟語帳で見たことのある単語が出てくると「こんな所で使うんだ〜」と
なりますね。 &lt;code class=&quot;language-text&quot;&gt;quite a few&lt;/code&gt; とか。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Chromium の GUI を docker コンテナ内で実行する]]></title><description><![CDATA[前は Firefox でやりましたが、Chromium はサンドボックスがあったりして
前のままのコマンドでは動いていませんでした。 以下のコマンドで動きました。といっても  を追加しただけですが。
 なしでも  をつけて chromium…]]></description><link>https://ny-a.github.io/blog22020-05/run-chromium-in-docker/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/run-chromium-in-docker/</guid><pubDate>Sun, 17 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;前は Firefox でやりましたが、Chromium はサンドボックスがあったりして
前のままのコマンドでは動いていませんでした。&lt;/p&gt;
&lt;p&gt;以下のコマンドで動きました。といっても &lt;code class=&quot;language-text&quot;&gt;--privileged&lt;/code&gt; を追加しただけですが。
&lt;code class=&quot;language-text&quot;&gt;--privileged&lt;/code&gt; なしでも &lt;code class=&quot;language-text&quot;&gt;--no-sandbox&lt;/code&gt; をつけて chromium を起動すれば
一応ウィンドウまでは出るのですが、グラフィックドライバがうまく
読み込まれずに真っ白のままになってしまうという問題がありました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sudo docker run --rm \
  -v /tmp/.X11-unix \
  -v ~/.Xauthority:/home/user/.Xauthority \
  -e DISPLAY \
  -e XAUTHORITY=/home/user/.Xauthority \
  --net host \
  --privileged \
  archlinux \
  sh -c &amp;#39;pacman -Syu --noconfirm chromium; useradd user; chown user:user /home/user; su user chromium&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;もう少し &lt;code class=&quot;language-text&quot;&gt;--cap-add&lt;/code&gt; などで Capability を絞ってもいけそうですね。&lt;/p&gt;
&lt;p&gt;Firefox に比べれば安定しているかなという印象ですが、やはり
YouTube などを FullHD で視聴しようとするとタブがクラッシュしてしまうので、
実用には厳しいかなという印象でした。&lt;/p&gt;
&lt;p&gt;わざわざ Docker 内で起動しなくても、psd なんかで毎回リセットするように
してあげればほぼ同じことが実現できるんですけどね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[MOTHER 1+2 を買いました]]></title><description><![CDATA[よく名前の挙がるゲームである MOTHER ですが、今まで遊んだことが
なかったため、いい機会だと思い購入してみました。 バーチャルコンソールでない GBA…]]></description><link>https://ny-a.github.io/blog22020-05/bought-mother-1-2/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/bought-mother-1-2/</guid><pubDate>Sat, 16 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;よく名前の挙がるゲームである MOTHER ですが、今まで遊んだことが
なかったため、いい機会だと思い購入してみました。&lt;/p&gt;
&lt;p&gt;バーチャルコンソールでない GBA 用ソフトはもう新品では入手できない
ため (新古品はありますが高価です) 、状態のよさそうな中古を探して
購入しました。&lt;/p&gt;
&lt;p&gt;GBA 本体の用意は一応できたので、ソフトが届くのが楽しみです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Deno]]></title><description><![CDATA[Node.js の置き換えを目指した Deno というプロジェクトの v1.0 がリリースされていたようです。 Node.js 向けのライブラリの互換性は完全にないのでしょうか。shim なんかを書いて使えるのであれば
Express や Nest.js…]]></description><link>https://ny-a.github.io/blog22020-05/deno-land/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/deno-land/</guid><pubDate>Fri, 15 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Node.js の置き換えを目指した Deno というプロジェクトの v1.0 がリリースされていたようです。&lt;/p&gt;
&lt;p&gt;Node.js 向けのライブラリの互換性は完全にないのでしょうか。shim なんかを書いて使えるのであれば
Express や Nest.js なんかを使えるようにしてみたいですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[MOTHER をやったことがない]]></title><description><![CDATA[私はゲームの MOTHER はプレイしたことがないんですよね、
今から買ってやるとしたら何がいいんでしょうか？
GBA？ Wii U？]]></description><link>https://ny-a.github.io/blog22020-05/mother/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/mother/</guid><pubDate>Thu, 14 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;私はゲームの MOTHER はプレイしたことがないんですよね、
今から買ってやるとしたら何がいいんでしょうか？
GBA？ Wii U？&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ノート PC が突然勝手に起動するようになっていました]]></title><description><![CDATA[しばらく放置していたノート PC を久しぶりに起動しようとしたのですが、
電源ボタンを押しても反応がありませんでした。
放置していた期間中ずっと AC…]]></description><link>https://ny-a.github.io/blog22020-05/reboot-spontaneously/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/reboot-spontaneously/</guid><pubDate>Wed, 13 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;しばらく放置していたノート PC を久しぶりに起動しようとしたのですが、
電源ボタンを押しても反応がありませんでした。
放置していた期間中ずっと AC アダプタを接続していたので、電源関係の
問題ではないと思ったのですが、一旦電源を外してみたり、再度接続して
充電が完了するまで待ったりしてみても起動しませんでした。&lt;/p&gt;
&lt;p&gt;諦めてしばらく電源ボタンを連打していたら、いつのまにか起動していました。
Arch のアップデートなどを済ませて電源を落としたら、今度はなぜか勝手に
起動するようになってしまいました。
しかも、しばらく放置していると勝手に電源が落ちているようでした。
WoL などは設定していないはずで、マジックパケットなども飛んでいないはずですが、
念のため LAN ケーブルを外して電源だけ接続している状態にしても改善しません
でした。&lt;/p&gt;
&lt;p&gt;AC アダプタを外したり、閉じた状態にしておけば……と試してみても、一向に
改善しませんでした。
これは電池が空になるまで続くのか……と思っていたのですが、電源を入れたり
切ったりしてみているうちに起きなくなっていました。&lt;/p&gt;
&lt;p&gt;今のところどちらの問題も再発はしていないようですが、一体原因は何で、
PC が壊れているのかどうかも分かりませんが、もうしばらく様子を見ようと
思います……。
電源 (少なくとも LED) が消えた状態から勝手に起動するようなロジックが
存在するのでしょうか、それとも外来ノイズか何かでしょうか。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[リプトンブランドの販売権がキーコーヒーにあることを知りました]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-05/lipton-keycoffee/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/lipton-keycoffee/</guid><pubDate>Tue, 12 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;私はコーヒーより紅茶を飲むことが多く、リプトンのイエローラベルなどを
買うことがあるのですが、値札を見るとキーコーヒーと書いてあったので
調べてみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.keycoffee.co.jp/news/2016/161024.html&quot;&gt;キーコーヒーのニュース&lt;/a&gt;
を見ると、ユニリーバと販売総代理店契約を結んだと書かれています。&lt;/p&gt;
&lt;p&gt;パッケージにも製造者であるユニリーバの記載しかないため、今まで気付き
ませんでした。&lt;/p&gt;
&lt;p&gt;よく考えるとキーコーヒーのコーヒー(？)もあまり飲んだことがないので、
機会があれば飲んでみたいと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[マルチアーキテクチャ対応の Docker イメージを作りたい]]></title><description><![CDATA[multi-arch 対応の docker image をビルドしたいと思ったのですが、
docker manifest サブコマンドや docker buildx サブコマンドはまだ
experimental な上、manifest を作るには insecure…]]></description><link>https://ny-a.github.io/blog22020-05/want-to-build-multi-arch-docker-image/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/want-to-build-multi-arch-docker-image/</guid><pubDate>Mon, 11 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;multi-arch 対応の docker image をビルドしたいと思ったのですが、
docker manifest サブコマンドや docker buildx サブコマンドはまだ
experimental な上、manifest を作るには insecure ではない registry
が必要そうで、事前のセットアップが少し大変そうで一旦諦めました。&lt;/p&gt;
&lt;p&gt;LAN 内に insecure な registry を立てて遊ぼうと思っていたのですが、
目論見が外れた形ですね。きちんと外部に公開して Let’s encrypt で
SSL 対応して、認証も……とやってもいいのですが、今は少し元気が足りず……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[veto という英単語]]></title><description><![CDATA[選挙の拒否権といった意味で、ラテン語由来っぽいですね。 言語の学習もエンドレスですね……]]></description><link>https://ny-a.github.io/blog22020-05/veto/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/veto/</guid><pubDate>Sun, 10 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;選挙の拒否権といった意味で、ラテン語由来っぽいですね。&lt;/p&gt;
&lt;p&gt;言語の学習もエンドレスですね……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bugwranglers の訳し方]]></title><description><![CDATA[バグハンター……バグ管理人……バグレポーター……バグレポートのモデレータ……バグのカウボーイ…… バグラングラー(雑) Trusted User も訳されていない気がするのでそのままでいいかとなりました。]]></description><link>https://ny-a.github.io/blog22020-05/translation-of-bugwranglers/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/translation-of-bugwranglers/</guid><pubDate>Sat, 09 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;バグハンター……バグ管理人……バグレポーター……バグレポートのモデレータ……バグのカウボーイ……&lt;/p&gt;
&lt;p&gt;バグラングラー(雑)&lt;/p&gt;
&lt;p&gt;Trusted User も訳されていない気がするのでそのままでいいかとなりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[env -C を知りました]]></title><description><![CDATA[env コマンドってあまり使わないんですが (env 省略して  のようにしがち)、
env コマンドの help を見てみたら  というオプションを見つけました。 C は chdir の C…]]></description><link>https://ny-a.github.io/blog22020-05/env-C/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/env-C/</guid><pubDate>Fri, 08 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;env コマンドってあまり使わないんですが (env 省略して &lt;code class=&quot;language-text&quot;&gt;LANG=C ls&lt;/code&gt; のようにしがち)、
env コマンドの help を見てみたら &lt;code class=&quot;language-text&quot;&gt;-C&lt;/code&gt; というオプションを見つけました。&lt;/p&gt;
&lt;p&gt;C は chdir の C ですね。&lt;code class=&quot;language-text&quot;&gt;(cd /hoge; foo)&lt;/code&gt; みたいなことができるということですね。&lt;/p&gt;
&lt;p&gt;ちょっと便利だし使いたいとは思いますが、使ってるの見たことないので知名度は
かなり低いんじゃないかな……と思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[losetup の -P オプションがうまく働いてくれない]]></title><description><![CDATA[前に  が便利という記事を書いたような気がするのですが、
今日試したらなぜかうまく動いてくれませんでした。 losetup のデバッグをするのもいいんですが、とりあえず動いてくれないと
いちいち offset…]]></description><link>https://ny-a.github.io/blog22020-05/losetup-p-did-not-work-properly/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/losetup-p-did-not-work-properly/</guid><pubDate>Thu, 07 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;前に &lt;code class=&quot;language-text&quot;&gt;losetup -fP&lt;/code&gt; が便利という記事を書いたような気がするのですが、
今日試したらなぜかうまく動いてくれませんでした。&lt;/p&gt;
&lt;p&gt;losetup のデバッグをするのもいいんですが、とりあえず動いてくれないと
いちいち offset を計算しないといけなくて面倒だったので、手動で
&lt;code class=&quot;language-text&quot;&gt;partprobe&lt;/code&gt; を呼び出して対応しました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# losetup -f image.img
# partprobe /dev/loop1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じでなんとかなってくれると思います。多分。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GPG キーをきちんと管理したい]]></title><description><![CDATA[やっと無線アダプタのない RPi を購入したのでそろそろきちんと管理したいのですが、
gpg キーのパスフレーズや暗号化、バックアップのあたりでうまい方法がないか
探しています。 仕事で使うものや OSS で使うものなど、メールアドレスベースで gpg…]]></description><link>https://ny-a.github.io/blog22020-05/want-to-manage-gpg-key-properly/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/want-to-manage-gpg-key-properly/</guid><pubDate>Wed, 06 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;やっと無線アダプタのない RPi を購入したのでそろそろきちんと管理したいのですが、
gpg キーのパスフレーズや暗号化、バックアップのあたりでうまい方法がないか
探しています。&lt;/p&gt;
&lt;p&gt;仕事で使うものや OSS で使うものなど、メールアドレスベースで gpg キーを分けて
いると、定期的な expiration の更新だけで手間がかかって仕方ありません。
パスフレーズを保存しておくにも gpg にパスフレーズを渡すのが大変そうですし、
パスフレーズなしにしてきちんと暗号化して保管するのも、万一漏れてしまったときの
ことを考えてしまって安心できません。&lt;/p&gt;
&lt;p&gt;まあ、更新しやすい脆弱なパスフレーズを使っていたら、万一漏れてしまったら
ほとんど一緒だと思うんですが……。&lt;/p&gt;
&lt;p&gt;あとは RPi でも /boot を除いたディスク暗号化をしておきたいなと思いました。
initramfs あたりの仕組みは x86_64 と同じなようなので、適宜 encrypt フックなどを
使えば達成できそうかなと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[通信機器の AC アダプタが多すぎる]]></title><description><![CDATA[ONU、TA、スイッチ、外付け HDD ケース…… どれも 12V なのに専用の AC アダプタがついていて、電源タップも
悲惨なことになってきました。 ATX 電源と DC ジャックで電源をまとめようかなと思い始めました。
12V のスイッチング電源を考えていたのですが、ATX…]]></description><link>https://ny-a.github.io/blog22020-05/too-many-ac-adaptors/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/too-many-ac-adaptors/</guid><pubDate>Tue, 05 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ONU、TA、スイッチ、外付け HDD ケース……&lt;/p&gt;
&lt;p&gt;どれも 12V なのに専用の AC アダプタがついていて、電源タップも
悲惨なことになってきました。&lt;/p&gt;
&lt;p&gt;ATX 電源と DC ジャックで電源をまとめようかなと思い始めました。
12V のスイッチング電源を考えていたのですが、ATX 電源の方が安価なのと、
5V が出ているので USB の充電も一緒にまかなえるので、ATX 電源の
方がよさそうに思いました。&lt;/p&gt;
&lt;p&gt;……と思っていたら、玄人思考なんかの ATX 電源が品薄になっているよう
でした。6月になったら入るかな。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[bluez-alsa-git の最新バージョンが動かない気がします]]></title><description><![CDATA[pulseaudio を避けて bluez-alsa を使っているのですが、bluez-alsa-git の
最新の 2.1.0.r43.g49ad348-1-x86_64 で bluealsa-aplay の再生に問題が
あるような気がしました。 とりあえず 2.0.0.r…]]></description><link>https://ny-a.github.io/blog22020-05/bluez-alsa-git-wont-work/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/bluez-alsa-git-wont-work/</guid><pubDate>Mon, 04 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;pulseaudio を避けて bluez-alsa を使っているのですが、bluez-alsa-git の
最新の 2.1.0.r43.g49ad348-1-x86_64 で bluealsa-aplay の再生に問題が
あるような気がしました。&lt;/p&gt;
&lt;p&gt;とりあえず 2.0.0.r0 に落としたら動いている気がするのでこれで使おうと
思います。
問題切り分けしたいですが、再起動しないと反映しないようなので少し
面倒だなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki の ArchWiki 名前空間の同期が終わった気がします]]></title><description><![CDATA[ArchWiki 名前空間の同期が終わった気がします。翻訳の速度が上がってきたのか、
より慣れてきたのか、今までの (ヘルプ名前空間といった) ページよりも早く
完了できたような気がしています。 いや、単に同期する量が少なかっただけかもしれませんが。]]></description><link>https://ny-a.github.io/blog22020-05/finished-sync-archwiki-namespace/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/finished-sync-archwiki-namespace/</guid><pubDate>Sun, 03 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchWiki 名前空間の同期が終わった気がします。翻訳の速度が上がってきたのか、
より慣れてきたのか、今までの (ヘルプ名前空間といった) ページよりも早く
完了できたような気がしています。&lt;/p&gt;
&lt;p&gt;いや、単に同期する量が少なかっただけかもしれませんが。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[circa]]></title><description><![CDATA[“circa” って “about” みたいな意味の単語なんですね、初めて見ました。]]></description><link>https://ny-a.github.io/blog22020-05/circa/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/circa/</guid><pubDate>Sat, 02 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;“circa” って “about” みたいな意味の単語なんですね、初めて見ました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[国から配布されている布マスクが届きました]]></title><description><![CDATA[いつ届くんだろうと思っていたら今日届いていました。]]></description><link>https://ny-a.github.io/blog22020-05/received-nonmedial-mask/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-05/received-nonmedial-mask/</guid><pubDate>Fri, 01 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;いつ届くんだろうと思っていたら今日届いていました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RPi の MAC アドレスを電源を入れないで確認したい]]></title><description><![CDATA[RPi がたくさんあると MAC アドレスや固体の識別できる情報を
電源がなくても(ハードウェアの見た目のみで)確認したくなったり
すると思うのですが、調べてみた限りではそのような方法は
なさそうでした……。 MAC アドレスは EEPROM ではなく CPU のシリアル No…]]></description><link>https://ny-a.github.io/blog22020-04/want-to-get-rpi-mac-address-from-without-power/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/want-to-get-rpi-mac-address-from-without-power/</guid><pubDate>Thu, 30 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;RPi がたくさんあると MAC アドレスや固体の識別できる情報を
電源がなくても(ハードウェアの見た目のみで)確認したくなったり
すると思うのですが、調べてみた限りではそのような方法は
なさそうでした……。&lt;/p&gt;
&lt;p&gt;MAC アドレスは EEPROM ではなく CPU のシリアル No を使っている
ようなので、CPU の情報が基板に記載されていれば……
その可能性は低そうですね。&lt;/p&gt;
&lt;p&gt;唯一？あるのは製造番号らしき16桁の番号の入ったデータマトリクスと、
いくつかの日付のような印字のみでしょうか。
このあたりの情報も出ていれば嬉しいのですが、まあ誰も
データマトリクスなんて読まないですよね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[pangox-compat の削除が提案されています]]></title><description><![CDATA[pangox-compat、ビルドが失敗するので bug 報告が立っていたのですが、
ついにメーリングリストで削除が提案されていました。 公式リポジトリのパッケージが削除されたら AUR の lib32 の方も
deletion request 出してよさそうですかね。]]></description><link>https://ny-a.github.io/blog22020-04/dropping-pangox-compat/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/dropping-pangox-compat/</guid><pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;pangox-compat、ビルドが失敗するので bug 報告が立っていたのですが、
ついにメーリングリストで削除が提案されていました。&lt;/p&gt;
&lt;p&gt;公式リポジトリのパッケージが削除されたら AUR の lib32 の方も
deletion request 出してよさそうですかね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[CVE の件数]]></title><description><![CDATA[CVE の件数って、日によって全然違うんですね。
半日で5件くらいしかないときもあれば、10…]]></description><link>https://ny-a.github.io/blog22020-04/cve-amount/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/cve-amount/</guid><pubDate>Tue, 28 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;CVE の件数って、日によって全然違うんですね。
半日で5件くらいしかないときもあれば、100件くらい出ているときもある感じでしょうか。&lt;/p&gt;
&lt;p&gt;まあ、報告があった(？)ものをそのまま出していればむらになってしまうのは
仕方なさそうですね……。
ただ、ざっとは目を通すようにしているので、どのくらい時間がかかりそうか
事前に見積っておくのが難しいなと感じました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[住民票のレシート]]></title><description><![CDATA[最近は便利なものでコンビニのマルチコピー機で取得することができます。
ファミリーマートで住民票を取得したのですが、レシートが B…]]></description><link>https://ny-a.github.io/blog22020-04/receipt-of-copying-certificate-of-residence/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/receipt-of-copying-certificate-of-residence/</guid><pubDate>Mon, 27 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;最近は便利なものでコンビニのマルチコピー機で取得することができます。
ファミリーマートで住民票を取得したのですが、レシートが B5 の普通紙で
出てきてびっくりしました。&lt;/p&gt;
&lt;p&gt;コピー機自体もレシート用紙への印字機能を持っていたはずですが、
地方公共団体情報システム機構の都合でもあるのでしょうか。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki の Help 名前空間のページの同期が完了しました]]></title><description><![CDATA[もう1ヶ月とちょっと日本語版 ArchWiki の翻訳更新作業を続けているのですが、
ついに(？) Help 名前空間のページだけですが全て最新に更新することができました。 日本語版の更新を続けている方は本当に少ないようで、(編集を細かく分割しているとはいえ)
bot を除いて…]]></description><link>https://ny-a.github.io/blog22020-04/completed-sync-archwiki-help-pages/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/completed-sync-archwiki-help-pages/</guid><pubDate>Sun, 26 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;もう1ヶ月とちょっと日本語版 ArchWiki の翻訳更新作業を続けているのですが、
ついに(？) Help 名前空間のページだけですが全て最新に更新することができました。&lt;/p&gt;
&lt;p&gt;日本語版の更新を続けている方は本当に少ないようで、(編集を細かく分割しているとはいえ)
bot を除いて3番目くらいになるのは悲しいですね……。
(外部 wiki への分割前の編集は追えていないので分からないですが……。)&lt;/p&gt;
&lt;p&gt;さて、次は ArchWiki 名前空間に着手しましょうか。本当にエンドレスな作業で
エンドレスだなあと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gridsome のビルドが壊れてしまいました]]></title><description><![CDATA[babel のバージョンでビルドが落ちているだけだと思って放置して
いたのですが、バージョン上げてみても落ちていたので壊れて
しまった……という感じです。 バージョン下げたりして直そうと思っていますが、gridsome の方を
放置してしまっているのがそもそもの問題ですよね……。]]></description><link>https://ny-a.github.io/blog22020-04/broken-gridsome-build/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/broken-gridsome-build/</guid><pubDate>Sat, 25 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;babel のバージョンでビルドが落ちているだけだと思って放置して
いたのですが、バージョン上げてみても落ちていたので壊れて
しまった……という感じです。&lt;/p&gt;
&lt;p&gt;バージョン下げたりして直そうと思っていますが、gridsome の方を
放置してしまっているのがそもそもの問題ですよね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[名前の変更]]></title><description><![CDATA[昨日のポストはとても分かりにくい名前が変わった報告だったのですが、
GitHub…]]></description><link>https://ny-a.github.io/blog22020-04/changed-name/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/changed-name/</guid><pubDate>Fri, 24 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;昨日のポストはとても分かりにくい名前が変わった報告だったのですが、
GitHub の障害でデプロイされていませんでした……。&lt;/p&gt;
&lt;p&gt;名前が変わって、まあ名前が変わったのですが、手続きが大変ですね。
ネット銀行はいいんですが、メガバンクの口座は支点に行かないと
手続きができないようですね。社会情勢も鑑みてネットで済ませられれば
よいのですが……。&lt;/p&gt;
&lt;p&gt;仕事は旧姓で続けようかなと思っています。OSS 活動は実名に切り変えても
いいかなーと思ってはいますが、Arch Linux JP コミュニティだと
ハンドルネームの方が多いかなという感じなので悩んでいます。
海外だとどうなんでしょう……ハンドルネームの方が多いように思っていますが、
実名を少しもじっただけだったりしたら分からないので……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[職権修正]]></title><description><![CDATA[…]]></description><link>https://ny-a.github.io/blog22020-04/amend-ex-oficio/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/amend-ex-oficio/</guid><pubDate>Thu, 23 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;私の語感が気に入っている言葉に「職権修正」というのがあります。&lt;/p&gt;
&lt;p&gt;あまり聞き慣れない言葉だと思いますが、住民票などに記載されたり
する場合がありますね。
ご両親の住民票に載っている方もいるかもしれませんね。&lt;/p&gt;
&lt;p&gt;私は役所に勤めているわけではないのであまり詳しくありませんが、
住民票などの記載事項変更には「届出」・「通知」・そして「職権」の
3種類があるようで、届出は文字通り本人などからの届出、通知は
他の自治体から(あるいは裁判の結果？)の通知、そしてそれ以外の場合は
職権ということみたいです。
住民票以外にもマイナンバーカードなどにも記載されることがあるようで、
今まで知り合いのカードに記載されているのを見たことがあって、
羨しく思っていました。&lt;/p&gt;
&lt;p&gt;「職権修正」ってかっこいいと思いませんか？届出でも通知でもなく、
普段触れることのできない住民票というシステムを、(見かけは)いとも
簡単に「職権」により修正してしまうなんて……。&lt;/p&gt;
&lt;p&gt;さて、その「職権修正」ですが、今日私の住民票とマイナンバーカードにも
記載されました。新しい住民票の記載内容と共に、これからも頑張って
いこうと思います。&lt;/p&gt;
&lt;p&gt;あまり関係はないですが、 &lt;code class=&quot;language-text&quot;&gt;ex officio&lt;/code&gt; という英単語を初めて知りました。
見ただけで分かるようにラテン語由来ですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[dhcpcd が core から extra に移動されるかもしれません]]></title><description><![CDATA[Arch Linux のメーリングリストを眺めていたら、dhcpcd の移動に関する話題が
上がっていました。 どうやら dhcpcd の利用率が低下していて、core には他の代替がある
( と書かれていましたが、 のことですかね？)
ため、extra…]]></description><link>https://ny-a.github.io/blog22020-04/move-dhcpcd-from-core/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/move-dhcpcd-from-core/</guid><pubDate>Wed, 22 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Arch Linux のメーリングリストを眺めていたら、dhcpcd の移動に関する話題が
上がっていました。&lt;/p&gt;
&lt;p&gt;どうやら dhcpcd の利用率が低下していて、core には他の代替がある
(&lt;code class=&quot;language-text&quot;&gt;networkd&lt;/code&gt; と書かれていましたが、&lt;code class=&quot;language-text&quot;&gt;dhclient&lt;/code&gt; のことですかね？)
ため、extra リポジトリに移動することを提案していました。&lt;/p&gt;
&lt;p&gt;pacman を使う上では core も extra も変わりはないのですが、
他のクライアントも使ってみてもいいかもしれませんね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ひかり電話の SIP がちゃんと認証してそうでした]]></title><description><![CDATA[契約しているひかり電話の SIP リクエストをキャプチャしてみたら
ちゃんと(？) Digest 認証してありました。 適当に自前 SIP サーバー建てて遊べるかなと思ったのですが、
ファームウェア解析とかしてパスワード探さないと厳しそうですね……。]]></description><link>https://ny-a.github.io/blog22020-04/ip-phone-for-optical-internet/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/ip-phone-for-optical-internet/</guid><pubDate>Tue, 21 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;契約しているひかり電話の SIP リクエストをキャプチャしてみたら
ちゃんと(？) Digest 認証してありました。&lt;/p&gt;
&lt;p&gt;適当に自前 SIP サーバー建てて遊べるかなと思ったのですが、
ファームウェア解析とかしてパスワード探さないと厳しそうですね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[systemd-cryptsetup]]></title><description><![CDATA[ArchLinuxARM で初期インストール時から  が入っていて
気になっていたのですが、systemd が  に依存していることを
知りました。 ArchLinuxARM を使ってエアギャップコンピュータ上で GPG…]]></description><link>https://ny-a.github.io/blog22020-04/systemd-cryptsetup/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/systemd-cryptsetup/</guid><pubDate>Mon, 20 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchLinuxARM で初期インストール時から &lt;code class=&quot;language-text&quot;&gt;cryptsetup&lt;/code&gt; が入っていて
気になっていたのですが、systemd が &lt;code class=&quot;language-text&quot;&gt;cryptsetup&lt;/code&gt; に依存していることを
知りました。&lt;/p&gt;
&lt;p&gt;ArchLinuxARM を使ってエアギャップコンピュータ上で GPG 鍵を管理しようと
思っていたときに、バックアップ時に &lt;code class=&quot;language-text&quot;&gt;LUKS&lt;/code&gt; を使おうと思ったら既に
&lt;code class=&quot;language-text&quot;&gt;cryptsetup&lt;/code&gt; が入っていて驚きました。
メインのマシン上ではフルディスク暗号化を使用しているため明示的に
インストールしていたので気付きませんでした。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;systemd-cryptsetup&lt;/code&gt;、起動時に &lt;code class=&quot;language-text&quot;&gt;crypttab&lt;/code&gt; に記載されている暗号化
パーティションをマウントするために使われているようですね。
私は initramfs 内でマウントしているのでしばらく使うことはなさそうですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby のビルドが落ちていたので直しました]]></title><description><![CDATA[node 13.13 に上がってから babel を 7.9.0 に上げるまでの間、ビルドが
落ちていました。 node 13.12 に下げてみた後、babel を 7.9.0`に上げて解決しました。 babel/babel #1142…]]></description><link>https://ny-a.github.io/blog22020-04/failing-gatsby-build-on-node-13-13/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/failing-gatsby-build-on-node-13-13/</guid><pubDate>Sun, 19 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;node 13.13 に上がってから babel を 7.9.0 に上げるまでの間、ビルドが
落ちていました。&lt;/p&gt;
&lt;p&gt;node 13.12 に下げてみた後、babel を 7.9.0`に上げて解決しました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/issues/11427&quot;&gt;babel/babel #11427&lt;/a&gt;
あたりを参考にしました。&lt;/p&gt;
&lt;p&gt;……gridsome も落ちてるんですが、そもそも放置しているので何とかしたい……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[syui さんのスポンサーになってみました]]></title><description><![CDATA[GitHub Sponsors…]]></description><link>https://ny-a.github.io/blog22020-04/sponsor-of-syui/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/sponsor-of-syui/</guid><pubDate>Sat, 18 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;GitHub Sponsors でスポンサーを募集していたので、試しに(？)スポンサーに
なってみました。&lt;/p&gt;
&lt;p&gt;私は技術系ばっかりでデザイン系はあまり触れてこなかったので、デザインとか
できる人はすごいなと思います。
関係ないですが、過去のイラストアイコンはほとんどフォロワーさんに描いて
もらっていたくらいです。&lt;/p&gt;
&lt;p&gt;……普通ならここで syui さんのことを賞賛して褒め称える文章があと10000字くらい
続くのでしょうが、残念ながらそうではないようです。
今まで通り毎日芝を生やすのと同じように、気が変わるまでスポンサー続けると思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Git に git サブコマンドを追加してみました]]></title><description><![CDATA[私はよくシェルに  と打ち込んでから行う操作を考えて、その後再度  と入力してしまう
傾向にあります。 を実行するのはほぼ癖といってもいいかもしれません。 よく知られているように、git…]]></description><link>https://ny-a.github.io/blog22020-04/git-git-subcommand/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/git-git-subcommand/</guid><pubDate>Fri, 17 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;私はよくシェルに &lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; と打ち込んでから行う操作を考えて、その後再度 &lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; と入力してしまう
傾向にあります。&lt;code class=&quot;language-text&quot;&gt;git git status&lt;/code&gt; を実行するのはほぼ癖といってもいいかもしれません。&lt;/p&gt;
&lt;p&gt;よく知られているように、git にはカスタマイズ可能なサブコマンド機能があります。
任意の実行ファイルを起動することも可能です。そこで、この機能を使って &lt;code class=&quot;language-text&quot;&gt;git git&lt;/code&gt; に
対処してみようと思いました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git config --global alias.git &amp;#39;!git&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上記を実行すると、&lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; の後に &lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; が何回続いても正常に(？)コマンドが実行されるようになります。
これで &lt;code class=&quot;language-text&quot;&gt;git git status&lt;/code&gt; などと打ってエラーになることもなくなりました。&lt;/p&gt;
&lt;p&gt;さて、&lt;code class=&quot;language-text&quot;&gt;git git&lt;/code&gt; でエラーになる問題は解決したわけですが、新たに別の問題が出てきました。
それは……このページが &lt;code class=&quot;language-text&quot;&gt;git git&lt;/code&gt; になっていることです……。&lt;/p&gt;
&lt;p&gt;不思議なことにこの alias を設定した後は &lt;code class=&quot;language-text&quot;&gt;git git&lt;/code&gt; と打つことも減ったような気がします。
せっかく設定したんですけどね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchLinux のユーザーは若い人が多いように思いました]]></title><description><![CDATA[なんか若い人が多いような気がしました。それだけです。
自分も人のことは言えないのですが……。]]></description><link>https://ny-a.github.io/blog22020-04/young-archlinux-users/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/young-archlinux-users/</guid><pubDate>Thu, 16 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;なんか若い人が多いような気がしました。それだけです。
自分も人のことは言えないのですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ブログを毎日書くのがつらくなってきました]]></title><description><![CDATA[いつもツイートくらいの長さなんだからシュッと書けば終わりなのに
なんかうまく1日の中で時間を見つけて書くのは難しいですね。 ArchWiki はとりあえず続いているのでよしとしたいところですが……
とはいえ100ポスト超えているので続けるつもりではいます。]]></description><link>https://ny-a.github.io/blog22020-04/time-shortage-to-writing-blog/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/time-shortage-to-writing-blog/</guid><pubDate>Wed, 15 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;いつもツイートくらいの長さなんだからシュッと書けば終わりなのに
なんかうまく1日の中で時間を見つけて書くのは難しいですね。&lt;/p&gt;
&lt;p&gt;ArchWiki はとりあえず続いているのでよしとしたいところですが……
とはいえ100ポスト超えているので続けるつもりではいます。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Kyash の新しいカードで EMV 決済をしてみました]]></title><description><![CDATA[イトーヨーカドーで EMV 決済をしました。普通に PIN なしで EMV 決済できました。 ……本当はコンタクトレスで決済したかったんですが、イトーヨーカドーってまだ
対応していないんですね……。セブンイレブンも…]]></description><link>https://ny-a.github.io/blog22020-04/kyash-emv/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/kyash-emv/</guid><pubDate>Tue, 14 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;イトーヨーカドーで EMV 決済をしました。普通に PIN なしで EMV 決済できました。&lt;/p&gt;
&lt;p&gt;……本当はコンタクトレスで決済したかったんですが、イトーヨーカドーってまだ
対応していないんですね……。セブンイレブンも6月までは対応していないようですし、
イトーヨーカドーはそれと同じかそれよりも後でしょうか……。&lt;/p&gt;
&lt;p&gt;まあ、QUICPay 使えばいい話なんですけどね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Network Security Services]]></title><description><![CDATA[nss のパッケージングに問題があった(soname ファイルが不足していた)ため
ニュースが出ていたので少しだけ調べてみました。 ArchLinux に nss というパッケージが入っていることは知っていたのですが、
これ Molliza…]]></description><link>https://ny-a.github.io/blog22020-04/network-security-service/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/network-security-service/</guid><pubDate>Mon, 13 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;nss のパッケージングに問題があった(soname ファイルが不足していた)ため
ニュースが出ていたので少しだけ調べてみました。&lt;/p&gt;
&lt;p&gt;ArchLinux に nss というパッケージが入っていることは知っていたのですが、
これ Molliza のプロジェクトだったんですね……。&lt;/p&gt;
&lt;p&gt;chromium, firefox, electron, JDK, libreoffice あたりが依存しているので
デスクトップユーザーだと入っている確率が高そうですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[新しい Kyash Card を GooglePay に登録してみました]]></title><description><![CDATA[昨日は警告が出たので登録できないのかと思ったのですが、やってみたら
登録できました。 最近は 6gram を使っているので決済はまだ試していませんが、
せっかくなので Visa タッチ決済(payWave だったやつ)も試したいですね。]]></description><link>https://ny-a.github.io/blog22020-04/use-new-kyash-card-with-google-pay/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/use-new-kyash-card-with-google-pay/</guid><pubDate>Sun, 12 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;昨日は警告が出たので登録できないのかと思ったのですが、やってみたら
登録できました。&lt;/p&gt;
&lt;p&gt;最近は 6gram を使っているので決済はまだ試していませんが、
せっかくなので Visa タッチ決済(payWave だったやつ)も試したいですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[新しい Kyash Card が届きました]]></title><description><![CDATA[申し込んでいた新しい Kyash Card が届きました。 カード表面と IC…]]></description><link>https://ny-a.github.io/blog22020-04/new-kyash-card/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/new-kyash-card/</guid><pubDate>Sat, 11 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;申し込んでいた新しい Kyash Card が届きました。&lt;/p&gt;
&lt;p&gt;カード表面と IC / ストライプの向きが今までのカードと逆なのは、
実験的要素なんでしょうか？
正直プリペイドカードでカード表面はあまり重要ではないと
思っていて、ゴールドカード以上だったら分かるのですが、
もしかしたら三井住友系で将来導入を検討しているのでしょうか。&lt;/p&gt;
&lt;p&gt;それと、Google Pay 対応はいつになるんでしょうか……
(確認はしていないですが、警告が出ていたので……。)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Qwiklabs を試してみました]]></title><description><![CDATA[COVID-19 の応援でしょうか、Google が Qwiklabs などを1ヶ月間無料提供しているようなので
試してみました。 Start your learning journey with Google Cloud today…]]></description><link>https://ny-a.github.io/blog22020-04/try-qwiklabs/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/try-qwiklabs/</guid><pubDate>Fri, 10 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;COVID-19 の応援でしょうか、Google が Qwiklabs などを1ヶ月間無料提供しているようなので
試してみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://inthecloud.withgoogle.com/training-discount/register.html&quot;&gt;Start your learning journey with Google Cloud today&lt;/a&gt;
などから無料で開始することができます。&lt;/p&gt;
&lt;p&gt;ひとまず、Google Cloud Essentials を試してみました。&lt;/p&gt;
&lt;p&gt;Qwiklabs とは直接関係ないですが、GCP の Cloud Shell ってすごいサクサク動くんですね……
ローカルと遜色ないほどな気がしました。
海外の安い VPS などでブラウザ上で VNC するような shell を使っていた時期があったので、
その進化には驚くばかりです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RPi に aarch64 の ArchLinux を入れて RTC モジュールを有効化してみる]]></title><description><![CDATA[ArchLinuxARM では簡単に RTC が有効化できた記憶があったのですが、再度試してみると
うまくいかなかったのでいろいろ試してみました。 まず、前に設定して動いている Raspbian…]]></description><link>https://ny-a.github.io/blog22020-04/rtc-module-on-archlinuxarm/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/rtc-module-on-archlinuxarm/</guid><pubDate>Thu, 09 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchLinuxARM では簡単に RTC が有効化できた記憶があったのですが、再度試してみると
うまくいかなかったのでいろいろ試してみました。&lt;/p&gt;
&lt;p&gt;まず、前に設定して動いている Raspbian の &lt;code class=&quot;language-text&quot;&gt;dmesg&lt;/code&gt; を見てみます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[    5.310771] rtc-ds1307 1-0068: registered as rtc0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このログの通り、 &lt;code class=&quot;language-text&quot;&gt;/dev/rtc0&lt;/code&gt; ができていて、時刻同期はスクリプトで行われます。&lt;/p&gt;
&lt;p&gt;一方、ArchLinuxARM だと以下のようなログが出ていました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[    7.114025] hctosys: unable to open rtc device (rtc0
...
[    7.258978] i2c-bcm2835 3f805000.i2c: Could not read clock-frequency property&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/dev/rtc0&lt;/code&gt; も起動時は存在しない状態で、
&lt;code class=&quot;language-text&quot;&gt;echo &amp;#39;ds1307 0x68&amp;#39; | sudo tee /sys/bus/i2c/devices/i2c-1/new_device&lt;/code&gt;
を実行しないといけません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://archlinuxarm.org/forum/viewtopic.php?t=11802&quot;&gt;https://archlinuxarm.org/forum/viewtopic.php?t=11802&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/Alex131089/de45d552372a9296abbbbe407ae52180&quot;&gt;https://gist.github.com/Alex131089/de45d552372a9296abbbbe407ae52180&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://raspberrypi.stackexchange.com/questions/38186/how-to-install-real-time-clock-rtc-on-raspbian&quot;&gt;https://raspberrypi.stackexchange.com/questions/38186/how-to-install-real-time-clock-rtc-on-raspbian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記のようなサイトをいくつか参照したのですが、ずばりの(？)解決策は
なさそうです。よく考えたら Raspbian と違い aarch64 でした……&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;hctosys&lt;/code&gt; は &lt;code class=&quot;language-text&quot;&gt;systemd&lt;/code&gt; の起動前に(initramfs で)実行されているようです。
initramfs 内の udev に認識させればいけそうでしょうか。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RPi 上の ArchLinuxArm での DNSSEC signature expired エラーの対処]]></title><description><![CDATA[DNSSEC validation failed エラー
に、始めの方は  エラーが出ていたと書いていました。
再インストールの際も同じ問題に遭遇したので対処法をメモしておきます。 といっても、時間を合わせるだけです。RPi には RTC…]]></description><link>https://ny-a.github.io/blog22020-04/dnssec-signature-expired-on-rpi/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/dnssec-signature-expired-on-rpi/</guid><pubDate>Wed, 08 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-02/dnssec-error/&quot;&gt;DNSSEC validation failed エラー&lt;/a&gt;
に、始めの方は &lt;code class=&quot;language-text&quot;&gt;signature expired&lt;/code&gt; エラーが出ていたと書いていました。
再インストールの際も同じ問題に遭遇したので対処法をメモしておきます。&lt;/p&gt;
&lt;p&gt;といっても、時間を合わせるだけです。RPi には RTC が搭載されていないため、
インターネットに接続するまでは平気で時間が遅れてしまいます。
そのため、&lt;code class=&quot;language-text&quot;&gt;signature expired&lt;/code&gt; になっているようでした。&lt;/p&gt;
&lt;p&gt;時間を合わせるだけなので、いくつか方法はありますが、事前に時刻設定して
おいた RTC モジュールを接続する、CLI で手動で時刻を設定する、など
でしょうか。&lt;/p&gt;
&lt;p&gt;あるいは、DNSSEC 非対応のリゾルバ・DNS サーバーを使うなども可能でしょう。
ArchLinuxARM で割と遭遇しそうな問題なので、フォーラムなど調べてみようと
思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GW-US54GXS を ArchLinux で使う]]></title><description><![CDATA[かなり前に買った WiFi ドングルですが、Linux で使うには追加のファームウェアが必要なのでメモしておきます。 基板に書いてある zd1211 で検索すると、
zd1211-firmware(AUR)
があるのでインストールします。 昔は WiFi…]]></description><link>https://ny-a.github.io/blog22020-04/use-gw-us54gxs-on-archlinux/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/use-gw-us54gxs-on-archlinux/</guid><pubDate>Tue, 07 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;かなり前に買った WiFi ドングルですが、Linux で使うには追加のファームウェアが必要なのでメモしておきます。&lt;/p&gt;
&lt;p&gt;基板に書いてある zd1211 で検索すると、
&lt;a href=&quot;https://aur.archlinux.org/packages/zd1211-firmware/&quot;&gt;zd1211-firmware(AUR)&lt;/a&gt;
があるのでインストールします。&lt;/p&gt;
&lt;p&gt;昔は WiFi アダプタを使うのもビルドが必要だったり大変だったような記憶があります(ハードウェア・ディストロの
選択が悪かっただけかもしれませんが)。今は本当にサポートが進んだな……と感じています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Alpine の pacman パッケージに PR を投げました]]></title><description><![CDATA[Alpine には pacman というパッケージがあり、名前の通り ArchLinux の
パッケージマネージャなのですが、依存関係が不足していたのでパッチを
送りました。  や  などは単純な bash スクリプトになっています。
しかし、Alpine の標準状態では sh…]]></description><link>https://ny-a.github.io/blog22020-04/contributed-to-alpine-pacman-package/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/contributed-to-alpine-pacman-package/</guid><pubDate>Mon, 06 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Alpine には pacman というパッケージがあり、名前の通り ArchLinux の
パッケージマネージャなのですが、依存関係が不足していたのでパッチを
送りました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;makepkg&lt;/code&gt; や &lt;code class=&quot;language-text&quot;&gt;pacman-key&lt;/code&gt; などは単純な bash スクリプトになっています。
しかし、Alpine の標準状態では sh のみがインストールされていて、
bash は入っていません。また、 pacman パッケージの依存関係にも
bash が入っていませんでした。そのため、明示的に bash をインストール
しないと、それらのスクリプトが実行できませんでした。&lt;/p&gt;
&lt;p&gt;そこで、まず issue を立てて PR (Alpine は GitLab を使っているため
正確には MR) を投げていいかどうか確認しました。
いきなり PR を投げても問題はないと思いますが、一般的にはまず
issue を立てて問題を提示してから、PR でそれを解決するような形に
するのが適切かと思っています。&lt;/p&gt;
&lt;p&gt;issue を作成したところ、いつも pacman パッケージの更新をしている
方に親切に慣習を教えていただき、すぐにマージしていただけました。&lt;/p&gt;
&lt;p&gt;Alpine Linux に貢献するのは初めてでしたが、私のコミュニティに対する
第一印象はすごくよかったです。見習いたいところですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[東京都 新型コロナウイルス感染症対策サイトに貢献しました]]></title><description><![CDATA[少し前ですが、
tokyo-metropolitan-gov/covid19
に PR を投げて、マージされました。 ブラウザを英語設定にした状態で、初回訪問時にエラーが発生して遷移しなくなるというバグがありました。
issue…]]></description><link>https://ny-a.github.io/blog22020-04/contributed-to-tokyo-metropolitan-gov-covid19/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/contributed-to-tokyo-metropolitan-gov-covid19/</guid><pubDate>Sun, 05 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;少し前ですが、
&lt;a href=&quot;https://github.com/tokyo-metropolitan-gov/covid19&quot;&gt;tokyo-metropolitan-gov/covid19&lt;/a&gt;
に PR を投げて、マージされました。&lt;/p&gt;
&lt;p&gt;ブラウザを英語設定にした状態で、初回訪問時にエラーが発生して遷移しなくなるというバグがありました。
issue を探してみると、どうも修正されていたみたいだったのですが、 development ブランチにはその後
その修正がうまくマージされていませんでした。(当該箇所が移動されていました。)&lt;/p&gt;
&lt;p&gt;そこで、コードの移動先に当該の変更を反映したものを PR として作成しました。&lt;/p&gt;
&lt;p&gt;きちんと master にマージされ、修正されたのを確認しました。
1行だけの変更で、元々私の変更ではありませんが、 OSS の貢献としてこれからも続けていこうと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RaspberryPi の乱数生成の速度をテストしてみました]]></title><description><![CDATA[まず、比較のための普段使いのマシンで  を
実行した結果です。rngd のソースにはx86_64 の  を使っています。 平均 12Mibits/s ですね、信頼性はよくわかりませんが……。 次に、RaspberryPi 3B…]]></description><link>https://ny-a.github.io/blog22020-04/rngd-generate-speed/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/rngd-generate-speed/</guid><pubDate>Sat, 04 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;まず、比較のための普段使いのマシンで &lt;code class=&quot;language-text&quot;&gt;rngtest -c 1000 &amp;lt; /dev/random&lt;/code&gt; を
実行した結果です。rngd のソースにはx86_64 の &lt;code class=&quot;language-text&quot;&gt;rdrand&lt;/code&gt; を使っています。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;rngtest 6.10
Copyright (c) 2004 by Henrique de Moraes Holschuh
This is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

rngtest: starting FIPS tests...
rngtest: bits received from input: 20000032
rngtest: FIPS 140-2 successes: 1000
rngtest: FIPS 140-2 failures: 0
rngtest: FIPS 140-2(2001-10-10) Monobit: 0
rngtest: FIPS 140-2(2001-10-10) Poker: 0
rngtest: FIPS 140-2(2001-10-10) Runs: 0
rngtest: FIPS 140-2(2001-10-10) Long run: 0
rngtest: FIPS 140-2(2001-10-10) Continuous run: 0
rngtest: input channel speed: (min=6.199; avg=12.255; max=13.673)Mibits/s
rngtest: FIPS tests speed: (min=53.278; avg=113.896; max=138.214)Mibits/s
rngtest: Program run time: 1724040 microseconds&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;平均 12Mibits/s ですね、信頼性はよくわかりませんが……。&lt;/p&gt;
&lt;p&gt;次に、RaspberryPi 3B+ での結果です。 &lt;code class=&quot;language-text&quot;&gt;/dev/hwrng&lt;/code&gt; をソースに使っています。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;rngtest 6.10
Copyright (c) 2004 by Henrique de Moraes Holschuh
This is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

rngtest: starting FIPS tests...
rngtest: bits received from input: 20000032
rngtest: FIPS 140-2 successes: 1000
rngtest: FIPS 140-2 failures: 0
rngtest: FIPS 140-2(2001-10-10) Monobit: 0
rngtest: FIPS 140-2(2001-10-10) Poker: 0
rngtest: FIPS 140-2(2001-10-10) Runs: 0
rngtest: FIPS 140-2(2001-10-10) Long run: 0
rngtest: FIPS 140-2(2001-10-10) Continuous run: 0
rngtest: input channel speed: (min=169.756; avg=203.404; max=252.963)Kibits/s
rngtest: FIPS tests speed: (min=48.533; avg=66.353; max=67.160)Mibits/s
rngtest: Program run time: 96309980 microseconds&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;平均 203Kibits/s です。だいたい 1/60 といったところでしょうか。&lt;/p&gt;
&lt;p&gt;これくらい出ればエアギャップコンピュータとして GPG 鍵の生成などを
行ってもストレスないでしょうか。試してみようと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[日本語版 ArchWiki の連続編集記録が切れてしまいました]]></title><description><![CDATA[wiki のデフォルトのタイムゾーンが JST だったので JST 基準かと思っていたら、
サーバーは UTC で、 bot も UTC だったというお話っぽいですね……。 一時期スマートフォンのタイムゾーンを UTC…]]></description><link>https://ny-a.github.io/blog22020-04/archwiki-jp-streak/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/archwiki-jp-streak/</guid><pubDate>Fri, 03 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;wiki のデフォルトのタイムゾーンが JST だったので JST 基準かと思っていたら、
サーバーは UTC で、 bot も UTC だったというお話っぽいですね……。&lt;/p&gt;
&lt;p&gt;一時期スマートフォンのタイムゾーンを UTC にして生活していた時期があったのですが、
乗り換え検索が壊れてしまって(タイムゾーンが混在する)不便だったので JST に戻して
いました。&lt;/p&gt;
&lt;p&gt;PC では大抵なんとかなると信じているので、タイムゾーンを UTC に設定しようかな……と
思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AlpineLinux の wiki の雰囲気]]></title><description><![CDATA[今日から早速 AlpineLinux の wiki にも貢献を始めていますが、ブロックログなどを見ると
AlpineLinux の wiki は ArchLinux のものに比べてスパムなどが多い気がしました。 また、手始めに…]]></description><link>https://ny-a.github.io/blog22020-04/alpine-linux-wiki-spams/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/alpine-linux-wiki-spams/</guid><pubDate>Thu, 02 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今日から早速 AlpineLinux の wiki にも貢献を始めていますが、ブロックログなどを見ると
AlpineLinux の wiki は ArchLinux のものに比べてスパムなどが多い気がしました。&lt;/p&gt;
&lt;p&gt;また、手始めに2重リダイレクトの修正を行いましたが、こちらもなんだか放置されているような、
メンテナンスがあまりされていないような印象を受けました。
好きなディストリビューションなだけに残念に思いました。できる範囲で改善していこうと
思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AlpineLinux のパッケージのシステムは ArchLinux 由来です！]]></title><description><![CDATA[エイプリルフールネタです、と言いたいところなんですが、どうやら事実のようです……。 AlpineLinux の Wiki
によると、 , , , ,  あたりと非常に
似たシステムになっているようです(もっとも、コンテナで使うときは initramfs…]]></description><link>https://ny-a.github.io/blog22020-04/alpine-packaging-system/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-04/alpine-packaging-system/</guid><pubDate>Wed, 01 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;エイプリルフールネタです、と言いたいところなんですが、どうやら事実のようです……。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.alpinelinux.org/wiki/Alpine_Linux:Overview#Technical_overview&quot;&gt;AlpineLinux の Wiki&lt;/a&gt;
によると、 &lt;code class=&quot;language-text&quot;&gt;makeinitcpio&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;makepkg&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;pacman&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;PKGBUILD&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ABS&lt;/code&gt; あたりと非常に
似たシステムになっているようです(もっとも、コンテナで使うときは initramfs は
使いませんが……。)&lt;/p&gt;
&lt;p&gt;AlpineLinux はコンテナ上でよく使っているので、これからコミュニティの雰囲気に
慣れていって、少しずつ貢献を始めていこうと思いました。
ただ、 ArchLinux への貢献も続けていきたいので、どう両立させていくかというのは
今後の課題です……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2019年度の終わり]]></title><description><![CDATA[早いもので2019年度ももう終わってしまいます。 1月に目標を立ててアウトプットを継続してきましたが、ブログは1日1回相当で3ヶ月続けることができました。
また、 ArchLinux コミュニティへの貢献も継続的に始めることができました。 今までは ArchLinux…]]></description><link>https://ny-a.github.io/blog22020-03/end-of-2019-fiscal-year/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/end-of-2019-fiscal-year/</guid><pubDate>Tue, 31 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;早いもので2019年度ももう終わってしまいます。&lt;/p&gt;
&lt;p&gt;1月に目標を立ててアウトプットを継続してきましたが、ブログは1日1回相当で3ヶ月続けることができました。
また、 ArchLinux コミュニティへの貢献も継続的に始めることができました。&lt;/p&gt;
&lt;p&gt;今までは ArchLinux コミュニティへの貢献に割と時間を割いていて、日常生活に少し支障が出始めていたため、
今後はもう少し時間を減らすなど調整をしながら、継続可能な範囲で貢献を続けていこうと思っています。
今後ともよろしくお願いいたします。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[分散したロケーションから ping や dig をできるサイト]]></title><description><![CDATA[ping.pe
というサイトがあることを知りました。分散したロケーションから ping や dig ができるようです。 DNS レコードを登録した直後の浸透(ではないけど)の状態を確認したりするのに使えそうです。]]></description><link>https://ny-a.github.io/blog22020-03/ping-pe/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/ping-pe/</guid><pubDate>Mon, 30 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://ping.pe/&quot;&gt;ping.pe&lt;/a&gt;
というサイトがあることを知りました。分散したロケーションから ping や dig ができるようです。&lt;/p&gt;
&lt;p&gt;DNS レコードを登録した直後の浸透(ではないけど)の状態を確認したりするのに使えそうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pacman の multilib を sed で有効化する]]></title><description><![CDATA[タイトルの通りで、 Arch Linux の Docker イメージを AUR のビルド用にしたくて、 multilib を使う必要があったので方法を
探してみました。 まず試したのは patch…]]></description><link>https://ny-a.github.io/blog22020-03/uncomment-mirrorlist-by-sed/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/uncomment-mirrorlist-by-sed/</guid><pubDate>Sun, 29 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;タイトルの通りで、 Arch Linux の Docker イメージを AUR のビルド用にしたくて、 multilib を使う必要があったので方法を
探してみました。&lt;/p&gt;
&lt;p&gt;まず試したのは patch だったのですが、初期インストール状態に含まれていないため、あまり慣れていない sed を使うことに
しました。
調べてみると
&lt;a href=&quot;https://unix.stackexchange.com/a/285162&quot;&gt;How to edit next line after pattern using sed? - StackExchange&lt;/a&gt;
にちょうど ArchLinux 用の(こちらは mirrorlist の方ですが)回答がありました。
multilib レポジトリの有効化用に変更したコマンドは以下の通りです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sed -e &amp;#39;/\[multilib\]/,/^$/{s/^#//}&amp;#39; /etc/pacman.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;元のコマンド &lt;code class=&quot;language-text&quot;&gt;/\[multilib\]/,/^$/{//!s/^#//}&lt;/code&gt; には &lt;code class=&quot;language-text&quot;&gt;//!&lt;/code&gt; が入っていて、これで1行目を無視しているようなのですが、
これがどう動くのかは勉強不足で分かっていません……&lt;/p&gt;
&lt;p&gt;とりあえず sed で思ったよりいろんなことができることが分かりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Xorg-server のビルドが思ったより楽で驚きました]]></title><description><![CDATA[xorg-server-dev が orphan && flagged になっていたので adopt してみたのですが、ビルドが思ったよりすぐ終わってびっくりしました。 Linux kernel とか libreoffice とかが大きすぎるだけなんですかね……。]]></description><link>https://ny-a.github.io/blog22020-03/build-xorg-server/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/build-xorg-server/</guid><pubDate>Sat, 28 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;xorg-server-dev が orphan &amp;#x26;&amp;#x26; flagged になっていたので adopt してみたのですが、ビルドが思ったよりすぐ終わってびっくりしました。&lt;/p&gt;
&lt;p&gt;Linux kernel とか libreoffice とかが大きすぎるだけなんですかね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[10個の AUR パッケージのメンテナになりました]]></title><description><![CDATA[Orphan になっていてアップデートのある AUR パッケージを少しずつ adopt してみていたのですが、その数が10個になりました。
アップストリームの更新が途絶えていたり、既に最新になっているものは adopt…]]></description><link>https://ny-a.github.io/blog22020-03/maintain-10-aur-packages/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/maintain-10-aur-packages/</guid><pubDate>Fri, 27 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Orphan になっていてアップデートのある AUR パッケージを少しずつ adopt してみていたのですが、その数が10個になりました。
アップストリームの更新が途絶えていたり、既に最新になっているものは adopt しても何も更新することがない(と思う)ので、
今のところそういったパッケージはそのままにしてあります。&lt;/p&gt;
&lt;p&gt;また、公式リポジトリに入っている AUR パッケージを掃除する手助けなど、できることからし始めてみています。
Arch Linux コミュニティは日本のローカルコミュニティに比べれば人はたくさんいますが、それでもまだまだ足りないな……という
感じがします。
私の貢献が少しでも手助けになっていれば嬉しいです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[6gram のグループとインスタントカードの違い]]></title><description><![CDATA[6gram をしばらく使っていて、グループとインスタンスカードの違いについても少しずつ分かってきました。 インスタンスカードは QUICPay に紐付けることができず、オンライン決済で使用できるカード番号のみが発行されます。
グループは QUICPay…]]></description><link>https://ny-a.github.io/blog22020-03/6gram-group/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/6gram-group/</guid><pubDate>Thu, 26 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;6gram をしばらく使っていて、グループとインスタンスカードの違いについても少しずつ分かってきました。&lt;/p&gt;
&lt;p&gt;インスタンスカードは QUICPay に紐付けることができず、オンライン決済で使用できるカード番号のみが発行されます。
グループは QUICPay に紐付けることができるのに加えて、メンバーそれぞれにカード番号が発行でき、使用者を追跡できます。&lt;/p&gt;
&lt;p&gt;インスタントカードには残高を出し入れすることができます。グループには基本的にチャージすることしかできませんが、
グループから脱退するか解散させることで残高を持ち主の元に戻すことができるようです。&lt;/p&gt;
&lt;p&gt;グループを目的別の口座のように使い分けて QUICPay で切り替えながら使用して、必要に応じて残高を移動させることを考えていたので、
気軽に移動できないのは少し残念でした。ただ、余分にチャージしておけば問題ないので、しばらくこのまま使い続けてみようと
思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki 英語版のフィードを購読し始めました]]></title><description><![CDATA[ArchWiki 英語版の記事を日本語に翻訳する作業を継続しているのですが、英語版の更新の状況を知るためにフィードを購読してみました。 クライアントは今のところ Thunderbird…]]></description><link>https://ny-a.github.io/blog22020-03/subscribe-archwiki-feed/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/subscribe-archwiki-feed/</guid><pubDate>Wed, 25 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchWiki 英語版の記事を日本語に翻訳する作業を継続しているのですが、英語版の更新の状況を知るためにフィードを購読してみました。&lt;/p&gt;
&lt;p&gt;クライアントは今のところ Thunderbird を使っていますが、今後コンソールなどのクライアントに変更しようかなと思っています。&lt;/p&gt;
&lt;p&gt;最近だと &lt;a href=&quot;https://wiki.archlinux.org/index.php/Folding@home&quot;&gt;Folding@home - Arch Wiki&lt;/a&gt; の編集が多いように感じますが、
これはずっと更新され続けているわけではなく、最近だけのようですね。
名前だけ見てメディアサーバーみたいなものかと思っていたのですが、記事を読んでみると分散コンピューティングのボランティアの
プロジェクトのようですね。名前だけで判断するのはやはりよくないです……。&lt;/p&gt;
&lt;p&gt;英語版の更新の傾向などに慣れていって、翻訳に生かすのと同時に、英語版への貢献も始めていけたらなと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchWiki の翻訳に慣れてきました]]></title><description><![CDATA[ArchWiki の翻訳を毎日するようにしてから Blog の方がおろそかになってしまっていますね……。 でも、いろいろな ArchWiki の記事に目を通したり、知らなかった MediaWiki の機能を発見したりして楽しいです。
毎日 Blog…]]></description><link>https://ny-a.github.io/blog22020-03/getting-used-to-translate/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/getting-used-to-translate/</guid><pubDate>Tue, 24 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchWiki の翻訳を毎日するようにしてから Blog の方がおろそかになってしまっていますね……。&lt;/p&gt;
&lt;p&gt;でも、いろいろな ArchWiki の記事に目を通したり、知らなかった MediaWiki の機能を発見したりして楽しいです。
毎日 Blog を書く、ということを目標にしていましたが、ArchWiki の翻訳や GitHub への Push で代わりとしようかな……と思い始めています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AmazonLinux2-minimal に docker-compose をインストールしてみました]]></title><description><![CDATA[AmazonLinux では、  を使って docker は簡単にインストールすることができますが、
 のインストールは少しハマる場合がありました。  から epel リポジトリを有効化すると、 yum で docker-compose…]]></description><link>https://ny-a.github.io/blog22020-03/install-docker-compose-on-amazon-linux/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/install-docker-compose-on-amazon-linux/</guid><pubDate>Mon, 23 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;AmazonLinux では、 &lt;code class=&quot;language-text&quot;&gt;amazon-linux-extras&lt;/code&gt; を使って docker は簡単にインストールすることができますが、
&lt;code class=&quot;language-text&quot;&gt;docker-compose&lt;/code&gt; のインストールは少しハマる場合がありました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;amazon-linux-extras&lt;/code&gt; から epel リポジトリを有効化すると、 yum で docker-compose が利用可能になりますが、
これはアーキテクチャに関わらず現在インストールすることができません(python3.6 系に依存しているため)。&lt;/p&gt;
&lt;h2&gt;x86_64&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pip3 install docker-compose&lt;/code&gt; で素直に入ります。特にハマることはないと思います。&lt;/p&gt;
&lt;h2&gt;aarch64&lt;/h2&gt;
&lt;p&gt;x86_64 と同じように &lt;code class=&quot;language-text&quot;&gt;pip3&lt;/code&gt; でインストールはできますが、依存ライブラリのビルドに必要な依存関係を解決しておく必要があります。
以下のコマンドでインストール可能です。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;yum install gcc libffi-devel openssl-devel python3-devel
pip3 install docker-compose &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ビルドが走るので少し時間がかかります。頻繁に使うのであれば AMI を作成しておく方が便利だと思います。&lt;/p&gt;
&lt;p&gt;今回は minimal で試しましたが、normal の方では試していないため、また必要になったら試してみようと思います。&lt;/p&gt;
&lt;p&gt;といっても、docker-compose を直接インスタンスで使うよりも、最近では ECS や Kubernetes を使うことの方が多そうですね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[6gram の決済速度が遅くなっている気がしました]]></title><description><![CDATA[iPhone の方で QUICPay の決済速度が割と遅いという報告を受けたので、手元の Android 端末でも QUICPay の決済の速度を確認してみました。
といっても N=1 なのであまり信頼できる値ではないですが……。 先月に決済を試した感じだと、kyash…]]></description><link>https://ny-a.github.io/blog22020-03/6gram-quicpay-speed/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/6gram-quicpay-speed/</guid><pubDate>Sun, 22 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;iPhone の方で QUICPay の決済速度が割と遅いという報告を受けたので、手元の Android 端末でも QUICPay の決済の速度を確認してみました。
といっても N=1 なのであまり信頼できる値ではないですが……。&lt;/p&gt;
&lt;p&gt;先月に決済を試した感じだと、kyash の高速化後の水準(2秒程度)だったと記憶しているのですが、
今回試した感じだと3秒台かな……という感じで、少し待たされるように感じました。&lt;/p&gt;
&lt;p&gt;iPhone だともう少し遅かったとのことです。先月より遅くなっているので、これはユーザー数増加が原因なのかな……と思っています。
Elixir 勉強して 6gram のバックエンド改善ができるようになればいいのですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[普段使いの決済方法を kyash から 6gram に変更しました]]></title><description><![CDATA[6gram は前から登録していたのですが、一時的にクレジットカードチャージを停止していたため、kyash を使い続けていました。
クレジットカードチャージ機能が復活して、しばらく普通に使えていたので、6gram を使っていこうと思いました。 6gram…]]></description><link>https://ny-a.github.io/blog22020-03/start-using-6gram-regularly/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/start-using-6gram-regularly/</guid><pubDate>Sat, 21 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;6gram は前から登録していたのですが、一時的にクレジットカードチャージを停止していたため、kyash を使い続けていました。
クレジットカードチャージ機能が復活して、しばらく普通に使えていたので、6gram を使っていこうと思いました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/blog2/2020-02/6gram-app/&quot;&gt;6gramを使ってみました&lt;/a&gt; では、グループなどへの残高の移動(アプリ内ではチャージと記載)は100円単位と
書いていましたが、それはスライダーで指定する場合で、手動で入力する場合は1円単位で残高を移動することができました。&lt;/p&gt;
&lt;p&gt;また、 Android の方は割と QUICPay 決済が早かったような気がするのですが、iPhone の方はそうでもないかもしれないと
聞きました。もしかしたらユーザー数が増えた影響かもしれないので、速度についてはまた決済を試して比較してみようと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Firefox の GUI を docker コンテナ内で起動する]]></title><description><![CDATA[Qubes OS はアプリケーションを VM で分離しますが、 Arch Linux 上で Docker コンテナを利用して
同じようなことを試してみました。 例えば、 Firefox を起動するには以下のようにします。 Dockerfile には USER…]]></description><link>https://ny-a.github.io/blog22020-03/run-firefox-in-docker/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/run-firefox-in-docker/</guid><pubDate>Fri, 20 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.qubes-os.org/&quot;&gt;Qubes OS&lt;/a&gt; はアプリケーションを VM で分離しますが、 Arch Linux 上で Docker コンテナを利用して
同じようなことを試してみました。&lt;/p&gt;
&lt;p&gt;例えば、 Firefox を起動するには以下のようにします。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo docker run --rm \
  -v /tmp/.X11-unix \
  -v ~/.Xauthority:/home/user/.Xauthority \
  -e DISPLAY \
  -e XAUTHORITY=/home/user/.Xauthority \
  --net host \
  archlinux/base \
  sh -c &amp;#39;pacman -Syu --noconfirm firefox; useradd user; chown user:user /home/user; su user firefox&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dockerfile には USER instruction があるので、それを使って Xorg を起動中の UID と一致させればよいはずです。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;-v /home/user/.Xauthority&lt;/code&gt; だけだとディレクトリとしてマウントされてしまってうまくいきませんでした。
&lt;code class=&quot;language-text&quot;&gt;--net host&lt;/code&gt; を付けないと、リモートホストからの X 接続と認識されるため、 xhost などが必要になると思います。&lt;/p&gt;
&lt;p&gt;また、ウィンドウサイズを FullHD 程度にするとクラッシュしてしまう問題もあります。これはまだ解決法が分かっていませんが、
SSH の X 転送を使って他のマシンの Firefox を起動したときは起きないため、Docker のメモリか cgroup か何かが原因かなと
思っています。&lt;/p&gt;
&lt;p&gt;Arch Linux のインストールプロセスは overlayfs と親和性が高そうなので、 pacman のインストールを docker のレイヤーに
置き換えたようなコンテナシステムを作りたいと思っていますが、 alpm hook 周りを理解しないといけなかったり、
まだまだ先は長そうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Arch Linux のメーリングリストを購読し始めました]]></title><description><![CDATA[今まで Arch Linux は使っていましたが、コミュニティにはずっと触れておらず、 ArchWiki を読むくらいでした。 最近になってやっと ArchWiki の編集をしたり、 AUR…]]></description><link>https://ny-a.github.io/blog22020-03/subscribe-arch-mailing-lists/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/subscribe-arch-mailing-lists/</guid><pubDate>Thu, 19 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今まで Arch Linux は使っていましたが、コミュニティにはずっと触れておらず、 ArchWiki を読むくらいでした。&lt;/p&gt;
&lt;p&gt;最近になってやっと ArchWiki の編集をしたり、 AUR のパッケージのメンテナになったりしていますが、
まだまだコミュニティに参加できているとは言い難い気がします。
そこで、ひとまずコミュニティの雰囲気に慣れようと思い、 Arch Linux のメーリングリストをほぼ全て購読しました。&lt;/p&gt;
&lt;p&gt;AUR Request などはかなり Archive が大きく、1日に何十通もメールが来るのかとドキドキしていましたが、
全てのメールにさっと目を通すくらいはできる量だったので安心しました。
フォーラムの方が投稿が多いくらいだと思いました。&lt;/p&gt;
&lt;p&gt;フォーラムの方も、最近の更新をいくつかかいつまんで目を通してみています。が、あまり手助けできそうな話題は
ないのが現状です……。ひとまず、英文の理解の速度の向上なども含めて慣れていこうと思いました。 &lt;/p&gt;</content:encoded></item><item><title><![CDATA[モバイルPASMOの提供が開始されました]]></title><description><![CDATA[10年前くらいから希望があったような気がしますが、ようやくモバイル PASMO の提供が開始されたようです。
当面は Android のみのようですね。 対応機種は、おサイフケータイ対応で Android 6.0 以降プリインストールの機種のようです。
また、 Xperia…]]></description><link>https://ny-a.github.io/blog22020-03/mobile-pasmo/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/mobile-pasmo/</guid><pubDate>Wed, 18 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;10年前くらいから希望があったような気がしますが、ようやくモバイル PASMO の提供が開始されたようです。
当面は Android のみのようですね。&lt;/p&gt;
&lt;p&gt;対応機種は、おサイフケータイ対応で Android 6.0 以降プリインストールの機種のようです。
また、 Xperia 1/5/8、 Android One S6、 Pixel 4/4 XL については、モバイル Suica との共存が可能なようです。&lt;/p&gt;
&lt;p&gt;共存したときの使い勝手とか気になるので、 Pixel 4 でも買ってみようかな……と思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[nekoko.oneをHTTPSに対応させました]]></title><description><![CDATA[といっても GitHub Pages なのでチェックボックス1つ入れるだけなんですが……。 GitHub Pages での独自ドメインの HTTPS 対応は初めてだったので(本当に簡単ですが)一応メモしておきます。 CNAME…]]></description><link>https://ny-a.github.io/blog22020-03/https-nekoko-one/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/https-nekoko-one/</guid><pubDate>Tue, 17 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;といっても GitHub Pages なのでチェックボックス1つ入れるだけなんですが……。&lt;/p&gt;
&lt;p&gt;GitHub Pages での独自ドメインの HTTPS 対応は初めてだったので(本当に簡単ですが)一応メモしておきます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CNAME ファイルを作成して、使用する独自ドメインを指定する(Settings からでも可能)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site&quot;&gt;Managing a custom domain for your GitHub Pages site&lt;/a&gt;
に従って DNS レコードの設定をする&lt;br&gt;
今回は Apex ドメインなので A レコードを設定しました。&lt;/li&gt;
&lt;li&gt;最大48時間待つ(6時間くらいでできていた気がしますが。)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Enforce HTTPS&lt;/code&gt; にチェックを入れたり、https でアクセスしてみる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という感じです。 GitHub 様々ですね。&lt;/p&gt;
&lt;p&gt;というわけで割と(？)セキュアな &lt;a href=&quot;https://nekoko.one/&quot;&gt;https://nekoko.one/&lt;/a&gt; ができました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ネココワン！]]></title><description><![CDATA[nekoko.one を取得しました。 nyan-cat を表示できるようにしておきました。 DNSSEC は有効化済みで、HTTPS は GitHub の証明書発行待ちです。 ネココワン！]]></description><link>https://ny-a.github.io/blog22020-03/nekoko-one/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/nekoko-one/</guid><pubDate>Mon, 16 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;http://nekoko.one/&quot;&gt;nekoko.one&lt;/a&gt; を取得しました。&lt;/p&gt;
&lt;p&gt;nyan-cat を表示できるようにしておきました。&lt;/p&gt;
&lt;p&gt;DNSSEC は有効化済みで、HTTPS は GitHub の証明書発行待ちです。&lt;/p&gt;
&lt;p&gt;ネココワン！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[久しぶりにArchLinuxのインストールをしました]]></title><description><![CDATA[知人から古い MacBookAir をいただいたので、 ArchLinux をインストールしてみました。
私は MacBook を所有したことがないので、これが1台目です。 いただいたのは10年前のモデルで、 MacBookAir3,2 (13inch, Late 201…]]></description><link>https://ny-a.github.io/blog22020-03/arch-linux-install-challenge-on-mba/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/arch-linux-install-challenge-on-mba/</guid><pubDate>Sun, 15 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;知人から古い MacBookAir をいただいたので、 ArchLinux をインストールしてみました。
私は MacBook を所有したことがないので、これが1台目です。&lt;/p&gt;
&lt;p&gt;いただいたのは10年前のモデルで、 MacBookAir3,2 (13inch, Late 2010) です。詳細スペックは、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU: Intel Core2Duo 2.13GHz&lt;/li&gt;
&lt;li&gt;RAM: 4GB&lt;/li&gt;
&lt;li&gt;SSD: 256GB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;といった感じです。&lt;/p&gt;
&lt;p&gt;Arch は何回も壊してインストールし直しているので、久しぶりですが何も見ずにサクサク進めることができます。
……という慢心がいけないんですよね、grub の設定をある程度忘れていたのと、ネットワーク設定を忘れて再起動してしまいました。&lt;/p&gt;
&lt;p&gt;諦めが悪いので、USB キーを差して airootfs をマウントして netctl を叩いてみたのですが、 chroot だと全て ignore されてしまい、
chroot なしで実行しようとすると netctl や wpa_supplicant 関連のファイルをコピーしないといけないため、面倒になって諦めました。&lt;/p&gt;
&lt;p&gt;その後 netctl と wpa_supplicant をインストールして再起動したのですが、 dhcpcd がインストールされていませんでした。
過去のインストールでは明示的にインストールした覚えがないのですが、依存などが変わったのでしょうか。
後で ArchWiki を見てみようと思います。&lt;/p&gt;
&lt;p&gt;また、 CPU は rdrand をサポートしておらず、 /dev/hwrng は生えているものの rng-tools を入れても使えなかった(cat してみても
エラーが出る)ので、乱数生成は遅い感じになりつらいですね(まあ実際何がつらいかと言われればあまりないのですが……。)&lt;/p&gt;
&lt;p&gt;AUR のメンテナになるときに検証環境は qemu/kvm などでいいかなと思っていたのですが、やっぱりハードウェア関連など実機で
検証しないといけないなと実感しました。&lt;/p&gt;
&lt;p&gt;ひとまず、気軽に再インストールができるように環境の整理と再構築の自動化などを進めていこうと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchLinuxの日本コミュニティに貢献します]]></title><description><![CDATA[ArchLinux を使い始めてもう5年以上経ちますが、今まではあまりコミュニティに貢献していませんでした。
今まで ArchWiki などにたくさん助けられてきたので、これからは自分も貢献して恩返しをしていこうと思います。 まず、 ArchWiki…]]></description><link>https://ny-a.github.io/blog22020-03/started-contributing-to-archlinuxjp/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/started-contributing-to-archlinuxjp/</guid><pubDate>Sat, 14 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchLinux を使い始めてもう5年以上経ちますが、今まではあまりコミュニティに貢献していませんでした。
今まで ArchWiki などにたくさん助けられてきたので、これからは自分も貢献して恩返しをしていこうと思います。&lt;/p&gt;
&lt;p&gt;まず、 ArchWiki の日本語版が英語版に追従できていないのが少し気になりました。
&lt;a href=&quot;https://kusakata.com/arch-description-translation-project/&quot;&gt;Arch Description Translation Project 他&lt;/a&gt;
で kusakata さんが書かれている通り、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日本語版の ArchWiki の古さに眉を顰めている読者の方がいれば、編集に参加していただると幸いです&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;というわけなので、これからできるだけ毎日編集に参加しようと思います。
英語力に自信があるわけではありませんが、英語に触れる時間を増やすことで向上させていければなと思っています。&lt;/p&gt;
&lt;p&gt;また、 Orphaned な AUR のパッケージのメンテナになることも平行して進めていこうと思っています。
こちらは生半可な気持ちで引き受けていいのかあまり自信がなく、更新時にどこまでテストすればいいのかも
あまりよく分かっていない/自分の中でも決め切れていませんが、とりあえず古いまま放置されるよりかは更新する方がいいかと
思って引き受けてみようと考えています。もちろん、 upsteam の release を watch することもセットで。&lt;/p&gt;
&lt;p&gt;というわけで、(もし ArchLinux 関係の方がこのポストを見ることがあれば)これからよろしくお願いします。
ある程度雰囲気には慣れているつもりなので突拍子もないことはしないと思いますが、
間違っていること・直した方がいいことがあれば気軽に連絡ください。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[HackMDでブログを書いてみました]]></title><description><![CDATA[HackMD は、ブラウザ上で Markdown の編集・閲覧を複数人同時にできるサービスです。
HackMD には Markdown を GitHub に push…]]></description><link>https://ny-a.github.io/blog22020-03/write-blog-with-hackmd/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/write-blog-with-hackmd/</guid><pubDate>Fri, 13 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://hackmd.io/&quot;&gt;HackMD&lt;/a&gt; は、ブラウザ上で Markdown の編集・閲覧を複数人同時にできるサービスです。
HackMD には Markdown を GitHub に push できる機能があるので、これを使ってブログを書いてみました。&lt;/p&gt;
&lt;p&gt;メリットとしては、ライブプレビューができる、などがありますが、モダンなエディターだとライブプレビューが可能だったりするので、……メリットは特にないかもしれません。
あと、画像などの添付には多分対応していないので、普段画像をよく使う場合は不便かもしれません。&lt;/p&gt;
&lt;p&gt;まあ普段からブログのネタを HackMD にメモしているならば、そのまま書き始めることができてちょっと便利かもしれませんが、そうでもないかもしれません。
多分次からは普通にエディタで書くと思いました……。&lt;/p&gt;
&lt;p&gt;追記：
完全にフライングしたので追記しました！これは 03/13 のポストなので……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchBSDプロジェクトのWebページ]]></title><description><![CDATA[毎度のことで気付くのが遅いのですが、 ArchBSD プロジェクトの Web サイト archbsd.net がなくなっていました。
GitHub の方にはいくつかレポジトリがあるようなので、プロジェクト自体はどこかで継続しているのかもしれませんが、
プロジェクトの Web…]]></description><link>https://ny-a.github.io/blog22020-03/archbsd-net/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/archbsd-net/</guid><pubDate>Thu, 12 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;毎度のことで気付くのが遅いのですが、 ArchBSD プロジェクトの Web サイト archbsd.net がなくなっていました。
GitHub の方にはいくつかレポジトリがあるようなので、プロジェクト自体はどこかで継続しているのかもしれませんが、
プロジェクトの Web サイトがなくなってしまっているのは残念です。&lt;/p&gt;
&lt;p&gt;ところで、現在その URL にアクセスすると、不自然な日本語の記述された PR のようなサイトになっています。
ただ、特にアフィリエイトリンクがあるわけではなく、 SNS のシェアボタンがあるだけなので目的はよく分かりません。
不自然な日本語については、適当な文を抜き出して検索すると他でもヒットすることから、何らかの文章をベースに
トピックごとに単語の置き換えなどで文章を生成しているように感じられます。
また、ベースの文章自体も、機械学習などを使って生成しているようにも感じられます。&lt;/p&gt;
&lt;p&gt;Web に増え続けるスパム系のコンテンツはある程度見てきたつもりでしたが、こういうものは初めて見ました。
これによって得られる利益は不明ですが、自動生成っぽいスパムに時代の変化を感じました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[losetupで複数パーティションを持ったイメージファイルをマウントする]]></title><description><![CDATA[シングルパーティションのイメージファイルをマウントするのは今まで何度もやっていましたが、
ディスク丸ごとのイメージファイルをマウントした記憶は……あまりありません。
強いて言えば VM…]]></description><link>https://ny-a.github.io/blog22020-03/losetup-p-option/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/losetup-p-option/</guid><pubDate>Wed, 11 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;シングルパーティションのイメージファイルをマウントするのは今まで何度もやっていましたが、
ディスク丸ごとのイメージファイルをマウントした記憶は……あまりありません。
強いて言えば VM にアタッチして起動したくらいでしょうか。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;losetup -fP&lt;/code&gt; を使うと複数のパーティションを含んだイメージファイルでループバックデバイスを
セットアップできます。
&lt;code class=&quot;language-text&quot;&gt;-P&lt;/code&gt; オプションを指定すると、セットアップ後にカーネルにパーティションをスキャンさせるようです。
あとは普通に &lt;code class=&quot;language-text&quot;&gt;mount /dev/loop2p1 /mnt&lt;/code&gt; などとするとマウントできました。&lt;/p&gt;
&lt;p&gt;手元の環境では起動時から /dev/loop0-7 が自動で作られていますが、これは誰が作っているのかなどは
分かっていないので、まだまだ知識の不足を感じますね……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AmazonLinux2-minimalについて調べました]]></title><description><![CDATA[AmazonLinux 自体は知っていましたが、どんなバリエーションがあるかなどはあまり知らず、
Docker を使いたいときは始めから入っている ECS optimized な AMI を選ぶなど適当だったので調べてみました。 まず、メジャーバージョンとしては現在1と…]]></description><link>https://ny-a.github.io/blog22020-03/amazon-linux-2-minimal/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/amazon-linux-2-minimal/</guid><pubDate>Tue, 10 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;AmazonLinux 自体は知っていましたが、どんなバリエーションがあるかなどはあまり知らず、
Docker を使いたいときは始めから入っている ECS optimized な AMI を選ぶなど適当だったので調べてみました。&lt;/p&gt;
&lt;p&gt;まず、メジャーバージョンとしては現在1と2があるようで、
1 の方は 2020/12/31 に &lt;a href=&quot;https://aws.amazon.com/blogs/aws/update-on-amazon-linux-ami-end-of-life/&quot;&gt;EOL&lt;/a&gt;
となって、 2023/06/30 までメンテナンスサポートフェーズとなるようです。
そのため、これから使い始めるのであれば AmazonLinux2 にしておいた方がよさそうですね。&lt;/p&gt;
&lt;p&gt;AmazonLinux2 は 通常版と minimal のものがあり、通常版でも標準で入っているパッケージは少なめなようですが
minimal の方はさらに少なくなっています。
とはいえ、 bash や curl は始めから入っていますし、気になるのは awscli が入っていないことくらいでしょうか。
普段 docker で alpine をよく使っているので、むしろ minimal がまだ削れそうに感じます。&lt;/p&gt;
&lt;p&gt;また、 &lt;code class=&quot;language-text&quot;&gt;amazon-linux-extras&lt;/code&gt; コマンドから追加のソフトウェアをインストールすることができるので、
困ることはほとんどないと思います。
&lt;code class=&quot;language-text&quot;&gt;docker&lt;/code&gt; や &lt;code class=&quot;language-text&quot;&gt;epel&lt;/code&gt; もコマンド1つで入りますし、変わったものでは &lt;code class=&quot;language-text&quot;&gt;ecs&lt;/code&gt; クライアントもインストールすることができます。&lt;/p&gt;
&lt;p&gt;今まで適当に ECS Optimized な AMI を使っていましたが、 AmazonLinux2-minimal を積極的に使っていこうと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ブログのビルドが失敗するようになったのでnpmパッケージをアップデートしました]]></title><description><![CDATA[この Gatsby のブログは Github Actions でビルドしているのですが、…]]></description><link>https://ny-a.github.io/blog22020-03/update-npm-packages-for-gatsby/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/update-npm-packages-for-gatsby/</guid><pubDate>Mon, 09 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;この Gatsby のブログは Github Actions でビルドしているのですが、5日くらい前からビルドに失敗するようになっていました。
手元ではビルドできるので、 &lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt; を手動で実行してデプロイしていたのですが、
ずっと放置しているわけにはいかないので直しました。&lt;/p&gt;
&lt;p&gt;本当は &lt;a href=&quot;https://github.com/mxschmitt/action-tmate&quot;&gt;mxschmitt/action-tmate - GitHub&lt;/a&gt;
を使ってデバッグするつもりだったのですが、 npm パッケージをアップデートしたら直りました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm audit&lt;/code&gt; で &lt;code class=&quot;language-text&quot;&gt;found 10 vulnerabilities (1 moderate, 9 high)&lt;/code&gt; になっているのが少し気になりますが……
acorn は &lt;code class=&quot;language-text&quot;&gt;package-lock.json&lt;/code&gt; を見る限りだと 7.1.1 が入っているように見えますね……、
&lt;code class=&quot;language-text&quot;&gt;npm audit&lt;/code&gt; について調べてみないと分からないですが、今回は Gatsby なのであまり影響はないかなと認識しています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[CoreOS rktプロジェクトが終了していました]]></title><description><![CDATA[CoreOS のプロジェクトが終了して Fedora CoreOS が後続になるという話は知っていたのですが、
rkt プロジェクトもそれに伴って終了していたようです。 Github の rkt/rkt も Archived…]]></description><link>https://ny-a.github.io/blog22020-03/rkt-project-ended/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/rkt-project-ended/</guid><pubDate>Sun, 08 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;CoreOS のプロジェクトが終了して Fedora CoreOS が後続になるという話は知っていたのですが、
rkt プロジェクトもそれに伴って終了していたようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rkt/rkt&quot;&gt;Github の rkt/rkt&lt;/a&gt; も Archived になっていて特に代替になるものや
活発に開発されている fork も今のところなさそうです。&lt;/p&gt;
&lt;p&gt;他のコンテナランタイムとしては &lt;a href=&quot;https://github.com/opencontainers/runc&quot;&gt;runc&lt;/a&gt;
や、 kubernetes 用の &lt;a href=&quot;https://github.com/cri-o/cri-o&quot;&gt;cri-o&lt;/a&gt; などもありますが、
runc は containerd から利用されているようで(前 Docker のリリースか何かで読んだ気がする)、
Docker/rkt を置き換えるものではないですね……。&lt;/p&gt;
&lt;p&gt;まあ単純に Docker を使えばいいんだとは思いますが……、Docker のセキュリティ面での懸念に対処していた
rkt プロジェクトが終了してしまうのは個人的に残念でした。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JetBrainsのYouTrack]]></title><description><![CDATA[家庭内のタスクを管理するためのツールを探していて、
Redmine, Trac, Backlog などは知っていたのですが、 JetBrains も YouTrack…]]></description><link>https://ny-a.github.io/blog22020-03/jetbrains-youtrack/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/jetbrains-youtrack/</guid><pubDate>Sat, 07 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;家庭内のタスクを管理するためのツールを探していて、
Redmine, Trac, Backlog などは知っていたのですが、 JetBrains も &lt;a href=&quot;https://www.jetbrains.com/youtrack/&quot;&gt;YouTrack&lt;/a&gt; という
プロジェクト管理ツールを出していることを知りました。&lt;/p&gt;
&lt;p&gt;クラウド版のほか、スタンドアロン版を自分でホスティングすることもできるようです。
また、スタンドアロン版の場合は10ユーザーまで制限なしで無料で使うことができるようなので、
試しに使ってみようかなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Dockerの最新版をCentOSにインストールしてみました]]></title><description><![CDATA[CentOS のパッケージは、普段使っている ArchLinux に比べるとかなり古いです。
しかし、 epel などのレポジトリを使うことで、比較的新しいバージョンを使うことができます。 docker は CentOS…]]></description><link>https://ny-a.github.io/blog22020-03/install-latest-docker-on-centos/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/install-latest-docker-on-centos/</guid><pubDate>Fri, 06 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;CentOS のパッケージは、普段使っている ArchLinux に比べるとかなり古いです。
しかし、 epel などのレポジトリを使うことで、比較的新しいバージョンを使うことができます。&lt;/p&gt;
&lt;p&gt;docker は &lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/&quot;&gt;CentOS 用のインストールマニュアル&lt;/a&gt;
があるので、これに従えばよいです。&lt;/p&gt;
&lt;p&gt;まず、既に docker がインストールされている場合は &lt;code class=&quot;language-text&quot;&gt;yum remove&lt;/code&gt; コマンドで削除します。
そして、 &lt;code class=&quot;language-text&quot;&gt;yum-utils&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;device-mapper-persistent-data&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;lvm2&lt;/code&gt; パッケージをインストールします。
(手元の環境では全て最新版がインストールされていました。)
次に、 Docker CE のレポジトリを追加します。
&lt;code class=&quot;language-text&quot;&gt;yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;あとは &lt;code class=&quot;language-text&quot;&gt;yum install docker-ce docker-ce-cli containerd.io&lt;/code&gt; を実行すれば最新版がインストールされます。&lt;/p&gt;
&lt;p&gt;また、 &lt;code class=&quot;language-text&quot;&gt;docker-compose&lt;/code&gt; はこの状態で yum でインストールしようとすると古いバージョンが入るので、
&lt;code class=&quot;language-text&quot;&gt;pip&lt;/code&gt; を使ってインストールしてあげると最新版がインストールされます。
ただ、インストールが &lt;code class=&quot;language-text&quot;&gt;/usr/local/bin/&lt;/code&gt; 以下になることがあり、 &lt;code class=&quot;language-text&quot;&gt;sudo&lt;/code&gt; 時の PATH に含まれていないことがあるので
注意が必要です。(とりあえずはフルパスで指定すると動きます。)&lt;/p&gt;
&lt;p&gt;ArchLinux を使っていると pip も 3 が標準な気がしてしまいますが、他の disto では 3 の suffix がついているんですね。
そろそろ 2 系も EOL なので、 suffix なしの 3 系が標準になってほしいものです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[earlyoomに投げたPRがマージされました]]></title><description><![CDATA[earlyoomがcommunityレポジトリに入っていました
に書いた通り、  が community レポジトリに入ったので、  の README のリンクを修正して
PullRequest を投げました。 README: Update Arch Linux package…]]></description><link>https://ny-a.github.io/blog22020-03/merged-my-pull-request-for-earlyoom/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/merged-my-pull-request-for-earlyoom/</guid><pubDate>Thu, 05 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-03/earlyoom-in-community-repo/&quot;&gt;earlyoomがcommunityレポジトリに入っていました&lt;/a&gt;
に書いた通り、 &lt;code class=&quot;language-text&quot;&gt;earlyoom&lt;/code&gt; が community レポジトリに入ったので、 &lt;code class=&quot;language-text&quot;&gt;earlyoom&lt;/code&gt; の README のリンクを修正して
PullRequest を投げました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rfjakob/earlyoom/pull/168&quot;&gt;README: Update Arch Linux package #168&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;+2, -3 行の小さな PullRequest ですが、これからも継続して OSS に貢献していこうと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[earlyoomがcommunityレポジトリに入っていました]]></title><description><![CDATA[earlyoom が
Fedora32 でデフォルトで有効化
されるようですが、 ArchLinux には AUR にあって公式レポジトリにない状況でした。 しかし、つい2時間前に community/earlyoom
に入っていたようです。 最近ではほとんど AUR…]]></description><link>https://ny-a.github.io/blog22020-03/earlyoom-in-community-repo/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/earlyoom-in-community-repo/</guid><pubDate>Wed, 04 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/rfjakob/earlyoom&quot;&gt;earlyoom&lt;/a&gt; が
&lt;a href=&quot;https://fedoraproject.org/wiki/Changes/EnableEarlyoom&quot;&gt;Fedora32 でデフォルトで有効化&lt;/a&gt;
されるようですが、 ArchLinux には AUR にあって公式レポジトリにない状況でした。&lt;/p&gt;
&lt;p&gt;しかし、つい2時間前に &lt;a href=&quot;https://www.archlinux.org/packages/community/x86_64/earlyoom/&quot;&gt;community/earlyoom&lt;/a&gt;
に入っていたようです。&lt;/p&gt;
&lt;p&gt;最近ではほとんど AUR のパッケージを利用することはないような気がしています。
Trusted User の皆さんに感謝しないといけないですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[passmenu をカスタマイズしてみました]]></title><description><![CDATA[パスワードマネージャーには Pass / password-store を使っていて、
GUI 環境での入力には  を使っているのですが、 passmenu…]]></description><link>https://ny-a.github.io/blog22020-03/customize-passmenu/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/customize-passmenu/</guid><pubDate>Tue, 03 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;パスワードマネージャーには &lt;a href=&quot;https://www.passwordstore.org/&quot;&gt;Pass / password-store&lt;/a&gt; を使っていて、
GUI 環境での入力には &lt;code class=&quot;language-text&quot;&gt;passmenu&lt;/code&gt; を使っているのですが、 passmenu のデフォルト動作は クリップボードへのコピーで、
直接入力させるには &lt;code class=&quot;language-text&quot;&gt;--type&lt;/code&gt; オプションを付ける必要があり少し面倒だったので、動作をカスタマイズしてみました。&lt;/p&gt;
&lt;p&gt;オリジナルのソースは &lt;a href=&quot;https://git.zx2c4.com/password-store/tree/contrib/dmenu/passmenu&quot;&gt;contrib/dmenu&lt;/a&gt; にあります。
pass は全体がそうなのですが、中身はシンプルな bash スクリプトなので、好きなように修正してしまいます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;#!/usr/bin/env bash

shopt -s nullglob globstar

line=1
if [[ &amp;quot;$1&amp;quot; =~ ^[0-9]+$ ]]; then
  line=$1
  shift
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=( &amp;quot;$prefix&amp;quot;/**/*.gpg )
password_files=( &amp;quot;${password_files[@]#&amp;quot;$prefix&amp;quot;/}&amp;quot; )
password_files=( &amp;quot;${password_files[@]%.gpg}&amp;quot; )

password=$(printf &amp;#39;%s\n&amp;#39; &amp;quot;${password_files[@]}&amp;quot; | dmenu)

[[ -n $password ]] || exit

pass $@ &amp;quot;$password&amp;quot; | tail -n+$line | head -n1 | tr -d &amp;#39;\n&amp;#39; | xdotool type --clearmodifiers --file -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;直接 type して欲しいときの方が多いのでデフォルト動作を type に変更
(コピーしたかったら pass コマンドを使うので、というか直接 type させる以外する必要ない気が……)&lt;/li&gt;
&lt;li&gt;複数行に対応するため、1つめの引数が数字であればその行を出力するように変更&lt;/li&gt;
&lt;li&gt;otp なども入力できるように、以降の引数は dmenu ではなく pass に渡すように変更&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などをしました。&lt;/p&gt;
&lt;p&gt;dmenu にオプション渡してどうしたいんだろう……と思ってしまいました。 dmenu に慣れていないだけなんでしょうか？
それはともかく、パスワードを pass にがっつり依存してしまっているので、このスクリプトでかなり便利になりました。&lt;/p&gt;
&lt;p&gt;pass was written by Jason A. Donenfeld of zx2c4.com and is licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GPLv2&lt;/a&gt;+&lt;/p&gt;
&lt;p&gt;contrib なのでライセンス違うような気もしますがそうでもない気もします。contrib だから違うってことはないか。はい。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Scala.js 1.0 がリリースされました]]></title><description><![CDATA[ずっと待っていたのですが、ついに Scala.js の v1.0 がリリースされていたようです。 Announcing Scala.js 1.0.0 Scala などに慣れてしまって、 javascript や python…]]></description><link>https://ny-a.github.io/blog22020-03/scalajs-1-0-released/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/scalajs-1-0-released/</guid><pubDate>Mon, 02 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ずっと待っていたのですが、ついに Scala.js の v1.0 がリリースされていたようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.scala-js.org/news/2020/02/25/announcing-scalajs-1.0.0/&quot;&gt;Announcing Scala.js 1.0.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scala などに慣れてしまって、 javascript や python などは書きにくく感じてくるようになりました。
Scala.js が 1.0 になったことで業務にも採用しやすくなったかな？と思います。
ひとまず業務外で実際に使っていきたいです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[SpotFleet内の複数インスタンスで連番を生成するスクリプト]]></title><description><![CDATA[AWS でスポットインスタンスを複数起動して大量の処理を行うことがたまにあります。
Terraform で SpotFleet をリクエストして複数のインスタンスを立ち上げることはできますが、個別に user_data を指定するのは
少し面倒です。 ただ、同じ user…]]></description><link>https://ny-a.github.io/blog22020-03/sequential-number-in-spot-fleet-instances/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-03/sequential-number-in-spot-fleet-instances/</guid><pubDate>Sun, 01 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;AWS でスポットインスタンスを複数起動して大量の処理を行うことがたまにあります。
Terraform で SpotFleet をリクエストして複数のインスタンスを立ち上げることはできますが、個別に user_data を指定するのは
少し面倒です。&lt;/p&gt;
&lt;p&gt;ただ、同じ user_data でも、重複しない連番さえ取ることができればなんとかなることも多いはず……と思っていて、
パラメータストアを使ったり DynamoDB の AtomicCounter を使ったりしているようですが、
AWS CLI + jq だけで生成する方法を考えてみました。&lt;/p&gt;
&lt;h2&gt;スクリプト&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;#!/bin/bash

TOKEN=$(curl -s -XPUT &amp;quot;http://169.254.169.254/latest/api/token&amp;quot; -H &amp;quot;X-aws-ec2-metadata-token-ttl-seconds: 21600&amp;quot;)
INSTANCE_ID=$(curl -sH &amp;quot;X-aws-ec2-metadata-token: $TOKEN&amp;quot; http://169.254.169.254/latest/meta-data/instance-id)
FLEET_ID=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID | jq -r &amp;#39;.Reservations[].Instances[].Tags[] | select(.Key == &amp;quot;aws:ec2spot:fleet-request-id&amp;quot;).Value&amp;#39;)
TARGET_CAPACITY=$(aws ec2 describe-spot-fleet-requests --spot-fleet-request-ids $FLEET_ID | jq &amp;#39;.SpotFleetRequestConfigs[].SpotFleetRequestConfig.TargetCapacity&amp;#39;)

while true; do
  aws ec2 describe-instances --filter Name=tag:aws:ec2spot:fleet-request-id,Values=$FLEET_ID | jq -r &amp;#39;.Reservations[].Instances[].InstanceId&amp;#39; | sort &amp;gt; /tmp/instance_ids.txt
  if [ $(cat /tmp/instance_ids.txt | wc -l) -eq $TARGET_CAPACITY ]; then
    break
  fi
  sleep 10
done

cat /tmp/instance_ids.txt|awk &amp;quot;/$INSTANCE_ID/{print FNR - 1}&amp;quot;
rm /tmp/instance_ids.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SpotFleet で起動したインスタンスには、 FleetRequestId のタグが付けられています(というか taggingRole がありますよね)。
Tag がついているということはインスタンスをフィルタリングできるので、 FleetRequest 内のインスタンスIDを列挙してソートし、
自分のインスタンスIDの位置を awk で導出しています。(今回は 0-origin にしました。)&lt;/p&gt;
&lt;p&gt;これの弱点？として、インスタンスが全て立ち上がっているときを想定しているため、起動していないインスタンスは待ちますが、
既に終了したインスタンスがあって CLI で取得できなくなった場合は永遠に待ち続けてしまいます。
時間が経ってから呼ぶ可能性があるなら &lt;code class=&quot;language-text&quot;&gt;/tmp/instance_ids&lt;/code&gt; を消さないようにするか、
起動時に自動実行しておいて番号自体をキャッシュすればある程度回避できそうです。&lt;/p&gt;
&lt;p&gt;Ansible とか使えばいいのでは？という気持ちも少しずつ出てきています。
というか、こういった分離しやすいワークロードを分散して実行するようなツール、ありそうなんですよね……。
Docker 化してオーケストレーションが早そうではあります。 &lt;/p&gt;</content:encoded></item><item><title><![CDATA[sudoに-iオプションをつけるとクオートの挙動が変わってハマりました]]></title><description><![CDATA[コマンドには  オプションがあり、コマンドを走らせるユーザー(デフォルトは root)のログインシェルを
使ってコマンドを実行できますが、このオプションを指定する場合としない場合でクオートの扱いが変わってハマってしまいました。 具体的には、EC2 の root…]]></description><link>https://ny-a.github.io/blog22020-02/sudo-with-login-option-behavior-of-quote/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/sudo-with-login-option-behavior-of-quote/</guid><pubDate>Sat, 29 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sudo&lt;/code&gt; コマンドには &lt;code class=&quot;language-text&quot;&gt;-i/--login&lt;/code&gt; オプションがあり、コマンドを走らせるユーザー(デフォルトは root)のログインシェルを
使ってコマンドを実行できますが、このオプションを指定する場合としない場合でクオートの扱いが変わってハマってしまいました。&lt;/p&gt;
&lt;p&gt;具体的には、EC2 の root で実行される user_data スクリプトで、 パスフレーズなしのキーペアを生成する際に&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo -u ec2-user -i ssh-keygen -f .ssh/id_rsa -N &amp;#39;&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすると、 &lt;code class=&quot;language-text&quot;&gt;option requires an argument -- N&lt;/code&gt; というエラーが発生してしまいます。&lt;/p&gt;
&lt;p&gt;(ちなみにここで生成したキーペアは、 git clone をするための deploy key として使おうとしています。
user&lt;em&gt;data とはいえ private key を含めたくなかったので、インスタンスで生成して public key を登録する形にしました。
結局 API を叩くときなどに使用する token/secret は user&lt;/em&gt;data に含めることになるんですが……)&lt;/p&gt;
&lt;h2&gt;issues&lt;/h2&gt;
&lt;p&gt;この問題ズバリの issue が5年前に出ていますが、1つもコメントはついていません。
&lt;a href=&quot;https://bugzilla.sudo.ws/show_bug.cgi?id=679&quot;&gt;Bug 679 - sudo -i ignores empty arguments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10 年前の
&lt;a href=&quot;https://bugzilla.sudo.ws/show_bug.cgi?id=413&quot;&gt;Bug 413 - Unexpected change in quoting behaviour with -i flag&lt;/a&gt;
も同じ問題を指しているように読めますが、こちらも1ヶ月経たずに放置されてしまっています。&lt;/p&gt;
&lt;h2&gt;workaround&lt;/h2&gt;
&lt;p&gt;とりあえずの解決策としては、
&lt;a href=&quot;https://bugzilla.sudo.ws/show_bug.cgi?id=679&quot;&gt;#679&lt;/a&gt;
にある stackoverflow へのリンク
&lt;a href=&quot;https://stackoverflow.com/questions/27892812/passing-empty-arguments-to-sudo-i&quot;&gt;Passing empty arguments to sudo -i&lt;/a&gt;
にある通り、 &lt;code class=&quot;language-text&quot;&gt;sudo -i sh -c &amp;#39;foo &amp;quot;bar&amp;quot; &amp;quot;&amp;quot;&amp;#39;&lt;/code&gt; などとすればうまく動くようです。&lt;/p&gt;
&lt;p&gt;ただ、あまり嬉しい見た目ではないので、私は &lt;code class=&quot;language-text&quot;&gt;-i&lt;/code&gt; オプションを使わないで、
&lt;code class=&quot;language-text&quot;&gt;sudo -u ec2-user ssh-keygen -f /home/ec2-user/.ssh/id_rsa -N &amp;#39;&amp;#39;&lt;/code&gt;
とすることにしました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sudo&lt;/code&gt; がデファクトスタンダードのようなものと認識していて、何の疑問もなく使っていたのですが、
脆弱性の問題なども見かけるので &lt;code class=&quot;language-text&quot;&gt;doas&lt;/code&gt; なども使ってみようかなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GitHubのdependabotにPRをもらったのでマージしました]]></title><description><![CDATA[Jekyll で作ったブログのレポジトリに dependabot から PullRequest が来ていたのでマージしてみました。
今回はついでに他の Gem もアップデートしたので、コマンドラインからマージしました。 来た PullRequest は
Bump nokogiri…]]></description><link>https://ny-a.github.io/blog22020-02/github-dependabot/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/github-dependabot/</guid><pubDate>Fri, 28 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Jekyll で作ったブログのレポジトリに dependabot から PullRequest が来ていたのでマージしてみました。
今回はついでに他の Gem もアップデートしたので、コマンドラインからマージしました。&lt;/p&gt;
&lt;p&gt;来た PullRequest は
&lt;a href=&quot;https://github.com/ny-a/blog/pull/1&quot;&gt;Bump nokogiri from 1.10.7 to 1.10.8 #1&lt;/a&gt;
です。&lt;/p&gt;
&lt;p&gt;PR のブランチは &lt;code class=&quot;language-text&quot;&gt;dependabot/bundler/nokogiri-1.10.8&lt;/code&gt; に切られていました。
単に &lt;code class=&quot;language-text&quot;&gt;git fetch&lt;/code&gt; すれば降ってきます。
&lt;code class=&quot;language-text&quot;&gt;git merge dependabot/bundler/nokogiri-1.10.8&lt;/code&gt; すれば手元でのマージができるので、
&lt;code class=&quot;language-text&quot;&gt;git push origin master&lt;/code&gt; して PullRequest のマージが完了します。
PR のブランチは push 時に自動で削除されました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;git fetch -p&lt;/code&gt; すればリモートトラッキングブランチが削除されて、全て完了します。&lt;/p&gt;
&lt;p&gt;CVE などを購読して使っているソフトウェアのバージョンを管理するのは大変なので、
(GitHub 上の OSS に限りますが)セキュリティの問題を監視してもらえるのは助かります。
(今回は static なページだったのであまり影響はないと思いますが……。)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DNSSECの設定をしました]]></title><description><![CDATA[クライアント側もドメイン側も、設定するだけで DNSSEC が使える状態になっていたので、両方とも設定して
DNSSEC を有効にしてみました。 クライアント設定 DNS リゾルバは  を使っているので、 DNSSEC 対応の DNS サーバーが使われていれば DNSSEC…]]></description><link>https://ny-a.github.io/blog22020-02/set-up-dnssec/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/set-up-dnssec/</guid><pubDate>Thu, 27 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;クライアント側もドメイン側も、設定するだけで DNSSEC が使える状態になっていたので、両方とも設定して
DNSSEC を有効にしてみました。&lt;/p&gt;
&lt;h2&gt;クライアント設定&lt;/h2&gt;
&lt;p&gt;DNS リゾルバは &lt;code class=&quot;language-text&quot;&gt;systemd-resolved&lt;/code&gt; を使っているので、 DNSSEC 対応の DNS サーバーが使われていれば DNSSEC が有効になります。
&lt;code class=&quot;language-text&quot;&gt;1.1.1.1&lt;/code&gt; や &lt;code class=&quot;language-text&quot;&gt;8.8.8.8&lt;/code&gt; は DNSSEC に対応しています。
しかし、ルーターなどが提供するリゾルバは対応していないことが多いので、それをデフォルトで使っていて無効になっていました。
&lt;code class=&quot;language-text&quot;&gt;1.1.1.1&lt;/code&gt; を直接使うように設定するには、 &lt;code class=&quot;language-text&quot;&gt;/etc/systemd/resolved.conf&lt;/code&gt; に以下の行を追加します。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;DNS=1.1.1.1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;あとは &lt;code class=&quot;language-text&quot;&gt;sudo systemctl restart systemd-resolve&lt;/code&gt; を実行して、 &lt;code class=&quot;language-text&quot;&gt;systemd-resolved&lt;/code&gt; サービスを再起動すれば有効になります。&lt;/p&gt;
&lt;p&gt;有効になっていれば、 &lt;code class=&quot;language-text&quot;&gt;resolvectl query sigfail.verteiltesysteme.net&lt;/code&gt; を実行すると &lt;code class=&quot;language-text&quot;&gt;invalid&lt;/code&gt; とエラーが出るはずです。&lt;/p&gt;
&lt;h2&gt;ドメインの設定&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://hnw.hatenablog.com/entry/20160321&quot;&gt;DNSSEC対応の独自ドメインを年額$0.88で運用できるよという話&lt;/a&gt;
を見ると、海外のレジストラは DNSSEC に対応しているところが多いようです。
私の使っている &lt;code class=&quot;language-text&quot;&gt;nyaw.dev&lt;/code&gt; は Gandi で取得したため、ボタン1つで有効化することができました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dnsviz.net/d/nyaw.dev/dnssec/&quot;&gt;nyaw.dev - dnsviz&lt;/a&gt;
を確認すると、正常に設定されていることが確認できます。&lt;/p&gt;
&lt;p&gt;といっても、リダイレクトさせているのであんまり嬉しくはないんですが……。&lt;/p&gt;
&lt;p&gt;ブログだけではなくポートフォリオも含めてページを充実させていって、ドメイン設定もきちんとしていこうと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Xorgの仮想ディスプレイについて調べました]]></title><description><![CDATA[Linux デスクトップで、他のデバイスを VNC などを使って仮想的にワイアレスディスプレイとして使うために、
仮想ディスプレイを追加する方法を調べました。 余っているディスプレイ出力を使う [SOLVED] Creating a Virtual Display/monitor…]]></description><link>https://ny-a.github.io/blog22020-02/virtual-heads-of-xf86-video-intel/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/virtual-heads-of-xf86-video-intel/</guid><pubDate>Wed, 26 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Linux デスクトップで、他のデバイスを VNC などを使って仮想的にワイアレスディスプレイとして使うために、
仮想ディスプレイを追加する方法を調べました。&lt;/p&gt;
&lt;h2&gt;余っているディスプレイ出力を使う&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=180904&quot;&gt;[SOLVED] Creating a Virtual Display/monitor - Arch Forum&lt;/a&gt;
を見ると、余っている(ディスプレイを接続していない)ディスプレイ出力を使用して仮想ディスプレイを作成することができるようです。
ディスプレイを接続して表示している状態で切断した状態と同じだと思います。&lt;/p&gt;
&lt;p&gt;ただ、前回これを使って VNC で接続した場合、リフレッシュレートがかなり下がってしまっていた記憶があるため、
他の方法を探してみました。&lt;/p&gt;
&lt;h2&gt;VIRTUAL1を作成する&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/378373/add-virtual-output-to-xorg&quot;&gt;Add VIRTUAL output to Xorg - Stack Exchange&lt;/a&gt;
を見てみると、 intel ドライバを使って VirtualHeads を作成することができるようです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo pacman -S xf86-video-intel
cat &amp;lt;&amp;lt;EOH | sudo tee /etc/X11/xorg.conf.d/20-intel-virtual-heads.conf
Section &amp;quot;Device&amp;quot;
    Identifier &amp;quot;intelgpu0&amp;quot;
    Driver &amp;quot;intel&amp;quot;
    Option &amp;quot;VirtualHeads&amp;quot; &amp;quot;2&amp;quot;
EndSection
EOH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Xorg を再起動すると、output として VIRTUAL1 が追加されています。&lt;/p&gt;
&lt;p&gt;ただ、
&lt;a href=&quot;https://wiki.archlinux.jp/index.php/Intel_Graphics#.E3.82.A4.E3.83.B3.E3.82.B9.E3.83.88.E3.83.BC.E3.83.AB&quot;&gt;Intel Graphics - Arch Wiki&lt;/a&gt;
に書かれていますが、 &lt;code class=&quot;language-text&quot;&gt;xf86-video-intel&lt;/code&gt; は非推奨扱いになっていて、標準の &lt;code class=&quot;language-text&quot;&gt;modesetting&lt;/code&gt; ドライバが推奨されているようです。&lt;/p&gt;
&lt;p&gt;とはいえ、
&lt;a href=&quot;https://gitlab.freedesktop.org/xorg/xserver/issues/179&quot;&gt;xorg/xserver Issue#179&lt;/a&gt;
に issue が上がっていますが、 &lt;code class=&quot;language-text&quot;&gt;modesetting&lt;/code&gt; ドライバに VirtualHeads 機能は追加されていないようです。&lt;/p&gt;
&lt;p&gt;modesetting ドライバで仮想ディスプレイを作成する方法も調べてみましたが、うまく情報をみつけることができませんでした。
本当は Xmonad のワークスペースをマシン間で任意に対応させたいのですが……それはかなり難しそうですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[EC2にECDSAのキーを使ってSSHできるようにしました]]></title><description><![CDATA[AWS のキーペアは RSA しか対応していないと思いますが、最近は RSA を使うこともかなり減っていて、新しくセットアップした
PC などでは ECDSA/Ed25519 のキーしか作っていないこともあります。
そこで、 UserData を使って普段使いの SSH…]]></description><link>https://ny-a.github.io/blog22020-02/use-ecdsa-key-on-ec2/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/use-ecdsa-key-on-ec2/</guid><pubDate>Tue, 25 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;AWS のキーペアは RSA しか対応していないと思いますが、最近は RSA を使うこともかなり減っていて、新しくセットアップした
PC などでは ECDSA/Ed25519 のキーしか作っていないこともあります。
そこで、 UserData を使って普段使いの SSH キーを取得して SSH できるようにしました。&lt;/p&gt;
&lt;h2&gt;UserData&lt;/h2&gt;
&lt;p&gt;AmazonLinux2 を使っているので、ログインユーザーは &lt;code class=&quot;language-text&quot;&gt;ec2-user&lt;/code&gt; です。&lt;/p&gt;
&lt;p&gt;UserData を以下のようにします。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;#!/bin/bash

set -eu

curl https://github.com/ny-a.keys &amp;gt;&amp;gt; /home/ec2-user/.ssh/authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AmazonLinux に入っている OpenSSH のバージョンが古くて RSA にしか対応していないわけではないので、
&lt;code class=&quot;language-text&quot;&gt;authorized_keys&lt;/code&gt; に入れてあげさえすれば使うことができます。&lt;/p&gt;
&lt;p&gt;AWS のキーペアで管理しないため、本番環境などでは何か問題があるかも……とは思いますが、普段使いのキーを使える上に、
普段使いのキーを更新したあとに起動したインスタンスは新しいキーを使えるようになるので、利便性は高いんじゃないかなと
思います。&lt;/p&gt;
&lt;p&gt;とりあえず、開発中などはこのようにすると便利そうだと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AWS CLIでAssumeRole]]></title><description><![CDATA[AWS のアカウントを CLI から操作することが多いので credentials を保存しているのですが、
権限を多く持ったユーザーの認証情報を持っておくのは少し不安になったので、 AssumeRole…]]></description><link>https://ny-a.github.io/blog22020-02/aws-cli-assume-role/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/aws-cli-assume-role/</guid><pubDate>Mon, 24 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;AWS のアカウントを CLI から操作することが多いので credentials を保存しているのですが、
権限を多く持ったユーザーの認証情報を持っておくのは少し不安になったので、 AssumeRole を使って普段はあまり権限を
持たないユーザーの認証情報を持っておくことにしました。&lt;/p&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;p&gt;方法は
&lt;a href=&quot;https://aws.amazon.com/premiumsupport/knowledge-center/iam-assume-role-cli/&quot;&gt;How do I assume an IAM role using the AWS CLI?&lt;/a&gt;
に書いてある通りです。&lt;/p&gt;
&lt;p&gt;AssumeRole 時に MFA を要求するように設定することもできます。&lt;/p&gt;
&lt;p&gt;また、
&lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html&quot;&gt;Using an IAM Role in the AWS CLI&lt;/a&gt;
に記載のあるように、 AWS CLI では &lt;code class=&quot;language-text&quot;&gt;--profile&lt;/code&gt; オプションで指定することにより、自動で簡単に AssumeRole を
使用することができます。&lt;/p&gt;
&lt;p&gt;MFA を併用することで、 TOTP をパスワードとした sudo のような操作も可能になります。
また、検証環境と本番環境のロールを分けるといったことも考えられます。
誤操作を防ぎ、安全性を高められると思うので、このような機能は積極的に使っていこうと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[/dev/randomが遅かったので高速化を試してみました]]></title><description><![CDATA[ArchLinux をインストールしているノート PC…]]></description><link>https://ny-a.github.io/blog22020-02/hwrng-is-slow/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/hwrng-is-slow/</guid><pubDate>Sun, 23 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ArchLinux をインストールしているノート PC に &lt;code class=&quot;language-text&quot;&gt;rng-tools&lt;/code&gt; をインストールして、
初期設定の状態で &lt;code class=&quot;language-text&quot;&gt;rngd.service&lt;/code&gt; を起動していたのですが、乱数生成が遅く感じたので調べてみました。&lt;/p&gt;
&lt;h2&gt;乱数生成の速度計測&lt;/h2&gt;
&lt;p&gt;乱数生成の速度の計測は以下のコマンドで行いました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo dd if=/dev/random of=/dev/null bs=1 count=1000000 iflag=fullblock status=progress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この結果が、前から使っているノート PC では 400kB/s 程度出ていて、
&lt;a href=&quot;https://wiki.archlinux.org/index.php/Rng-tools&quot;&gt;Rng-tools - ArchWiki&lt;/a&gt;
では 50kB/s 程度出ていれば問題ないと書かれていますが、
新しい方のノート PC では 4kB/s 程度でした。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/dev&lt;/code&gt; を確認してみると、 &lt;code class=&quot;language-text&quot;&gt;/dev/hwrng&lt;/code&gt; は存在して、 &lt;code class=&quot;language-text&quot;&gt;rngd&lt;/code&gt; もそれを認識して正常に使用しているようでした。
搭載している tpm は 2.0 で、特に tpm 関連のエラーも出ていません。
また、 &lt;code class=&quot;language-text&quot;&gt;lscpu&lt;/code&gt; で確認すると、 &lt;code class=&quot;language-text&quot;&gt;rdrand&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;rdseed&lt;/code&gt; 両方のフラグが立っています。&lt;/p&gt;
&lt;h2&gt;rngd のソースの優先順位&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mankier.com/8/rngd#Entropy_Sources&quot;&gt;rngd(8) の Entropy_Source&lt;/a&gt;
を見ると、 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hwrng&lt;/li&gt;
&lt;li&gt;tpm&lt;/li&gt;
&lt;li&gt;rdrand&lt;/li&gt;
&lt;li&gt;darn&lt;/li&gt;
&lt;li&gt;nist&lt;/li&gt;
&lt;li&gt;jitter&lt;/li&gt;
&lt;li&gt;pkcs11&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;の順で使用するようです。&lt;/p&gt;
&lt;h2&gt;hwrng の無効化&lt;/h2&gt;
&lt;p&gt;そこで、 &lt;code class=&quot;language-text&quot;&gt;-r /&lt;/code&gt; など、適当なパスを指定して、hwrng を使わないように設定しました。
その結果、 600 kB/s 程度出るようになりました。&lt;/p&gt;
&lt;p&gt;hwrng の方が品質がよさそうですが、普段そこまでエントロピーの品質を気にしない場面においては、
速度が出る方が便利そうだと思い今回はこのように設定しました。
GPG キーなんかを作るときは hwrng を使った方がよさそうですが、そもそもノート PC などインターネットに接続された
マシンよりも、専用に用意したオフラインのマシンを使用する方が安全だと思うので、ほとんどの場面において
問題なさそうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[nftablesでdockerを使ってみました]]></title><description><![CDATA[Linux 3.13 から利用可能な、 iptables を置き換える(ことを目的とした)パケット分類フレームワークの(ファイアーウォール？)
nftables を、 docker を使っている環境で使ってみました。 インストール・有効化 Docker…]]></description><link>https://ny-a.github.io/blog22020-02/nftables-with-docker/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/nftables-with-docker/</guid><pubDate>Sat, 22 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Linux 3.13 から利用可能な、 iptables を置き換える(ことを目的とした)パケット分類フレームワークの(ファイアーウォール？)
nftables を、 docker を使っている環境で使ってみました。&lt;/p&gt;
&lt;h2&gt;インストール・有効化&lt;/h2&gt;
&lt;p&gt;Docker から使うには、 iptables の互換フロントエンドをインストールする必要があります。
nftables と一緒にインストールするには、以下を実行します。
(&lt;code class=&quot;language-text&quot;&gt;iptables-nft&lt;/code&gt; は &lt;code class=&quot;language-text&quot;&gt;iptables&lt;/code&gt; を置き換えます。)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo pacman -S nftables iptables-nft&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;nftables.service&lt;/code&gt; を起動すると、 &lt;code class=&quot;language-text&quot;&gt;/etc/nftables.conf&lt;/code&gt; から設定を読み込みます。
起動・自動的に起動するようにするには、以下を実行します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;sudo systemctl enbale --now nftables&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ArchLinux の nftables パッケージの &lt;code class=&quot;language-text&quot;&gt;etc/nftables.conf&lt;/code&gt; には、
シンプルでセキュアなファイアーウォールが設定されています。
1:0.9.3-1 時点での設定内容は以下の通りです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;#!/usr/bin/nft -f
# ipv4/ipv6 Simple &amp;amp; Safe Firewall
# you can find examples in /usr/share/nftables/

table inet filter {
  chain input {
    type filter hook input priority 0;

    # allow established/related connections
    ct state {established, related} accept

    # early drop of invalid connections
    ct state invalid drop

    # allow from loopback
    iifname lo accept

    # allow icmp
    ip protocol icmp accept
    ip6 nexthdr icmpv6 accept

    # allow ssh
    tcp dport ssh accept

    # everything else
    reject with icmpx type port-unreachable
  }
  chain forward {
    type filter hook forward priority 0;
    drop
  }
  chain output {
    type filter hook output priority 0;
  }

}

# vim:set ts=2 sw=2 et:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Docker を使用するための設定&lt;/h2&gt;
&lt;p&gt;標準のままだと、 Docker コンテナとの通信は forward チェインのルールにより drop されてしまいます。
docker エンジンによって作成される &lt;code class=&quot;language-text&quot;&gt;DOCKER-USER&lt;/code&gt; チェインのパケットを accept するには、以下のコマンドを実行します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;# ip ファミリーに filter テーブルを作成し、 DOCKER-USER チェインを追加する
$ sudo nft add table ip filter                                                                                                                                                                          :(
$ sudo nft add chain ip filter DOCKER-USER
$ sudo nft add rule ip filter DOCKER-USER mark set 1
# inet filter forward の drop ルールの handle を確認する (この場合は `handle 12`)
$ sudo nft list ruleset -a
table inet filter { # handle 25
	chain input { # handle 1
		type filter hook input priority filter; policy accept;
		ct state { established, related } accept # handle 5
		ct state invalid drop # handle 6
		iifname &amp;quot;lo&amp;quot; accept # handle 7
		ip protocol icmp accept # handle 8
		ip6 nexthdr ipv6-icmp accept # handle 9
		tcp dport 22 accept # handle 10
		reject # handle 11
	}

	chain forward { # handle 2
		type filter hook forward priority filter; policy accept;
		drop # handle 12
	}

	chain output { # handle 3
		type filter hook output priority filter; policy accept;
	}
}
table ip filter { # handle 26
	chain DOCKER-USER { # handle 1
		meta mark set 0x00000001 # handle 2
	}
}
# drop ルールの前に insert する(ここの `handle 12` は上で確認した handle に変更してください)
$ sudo nft insert rule inet filter forward handle 12 mark 1 accept
# ルールを /etc/nftables.conf に保存する
$ sudo nft list ruleset | sudo tee /etc/nftables.conf 
table inet filter {
	chain input {
		type filter hook input priority filter; policy accept;
		ct state { established, related } accept
		ct state invalid drop
		iifname &amp;quot;lo&amp;quot; accept
		ip protocol icmp accept
		ip6 nexthdr ipv6-icmp accept
		tcp dport 22 accept
		reject
	}

	chain forward {
		type filter hook forward priority filter; policy accept;
		meta mark 0x00000001 accept
		drop
	}

	chain output {
		type filter hook output priority filter; policy accept;
	}
}
table ip filter {
	chain DOCKER-USER {
		meta mark set 0x00000001
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nftables の設定の保存が完了したら、 &lt;code class=&quot;language-text&quot;&gt;docker.service&lt;/code&gt; を再起動することで
docker によりファイアウォールルールが作成されます。
(docker は iptables フロントエンドを使用するため、 &lt;code class=&quot;language-text&quot;&gt;iptables-nft&lt;/code&gt; パッケージに付属する &lt;code class=&quot;language-text&quot;&gt;iptables&lt;/code&gt; コマンドを使用して
ルールが追加されます。)
念のため &lt;code class=&quot;language-text&quot;&gt;nftables.service&lt;/code&gt; も再起動して、今保存したルールを再読み込みします。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sudo systemctl restart nftables docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;docker.service&lt;/code&gt; が正常に起動したら、 docker のルールが追加され、コンテナとの通信ができるようになっているはずです。&lt;/p&gt;
&lt;h2&gt;nftables インストール前の iptables ルールの参照&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;iptables&lt;/code&gt; コマンドの代わりに &lt;code class=&quot;language-text&quot;&gt;iptables-legacy&lt;/code&gt; コマンドを使用することで、
iptables で使っていたルールを確認することができます。&lt;/p&gt;
&lt;p&gt;docker のルールもこちらからインポートしようかなと思ったのですが、そうすると iptables-nft の互換性が壊れてしまって
docker.service の起動に失敗したので、 ArchWiki の方法に従いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[XRandRが自動で解像度を変えてくれると思ったら勘違いでした]]></title><description><![CDATA[Linux…]]></description><link>https://ny-a.github.io/blog22020-02/xrandr-changes-resolution/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/xrandr-changes-resolution/</guid><pubDate>Fri, 21 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Linux でマルチモニタ環境で使用する場合、モニタの設定は &lt;code class=&quot;language-text&quot;&gt;xrandr&lt;/code&gt; などを使って行いますが、
解像度の高い設定にしている状態でケーブルを抜き、解像度の低いモニタに接続した場合、
前は割とひどいことになったような気がしていたのですが、今試したところ最適な感じで縮小されて
表示されたので、動作を調べてみました。&lt;/p&gt;
&lt;p&gt;既にタイトルに書いてある通りこれは勘違いで、 xrandr は設定してある解像度で出力しているだけで、
モニタ側が自動で縮小してくれていたようでした。
モニタで縮小していても、 &lt;code class=&quot;language-text&quot;&gt;xrandr --output DP-1 --scale-from 1920x1080&lt;/code&gt; のように xrandr で縮小しても、
見た目は変わらないので……。&lt;/p&gt;
&lt;p&gt;全部 FullHD のモニタで統一すれば何も問題はないですが、現状そうなってはいないので……
まあモニタの接続を変更することは基本的にないので、出先等で何かする場合以外は特に問題になることもなさそうではあります。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RootKeySigningKeyCeremonyの延期]]></title><description><![CDATA[DNSSEC の Root KSK Ceremony が、金庫が開かなくなったため延期されていたようです。 Rescheduling Root KSK Ceremony 40
で告知されていますが、
@joao_damas…]]></description><link>https://ny-a.github.io/blog22020-02/rescheduling-root-ksk-ceremony-40/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/rescheduling-root-ksk-ceremony-40/</guid><pubDate>Thu, 20 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;DNSSEC の Root KSK Ceremony が、金庫が開かなくなったため延期されていたようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mm.icann.org/pipermail/root-dnssec-announce/2020/000121.html&quot;&gt;Rescheduling Root KSK Ceremony 40&lt;/a&gt;
で告知されていますが、
&lt;a href=&quot;https://twitter.com/joao_damas/status/1228382028808114177&quot;&gt;@joao_damas さんのツイート&lt;/a&gt;
で写真を見ると分かりやすいですね。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.iana.org/dnssec/ceremonies/40&quot;&gt;IANA のサイト&lt;/a&gt; では、延期されたセレモニーの動画を見ることができます。
HSM を使っていたり、かなり厳重なセキュリティを確保しているのが分かりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ターミナルの色をAppSignalベースに変更しました]]></title><description><![CDATA[ターミナルエミュレータは rxvt-unicode を使っていて、デフォルトの白背景で使っているのですが、
黄色の文字がどうにも見えなくて困っていました。 ターミナルの基本的な ANSI escape sequence に対応する色は
ANSIescapecode…]]></description><link>https://ny-a.github.io/blog22020-02/terminal-color-from-appsignal/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/terminal-color-from-appsignal/</guid><pubDate>Wed, 19 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;ターミナルエミュレータは rxvt-unicode を使っていて、デフォルトの白背景で使っているのですが、
黄色の文字がどうにも見えなくて困っていました。&lt;/p&gt;
&lt;p&gt;ターミナルの基本的な ANSI escape sequence に対応する色は
&lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit&quot;&gt;ANSI&lt;em&gt;escape&lt;/em&gt;code - Wikipedia&lt;/a&gt;
に一覧があります。 rxvt-unicode は xterm のものとほぼ同じようです。&lt;/p&gt;
&lt;p&gt;白背景で見やすい色の組み合わせを探してみたところ、
&lt;a href=&quot;https://github.com/jeffkreeftmeijer/appsignal.terminal&quot;&gt;jeffkreeftmeijer/appsignal.terminal&lt;/a&gt;
が白背景でも黒背景でも見やすく感じたため、試してみました。&lt;/p&gt;
&lt;p&gt;itermcolors は XML で RGB それぞれ 0-1 の実数値で表現されているようなので、きっと先人が hex に変換するスクリプトを
公開しているはずです。
Gist にありましたが、 &lt;code class=&quot;language-text&quot;&gt;Color Space&lt;/code&gt; が入っているものに対応していないようだったので、少し修正して
&lt;a href=&quot;https://gist.github.com/ny-a/35fe6c8e9babeff6a0fded6dfb58f563&quot;&gt;Gist&lt;/a&gt;
に公開しておきました。&lt;/p&gt;
&lt;p&gt;さて、基本は上記スクリプトで変換して &lt;code class=&quot;language-text&quot;&gt;Xresources&lt;/code&gt; に設定するだけですが、赤だったところが青になったり、少し違和感を
感じました。そこで、色の対応を似ているものに変更してみました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;URxvt.color0: #463f31
URxvt.color4: #3316c3
URxvt.color2: #50af4c
URxvt.color6: #04aaef
URxvt.color5: #c46109
URxvt.color1: #8f0c8a
URxvt.color3: #8a7d06
URxvt.color7: #c5beb0
URxvt.color8: #5f584a
URxvt.color12: #7255ff
URxvt.color10: #8fee8b
URxvt.color14: #43e9ff
URxvt.color13: #ffa048
URxvt.color9: #ce4bc9
URxvt.color11: #c9bc45
URxvt.color15: #fffbf2

URxvt.foreground: 15
URxvt.background: 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;赤というよりマゼンタ、マゼンタというよりオレンジという感じになってしまいましたが
(もしかしたらマゼンタとオレンジを入れ替えた方が自然かも)、
とりあえず今までとあまり変わりなく、視認性がかなり上がりました。&lt;/p&gt;
&lt;p&gt;ちなみに、 &lt;code class=&quot;language-text&quot;&gt;urxvtc -fg 15 -bg 0&lt;/code&gt; で起動すると、黒背景にすることができます。&lt;/p&gt;
&lt;p&gt;IDEA や VSCode のターミナルの色はそのままですが……設定を同期するのがそれなりに面倒くさいので、色設定などは
設定ファイルを共通化したいものですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[OpenSSH8.2でFIDO2を試しました]]></title><description><![CDATA[といってもキーの生成だけですが…… とりあえず手元にある古い(？) Yubikey を使って ecdsa-sk のキーの生成ができることを確認してみます。 256 bit になってしまいました、 Yubikey 側の制限ですかね？ 念のため？ ed25519-sk…]]></description><link>https://ny-a.github.io/blog22020-02/tried-openssh-8-2-fido/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/tried-openssh-8-2-fido/</guid><pubDate>Tue, 18 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;といってもキーの生成だけですが……&lt;/p&gt;
&lt;p&gt;とりあえず手元にある古い(？) Yubikey を使って ecdsa-sk のキーの生成ができることを確認してみます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ ssh-keygen -t ecdsa-sk -b 521
Generating public/private ecdsa-sk key pair.
You may need to touch your authenticator to authorize key generation.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in ...
Your public key has been saved in ...
The key fingerprint is:
SHA256:LHym5H0zQ6tvRXNZp/bMEUy7F1WN6tUicAGJMjxSOZQ ...
The key&amp;#39;s randomart image is:
+-[ECDSA-SK 256]--+
|     +oo ..o..oo=|
|    . E . o . .o*|
|     . =   o . Bo|
|     . .    = B.+|
|      + S .o * *o|
|     o * . .o   =|
|      o . *.     |
|         o.+     |
|        .o.      |
+----[SHA256]-----+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;256 bit になってしまいました、 Yubikey 側の制限ですかね？&lt;/p&gt;
&lt;p&gt;念のため？ ed25519-sk のキーも生成してみます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ ssh-keygen -t ed25519-sk -b 521
Generating public/private ed25519-sk key pair.
You may need to touch your authenticator to authorize key generation.
Key enrollment failed: requested feature not supported&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yubikey が ed25519 に対応していないのでこちらは当然失敗しました。&lt;/p&gt;
&lt;p&gt;生成に成功した ecdsa-sk キーを使って ssh しようとしてみましたが、相手が openssh7.9p1 だったので失敗しました。&lt;/p&gt;
&lt;p&gt;とはいえ Yubikey の SmartCard の方が〜〜〜、というか対応サーバーが十分普及したら使うか考えましょう。&lt;/p&gt;
&lt;p&gt;リリースノート、FIDO2/U2F と書いている部分と FIDO2 しか書いていない部分があって、 U2F しか書いていない部分はない？ので、
U2F についてはよく分かっていません……というか、認証周りいろいろややこしすぎて……追い追い調べてまとめようと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[OpenSSH8.2でfido2/u2fを試そうとしました]]></title><description><![CDATA[OpenSSH 8.2 がリリースされ、 fido2/u2f が公式にサポートされたようなので試してみました。 私は ArchLinux を使っているので比較的早くパッケージが降ってきます。
具体的には、 2020-02-14 にリリースされ、当日中には
testing…]]></description><link>https://ny-a.github.io/blog22020-02/tried-to-openssh-8-2-fido/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/tried-to-openssh-8-2-fido/</guid><pubDate>Mon, 17 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;OpenSSH 8.2 がリリースされ、 fido2/u2f が公式にサポートされたようなので試してみました。&lt;/p&gt;
&lt;p&gt;私は ArchLinux を使っているので比較的早くパッケージが降ってきます。
具体的には、 2020-02-14 にリリースされ、当日中には
testing レポジトリに入り、 2020-02-16 03:30Z に core レポジトリに入りました。
core に入ったことにより &lt;code class=&quot;language-text&quot;&gt;pacman -Syu&lt;/code&gt; でインストールできるようになったので試してみましょう。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.openssh.com/txt/release-8.2&quot;&gt;OpenSSH 8.2 のリリースノート&lt;/a&gt; を見ると、
&lt;code class=&quot;language-text&quot;&gt;ssh-keygen -t ecdsa-sk&lt;/code&gt; で FIDO token backed key を生成することができるようですが、
試してみると、&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ ssh-keygen -t ecdsa-sk                                                                   :(
Generating public/private ecdsa-sk key pair.
You may need to touch your authenticator to authorize key generation.
Provider &amp;quot;&amp;quot; dlsym(sk_api_version) failed: /usr/lib/ssh/ssh-sk-helper: undefined symbol: sk_api_version
Key enrollment failed: invalid format&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり失敗します。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Yubico/libfido2/issues/116&quot;&gt;Yubico/libfido2 Issue#116&lt;/a&gt;
を見ると、 &lt;code class=&quot;language-text&quot;&gt;ssh-keygen -t ecdsa-sk -w /usr/lib/libsk-libfido2.so&lt;/code&gt; を実行すると以下のようなエラーが出ると書かれています。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ ssh-keygen -t ecdsa-sk -w /usr/lib/libsk-libfido2.so                                     :(
Generating public/private ecdsa-sk key pair.
You may need to touch your authenticator to authorize key generation.
Provider &amp;quot;/usr/lib/libsk-libfido2.so&amp;quot; implements unsupported version 0x00020000 (supported: 0x00040000)
Key enrollment failed: invalid format&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://bugs.archlinux.org/task/65513&quot;&gt;FS#65513&lt;/a&gt;
にも書かれていますが、これは OpenSSH の configure 時に &lt;code class=&quot;language-text&quot;&gt;--with-security-key-builtin&lt;/code&gt; オプションを付けてビルドすると
-w オプションなしで使えるようになるようです。
上記でパッケージのバグとコメントされているので、数日中に直るでしょう。&lt;/p&gt;
&lt;p&gt;リビルドすれば試せますが、現状は Yubikey で間に合っているので降ってきたら試そうと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Git rerereサブコマンドを知りました]]></title><description><![CDATA[The Git Rerere Command — Automate Solutions to Fix Merge Conflicts
を見て  サブコマンドを知りました。
と言ってもまだ experimental…]]></description><link>https://ny-a.github.io/blog22020-02/git-rerere/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/git-rerere/</guid><pubDate>Sun, 16 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://levelup.gitconnected.com/the-git-rerere-command-automate-solutions-to-fix-merge-conflicts-d501a9ab9007&quot;&gt;The Git Rerere Command — Automate Solutions to Fix Merge Conflicts&lt;/a&gt;
を見て &lt;code class=&quot;language-text&quot;&gt;git-rerere&lt;/code&gt; サブコマンドを知りました。
と言ってもまだ experimental なようで、 &lt;code class=&quot;language-text&quot;&gt;git config [--global] rerere.enabled true&lt;/code&gt; を実行しないと使えないようです。&lt;/p&gt;
&lt;p&gt;上記の記事を見て少し試してみましたが、業務では今のところ使おうとは思いませんでした。
conflict したときに &lt;code class=&quot;language-text&quot;&gt;git consult&lt;/code&gt; みたいなコマンドを呼んで、過去の似た conflict 解消を含む merge commit を参照して、
似たような解決を試みるようなものが欲しいのかなと思いました。
といっても、それだと rebase なんかを consult できないので、 rerere の方が少し強力ではありますが。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/docs/git-rerere&quot;&gt;git-rerere のドキュメント&lt;/a&gt; をちらっと見てみて、他にもいろいろな
サブコマンドがあるのでそれを見てみたら、 &lt;code class=&quot;language-text&quot;&gt;git-worktree&lt;/code&gt; など知らないコマンドを知ることができて楽しいです。&lt;/p&gt;
&lt;p&gt;とはいえ、 git も複雑になりすぎているのでは……と思うこともあります。
サブコマンドに分かれているとはいえ……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[NFCカードリーダーを買いました]]></title><description><![CDATA[PaSoRi でいいのでは？と思ったけど ACR122U の方が安いみたい？だったのでそっちを買ってみました。
マイナンバーカードとかも読めるようです。 届いたのでいろいろ触ってみているのですが、どうも期待していたマイナンバーカードや Smart Card…]]></description><link>https://ny-a.github.io/blog22020-02/acr122-nfc-reader/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/acr122-nfc-reader/</guid><pubDate>Sat, 15 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;PaSoRi でいいのでは？と思ったけど ACR122U の方が安いみたい？だったのでそっちを買ってみました。
マイナンバーカードとかも読めるようです。&lt;/p&gt;
&lt;p&gt;届いたのでいろいろ触ってみているのですが、どうも期待していたマイナンバーカードや Smart Card の読み取りを
うまくさせることができません。 acsccid とかいろいろ入れてみたのですが……&lt;/p&gt;
&lt;p&gt;PaSoRi 買いましょう。多分そっちの方が早い。
(libnfc ではちゃんと読めてるようなんですが…… PIV とか使いたいので微妙な気持ち。)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DevelopersSummitの1日目に行きました]]></title><description><![CDATA[Developers Summit の1日目に行ってきました。
楽しみにしていた 6gram のセッションを聞くことができました。 基本は SRE Next のスライドとほぼ同じような内容でしたが、
ApplePay/GooglePay との Token Service…]]></description><link>https://ny-a.github.io/blog22020-02/developers-summit-day-1/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/developers-summit-day-1/</guid><pubDate>Fri, 14 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Developers Summit の1日目に行ってきました。
楽しみにしていた 6gram のセッションを聞くことができました。&lt;/p&gt;
&lt;p&gt;基本は SRE Next のスライドとほぼ同じような内容でしたが、
ApplePay/GooglePay との Token Service Provider 連携の方法で、
決済速度や PCI DSS 準拠部分の切り出しなどの比較があり、kyash の高速化も同じようなことをしたのかななどと考えていました。&lt;/p&gt;
&lt;p&gt;LINE のプライベートクラウドや、星野リゾートの話も参考になりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[手元のYubikey5NFCのECCの対応状況を調べました]]></title><description><![CDATA[Yubikeyのファームウェア5.2.3がリリースされていました
で、新しい Yubikey では Ed25519 などの ECC (楕円曲線暗号) に対応していることを知りましたが、
手元にある v5.1.2 の Yubikey の対応状況を調べてみました。 Yubikey…]]></description><link>https://ny-a.github.io/blog22020-02/yubikey-5-1-2-ecc-capabilities/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/yubikey-5-1-2-ecc-capabilities/</guid><pubDate>Thu, 13 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-02/yubikey-firmware-5-2-3/&quot;&gt;Yubikeyのファームウェア5.2.3がリリースされていました&lt;/a&gt;
で、新しい Yubikey では Ed25519 などの ECC (楕円曲線暗号) に対応していることを知りましたが、
手元にある v5.1.2 の Yubikey の対応状況を調べてみました。&lt;/p&gt;
&lt;p&gt;Yubikey の商品説明のページには、
&lt;code class=&quot;language-text&quot;&gt;RSA 2048, RSA 4096 (PGP), ECC p256, ECC p384&lt;/code&gt;
と書いてあります。私はてっきり OpenPGP モードでも ECC p384 が使えると思っていたのですが、
どうやら OpenPGP では RSA 2048/4096 、 PIV では 3DES, RSA 1024/2048, ECC p256/384 が使えるようです。&lt;/p&gt;
&lt;p&gt;ますます新しい Yubikey が欲しくなってきたのですが、まだまだ PIV あたりの仕様や PGP Smartcard などについても
慣れていないので、まずはいろいろ試してみようと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Removing diversion by rpikernelhack]]></title><description><![CDATA[Raspbian のインストールをしていたのですが、  を実行すると見慣れない  という文字を
見掛けました。 検索してみると、Stack Exchange で fake package だという情報が
見つかりました。
fat32 では Hard link…]]></description><link>https://ny-a.github.io/blog22020-02/rpikernelhack/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/rpikernelhack/</guid><pubDate>Wed, 12 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Raspbian のインストールをしていたのですが、 &lt;code class=&quot;language-text&quot;&gt;apt-get upgrade&lt;/code&gt; を実行すると見慣れない &lt;code class=&quot;language-text&quot;&gt;rpikernelhack&lt;/code&gt; という文字を
見掛けました。&lt;/p&gt;
&lt;p&gt;検索してみると、&lt;a href=&quot;https://raspberrypi.stackexchange.com/a/94827&quot;&gt;Stack Exchange&lt;/a&gt; で fake package だという情報が
見つかりました。
fat32 では Hard link がサポートされていないから、  dpkg の diversion という機能を使用(濫用？)しているようです。&lt;/p&gt;
&lt;p&gt;RPi forum の &lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?t=99264&quot;&gt;upgrade to unbootable&lt;/a&gt;
と同じようなメッセージを見かけたのですが、どうもファイルシステムのサイズを拡張する前にアップグレードすると
このようなメッセージが出ると書いてあります。&lt;/p&gt;
&lt;p&gt;初回起動時にファイルシステムのサイズが調整されると思っていて、それは済んでいるはずですがそれとは違うんでしょうか。
今のところ再起動しても起動しなくなるようなことはないですが、初回アップグレード前に一度再起動する必要があると
いうことなんでしょうかね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ブラウザ上でssh-keygenができるツール]]></title><description><![CDATA[ssh-keygenをブラウザだけでローカルで安全に鍵生成するWebアプリ
を見つけました。 Secure ssh-keygen only on Web browser Web Crypto API
を使って実現しているようです。 上記の Web アプリでは RSA…]]></description><link>https://ny-a.github.io/blog22020-02/npm-ssh-keygen/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/npm-ssh-keygen/</guid><pubDate>Tue, 11 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://scrapbox.io/nwtgck/ssh-keygen%E3%82%92%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A0%E3%81%91%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7%E5%AE%89%E5%85%A8%E3%81%AB%E9%8D%B5%E7%94%9F%E6%88%90%E3%81%99%E3%82%8BWeb%E3%82%A2%E3%83%97%E3%83%AA&quot;&gt;ssh-keygenをブラウザだけでローカルで安全に鍵生成するWebアプリ&lt;/a&gt;
を見つけました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ssh-keygen.netlify.com/&quot;&gt;Secure ssh-keygen only on Web browser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API&quot;&gt;Web Crypto API&lt;/a&gt;
を使って実現しているようです。&lt;/p&gt;
&lt;p&gt;上記の Web アプリでは RSA にしか対応していませんが、 Web Crypto は ECDSA にも対応しているようです。
EdDSA には対応していないんでしょうか。
乱数ソースも提供されているので、 EdDSA は javascript で実装してしまえば……などと思いました。
EdDSA についてあまりよく分かっていないので調査しようと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Android用e-Taxアプリで確定申告をしようとしてハマりました]]></title><description><![CDATA[今年からマイナンバーカードと Android 端末 / iPhone を使って確定申告ができるようになりましたが、
Android の e-Tax アプリから確定申告をしようとしても辿りつけませんでした。 e-Tax アプリを起動すると、 e-Taxソフト(SP…]]></description><link>https://ny-a.github.io/blog22020-02/e-tax-for-android/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/e-tax-for-android/</guid><pubDate>Mon, 10 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今年からマイナンバーカードと Android 端末 / iPhone を使って確定申告ができるようになりましたが、
Android の e-Tax アプリから確定申告をしようとしても辿りつけませんでした。&lt;/p&gt;
&lt;p&gt;e-Tax アプリを起動すると、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e-Taxソフト(SP版)&lt;/li&gt;
&lt;li&gt;確定申告書等の送信結果一覧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の2つのメニューが表示され、 e-Tax ソフトを選べば確定申告ができると思ったのですが、そうではありませんでした。&lt;/p&gt;
&lt;p&gt;確定申告をするには、 PC と同じく
&lt;a href=&quot;https://www.keisan.nta.go.jp/kyoutu/ky/sm/top#bsctrl&quot;&gt;国税庁 確定申告書等作成コーナー&lt;/a&gt;
から作成する必要があるようです。
e-Tax アプリと JPKIMobile は、単にカードを読み取るときに呼び出されるという形のようです。&lt;/p&gt;
&lt;p&gt;e-Tax アプリに確定申告書等作成コーナーへのリンクをつけることはできなかったんでしょうか……
e-Tax ソフト(SP版) のメニューをくまなく探してしまったので、少しがっかりしました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DNSSEC validation failed エラー]]></title><description><![CDATA[Raspberry Pi に ArchLinux をインストールして RTC モジュールの設定をしてみたのですがうまくいかず、
DNSSEC…]]></description><link>https://ny-a.github.io/blog22020-02/dnssec-error/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/dnssec-error/</guid><pubDate>Sun, 09 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Raspberry Pi に ArchLinux をインストールして RTC モジュールの設定をしてみたのですがうまくいかず、
DNSSEC のエラーでホスト名の解決ができない問題に遭遇しました。&lt;/p&gt;
&lt;p&gt;始めの問題としては、 &lt;code class=&quot;language-text&quot;&gt;pacman -Syu&lt;/code&gt; が通りませんでした。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ sudo pacman -Syu
:: Synchronizing package databases...
error: failed retrieving file &amp;#39;core.db&amp;#39; from mirror.archlinuxarm.org : Could not resolve host: mirror.archlinuxarm.org
error: failed to update core (invalid url for server)
error: failed retrieving file &amp;#39;extra.db&amp;#39; from mirror.archlinuxarm.org : Could not resolve host: mirror.archlinuxarm.org
error: failed to update extra (invalid url for server)
error: failed retrieving file &amp;#39;community.db&amp;#39; from mirror.archlinuxarm.org : Could not resolve host: mirror.archlinuxarm.org
error: failed to update community (invalid url for server)
error: failed retrieving file &amp;#39;alarm.db&amp;#39; from mirror.archlinuxarm.org : Could not resolve host: mirror.archlinuxarm.org
error: failed to update alarm (invalid url for server)
error: failed retrieving file &amp;#39;aur.db&amp;#39; from mirror.archlinuxarm.org : Could not resolve host: mirror.archlinuxarm.org
error: failed to update aur (invalid url for server)
error: failed to synchronize all databases&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;/etc/resolv.conf&lt;/code&gt; の内容は問題なさそうですし、 &lt;code class=&quot;language-text&quot;&gt;systemd-networkd&lt;/code&gt; と &lt;code class=&quot;language-text&quot;&gt;systemd-resolved&lt;/code&gt; も問題なく動いていて、
その2つを restart してみても変わりませんでした。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;dig&lt;/code&gt; コマンドを入れようにも pacman が通らないのですが、 &lt;code class=&quot;language-text&quot;&gt;systemd-resolve&lt;/code&gt; コマンドでホスト名の解決ができるようです。
試してみると、&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ systemd-resolve ntp.org
ntp.org: resolve call failed: DNSSEC validation failed: no-signature&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などと出てホスト名が解決できないようです。
&lt;code class=&quot;language-text&quot;&gt;systemctl status systemd-resolved&lt;/code&gt; を見てみると、他のホスト名も同様にエラーになっています。
(初めの方は &lt;code class=&quot;language-text&quot;&gt;no-signature&lt;/code&gt; ではなく &lt;code class=&quot;language-text&quot;&gt;signature-expired&lt;/code&gt; が出ていました)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://archlinuxarm.org/forum/viewtopic.php?f=9&amp;#x26;t=13614&quot;&gt;[SOLVED] DNS not working after pacman -Syu&lt;/a&gt;
に &lt;code class=&quot;language-text&quot;&gt;systemd-resolved&lt;/code&gt; を止めるという解決方法が書かれていたので試したところ、うまくいきました。&lt;/p&gt;
&lt;p&gt;DNSSEC についてあまり詳しくないので、きちんと調べてみようと思いました……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RaspberryPi(Raspbian)にRTCモジュール(DS3231)を接続しました]]></title><description><![CDATA[エアギャップコンピュータを準備するにあたって、時刻合わせは面倒な課題です。
特に GPG などで証明書を発行する場合、発行する日の情報は必要不可欠だからです。 ただ、普通のコンピュータは NTP などでインターネットから時刻情報を取得できますが、
Raspberry Pi…]]></description><link>https://ny-a.github.io/blog22020-02/connect-rtc-ds3231-to-raspberry-pi/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/connect-rtc-ds3231-to-raspberry-pi/</guid><pubDate>Sat, 08 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;エアギャップコンピュータを準備するにあたって、時刻合わせは面倒な課題です。
特に GPG などで証明書を発行する場合、発行する日の情報は必要不可欠だからです。&lt;/p&gt;
&lt;p&gt;ただ、普通のコンピュータは NTP などでインターネットから時刻情報を取得できますが、
Raspberry Pi をオフラインで使用すると、 RTC モジュールが搭載されていないため、
毎回時刻を手動で合わせる必要があります。&lt;/p&gt;
&lt;p&gt;そこで、 I2C 接続で 1000円程度で買うことができる RTC モジュールを接続してみました。&lt;/p&gt;
&lt;p&gt;Raspbian での設定は
&lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?t=161133&quot;&gt;Install DS3231 Real Time Clock - Latest Info&lt;/a&gt;
に書いてある通りです。
ArchLinux だと &lt;code class=&quot;language-text&quot;&gt;/boot/config.txt&lt;/code&gt; の1行だけでいけたかもしれません。明日もう一度確認してみます。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DevelopersSummitに申し込みました]]></title><description><![CDATA[Developers Summit、略してデブサミですが、今まで名前は聞いたことはあったものの参加したことはなかったので、
今年こそはと申し込んでみました。 Developers Summit 202…]]></description><link>https://ny-a.github.io/blog22020-02/applied-to-developers-summit/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/applied-to-developers-summit/</guid><pubDate>Fri, 07 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Developers Summit、略してデブサミですが、今まで名前は聞いたことはあったものの参加したことはなかったので、
今年こそはと申し込んでみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://event.shoeisha.jp/devsumi/20200213/timetable&quot;&gt;Developers Summit 2020 のタイムテーブル&lt;/a&gt; を見ると、
ほとんどのセッションが満員かほぼ満員になっているようです。
あまりこのような大規模なイベントに参加したことがないので驚きました。&lt;/p&gt;
&lt;p&gt;ただ、申し込み締め切りの1週間前(イベントの2週間前)に申し込んだときには、セッションのいくつかが調整中になっていたのが
気になってしまいました。
もちろん、イベントの主催側に回ったこともあるので苦労はよく分かっているつもりですが、ここまで大規模なイベントに
なっても同じような悩みというか、直前まで準備に忙しいような感じになるのは仕方ないのかな……という気持ちになりました。&lt;/p&gt;
&lt;p&gt;イベントの開催も来週に迫りましたし、主催や出展のある方は頑張ってください！
初参加なので楽しみにしています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ターミナルでEnterが^Mになってしまうときの対処法]]></title><description><![CDATA[コマンドなどでターミナルにバイナリ(制御文字)を吐いてしまうと、 Enter キーを押しても
 などのパスワード入力を確定できなくなることがあります。
(前使っていた xterm ではコマンドの入力もできなくなっていた気がしますが、 rxvt-unicode…]]></description><link>https://ny-a.github.io/blog22020-02/stty-to-fix-enter-key/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/stty-to-fix-enter-key/</guid><pubDate>Thu, 06 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;cat&lt;/code&gt; コマンドなどでターミナルにバイナリ(制御文字)を吐いてしまうと、 Enter キーを押しても
&lt;code class=&quot;language-text&quot;&gt;sudo&lt;/code&gt; などのパスワード入力を確定できなくなることがあります。
(前使っていた xterm ではコマンドの入力もできなくなっていた気がしますが、 rxvt-unicode ではコマンドは使えるようです。)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://askubuntu.com/questions/441744/pressing-enter-produces-m-instead-of-a-newline/454663&quot;&gt;Pressing enter produces ^M instead of a newline - Ask Ubuntu&lt;/a&gt;
に書いてある通りですが、
&lt;code class=&quot;language-text&quot;&gt;stty sane&lt;/code&gt; (全てデフォルト値に戻す) か &lt;code class=&quot;language-text&quot;&gt;stty icrnl&lt;/code&gt; (CR を new line として扱う) を実行すれば直るようです。&lt;/p&gt;
&lt;p&gt;これで遠慮なくバイナリを吐かせることができますね。
と思ったのですが、
&lt;a href=&quot;https://security.stackexchange.com/questions/56307/can-cat-ing-a-file-be-a-potential-security-risk&quot;&gt;Can “cat-ing” a file be a potential security risk?&lt;/a&gt;
などを見るとセキュリティ上あまり好ましくないようですね……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[YubikeyにGPGキーを登録しました]]></title><description><![CDATA[新しいGPGキーを作成しました
で GPG キーを作成しましたが、 Yubikey も活用できるように Yubikey にも GPG キーを登録してみました。 マスターキーの入っている環境で新しくサブキーを作成します。
 や  コマンドで試した感じでは、手元の Yubikey…]]></description><link>https://ny-a.github.io/blog22020-02/save-gpg-key-on-yubikey/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/save-gpg-key-on-yubikey/</guid><pubDate>Wed, 05 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-02/create-new-gpg-key/&quot;&gt;新しいGPGキーを作成しました&lt;/a&gt;
で GPG キーを作成しましたが、 Yubikey も活用できるように Yubikey にも GPG キーを登録してみました。&lt;/p&gt;
&lt;p&gt;マスターキーの入っている環境で新しくサブキーを作成します。
&lt;code class=&quot;language-text&quot;&gt;ykman piv&lt;/code&gt; や &lt;code class=&quot;language-text&quot;&gt;gpg&lt;/code&gt; コマンドで試した感じでは、手元の Yubikey には RSA 以外の ECDSA/EdDSA のキーを
登録することができませんでした。
(Yubikey5 NFC, Firmware 5.1.2 なのでできると思ったのですが……)
そのため、 RSA 4096bit のサブキーを3種類作成します。&lt;/p&gt;
&lt;p&gt;そして、それぞれ &lt;code class=&quot;language-text&quot;&gt;keytocard&lt;/code&gt; を実行して、 Yubikey に秘密鍵を移動します。
移動すると &lt;code class=&quot;language-text&quot;&gt;ssb&amp;gt;&lt;/code&gt; と表示され、 &lt;code class=&quot;language-text&quot;&gt;Card serial No.&lt;/code&gt;  が表示されます(このあたりがどう保存されているか気になっています)。&lt;/p&gt;
&lt;p&gt;あとは PIN を適宜変更するのですが、 &lt;code class=&quot;language-text&quot;&gt;gpg --edit-card&lt;/code&gt; と &lt;code class=&quot;language-text&quot;&gt;ykman piv&lt;/code&gt; で PIN の管理が別なのかはよく分かっていません。
(登録してみた感じだと別で管理されているようですが、きちんと調べられていません)
&lt;code class=&quot;language-text&quot;&gt;gpg&lt;/code&gt; の PIN, Admin PIN, &lt;code class=&quot;language-text&quot;&gt;ykman piv&lt;/code&gt; の PIN, PUK に加え、 Management Key というものがありますが、
これは &lt;code class=&quot;language-text&quot;&gt;ykman piv change-management-key -p&lt;/code&gt; を実行して PIN を入力することで、 PIN から生成して PIN で認証するように
することができます。&lt;/p&gt;
&lt;p&gt;無事登録できたので、&lt;code class=&quot;language-text&quot;&gt;password-store&lt;/code&gt; では PC に保存しているサブキーと Yubikey に移動したサブキーの両方で
使えるようにしようと思ったのですが、 gpg では最新の暗号化用のキーを使って暗号化するようで、 キー ID の末尾に &lt;code class=&quot;language-text&quot;&gt;!&lt;/code&gt; を
つけないと意図した通りに動きませんでした。&lt;/p&gt;
&lt;p&gt;これで、普段使いのマシンではローカルのサブキーを使って復号化し、それ以外のマシンでは(秘密鍵をインポートしなくても)
Yubikey を使って復号化できるようになりました。
Android では Yubico Authenticator も使ってみようと思いますが、
&lt;code class=&quot;language-text&quot;&gt;password-store&lt;/code&gt; で Yubikey を使えると嬉しいなという思いもあり……
PIV 対応アプリがあるのかは探してみますが、自分で作ることも考えています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[新しいGPGキーを作成しました]]></title><description><![CDATA[Yubikey もあることですし、そろそろ GPG や SSH の秘密鍵を統一しようと思います。
GPGで自分用の秘密鍵を…]]></description><link>https://ny-a.github.io/blog22020-02/create-new-gpg-key/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/create-new-gpg-key/</guid><pubDate>Tue, 04 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Yubikey もあることですし、そろそろ GPG や SSH の秘密鍵を統一しようと思います。
&lt;a href=&quot;http://joemphilips.com/post/gpg_memo/&quot;&gt;GPGで自分用の秘密鍵を1つに統一する&lt;/a&gt;
を参考に進めていきました。&lt;/p&gt;
&lt;p&gt;上記記事ではエアギャップコンピュータが推奨されていますが、今回はマスターキーのバックアップの
利便性のため、ネットワークに接続した状態で行いました。
&lt;a href=&quot;https://www.qubes-os.org/&quot;&gt;QUBES OS&lt;/a&gt; はよさそうですね。 Fedora ベースなのが
少し気になるといえばそうですが……(ArchLinux に慣れているため)。&lt;/p&gt;
&lt;p&gt;さて、普段使いの環境にはマスターキーの秘密鍵は置いておきたくないので、
マスターキーの生成は別の環境で行います。
バックアップの利便性なども考えて、 LUKS で暗号化したパーティションをファイルに保存します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;dd if=/dev/zero of=encrypted_partition.img bs=1M count=64
sudo cryptsetup luksFormat -i 5000 --use-random encrypted_partition.img
# type &amp;#39;YES&amp;#39; and set password
sudo cryptsetup luksOpen encrypted_partition.img gpg_container
sudo mkfs.ext4 /dev/mapper/gpg_container
sudo mount /dev/mapper/gpg_container /mnt
sudo mkdir /mnt/.gnupg
sudo chown [current_user] /mnt/.gnupg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GPG の操作は今作成した &lt;code class=&quot;language-text&quot;&gt;/mnt/.gnupg&lt;/code&gt; を GNUPGHOME に設定して行います。
必要なだけマスターキーとサブキーを作成していきます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;GNUPGHOME=/mnt/.gnupg gpg --full-gen-key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成が終わったら、サブキーだけをエクスポートします。キーの fingerprint は &lt;code class=&quot;language-text&quot;&gt;gpg -K&lt;/code&gt; で確認できます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;GNUPGHOME=/mnt/.gnupg gpg --output [exported-file] --export-secret-subkeys [fingerprint]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;エクスポートしたファイルを scp などで普段使う環境にコピーしたら、インポートして信頼します。
今自分で作成したキーなので、信頼度は 5 (I trust ultimately) でよいでしょう。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;gpg --import [exported-file]
gpg --edit-key [fingerprint]
    &amp;gt; trust
    &amp;gt; 5 # I trust ultimately
    &amp;gt; save&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは、 &lt;code class=&quot;language-text&quot;&gt;gpg -K --with-keygrip&lt;/code&gt; で ssh に使いたいキーの keygrip を確認して、 &lt;code class=&quot;language-text&quot;&gt;~/.gnupg/sshcontrol&lt;/code&gt; に追加します。
&lt;code class=&quot;language-text&quot;&gt;~/.ssh/config&lt;/code&gt; の &lt;code class=&quot;language-text&quot;&gt;IdentityFile&lt;/code&gt; でキーを指定する場合は、 &lt;code class=&quot;language-text&quot;&gt;gpg -K --with-subkey-fingerprint&lt;/code&gt; でサブキーの
fingerprint を確認して、 &lt;code class=&quot;language-text&quot;&gt;gpg --export-ssh-key [fingerprint] &amp;gt; ~/.ssh/id_something.pub&lt;/code&gt; を実行します。
&lt;code class=&quot;language-text&quot;&gt;IdentityFile&lt;/code&gt; には今作成した &lt;code class=&quot;language-text&quot;&gt;id_something.pub&lt;/code&gt; を指定してください。&lt;/p&gt;
&lt;p&gt;gpg-agent を ssh-agent として使う方法は
&lt;a href=&quot;/blog2/2020-01/introduction-of-gpg-ssh-agent/&quot;&gt;GnuPGのssh-agentエミュレータを使ってみました&lt;/a&gt;
に書いた通りです。&lt;/p&gt;
&lt;p&gt;addkey をする場合やサブキーの有効期限を変更する場合などはマスターキーが必要になりますが、
それまではマスターキーの秘密鍵がない状態でうまく機能するでしょう。
将来的にはオフラインのマシン上で行いたいですが、ひとまず普段から GPG を使う習慣をつけて
慣れておこうと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[RasPiでcryptsetup benchmarkを実行してみました]]></title><description><![CDATA[タイトルの通りですが……
RaspberryPi 3B+ で  を実行してみました。 メインのマシンより1-2桁くらい遅くてびっくりしました。
RasPi でフルディスク暗号化とか少し検討していたのですが、これでは実用性が怪しいですね……
メモリがもっと潤沢にあれば PXE…]]></description><link>https://ny-a.github.io/blog22020-02/cryptsetup-benchmark-on-raspi/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/cryptsetup-benchmark-on-raspi/</guid><pubDate>Mon, 03 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;タイトルの通りですが……
RaspberryPi 3B+ で &lt;code class=&quot;language-text&quot;&gt;cryptsetup benchmark&lt;/code&gt; を実行してみました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shellscript&quot;&gt;&lt;pre class=&quot;language-shellscript&quot;&gt;&lt;code class=&quot;language-shellscript&quot;&gt;$ cryptsetup benchmark
# Tests are approximate using memory only (no storage IO).
PBKDF2-sha1       206738 iterations per second for 256-bit key
PBKDF2-sha256     316599 iterations per second for 256-bit key
PBKDF2-sha512     200415 iterations per second for 256-bit key
PBKDF2-ripemd160  174529 iterations per second for 256-bit key
PBKDF2-whirlpool   29153 iterations per second for 256-bit key
argon2i       4 iterations, 172077 memory, 4 parallel threads (CPUs) for 256-bit key (requested 2000 ms time)
argon2id      4 iterations, 177813 memory, 4 parallel threads (CPUs) for 256-bit key (requested 2000 ms time)
#     Algorithm |       Key |      Encryption |      Decryption
        aes-cbc        128b        28.2 MiB/s        56.6 MiB/s
    serpent-cbc        128b               N/A               N/A
    twofish-cbc        128b               N/A               N/A
        aes-cbc        256b        22.6 MiB/s        42.7 MiB/s
    serpent-cbc        256b               N/A               N/A
    twofish-cbc        256b               N/A               N/A
        aes-xts        256b        63.9 MiB/s        55.9 MiB/s
    serpent-xts        256b               N/A               N/A
    twofish-xts        256b               N/A               N/A
        aes-xts        512b        48.2 MiB/s        42.3 MiB/s
    serpent-xts        512b               N/A               N/A
    twofish-xts        512b               N/A               N/A&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;メインのマシンより1-2桁くらい遅くてびっくりしました。
RasPi でフルディスク暗号化とか少し検討していたのですが、これでは実用性が怪しいですね……
メモリがもっと潤沢にあれば PXE ブートなんかでディスクレスにしてもよさそうなんですが、RasPi4 でも 4GB とかなので、
もう少し欲しいな……と思っています。まあ USB ストレージから起動できるし当面問題はなさそうですが。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Yubikeyのファームウェア5.2.3がリリースされていました]]></title><description><![CDATA[Yubikey を持っていますが、現在はあまり活用できていません。
その理由の1つに、普段使っている ed25519 なキーに Yubikey が対応していないことがあります。 今日ふとそのことについてもう一度調べていたら、
What’s New in YubiKey…]]></description><link>https://ny-a.github.io/blog22020-02/yubikey-firmware-5-2-3/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/yubikey-firmware-5-2-3/</guid><pubDate>Sun, 02 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Yubikey を持っていますが、現在はあまり活用できていません。
その理由の1つに、普段使っている ed25519 なキーに Yubikey が対応していないことがあります。&lt;/p&gt;
&lt;p&gt;今日ふとそのことについてもう一度調べていたら、
&lt;a href=&quot;https://www.yubico.com/blog/whats-new-in-yubikey-firmware-5-2-3/&quot;&gt;What’s New in YubiKey Firmware 5.2.3&lt;/a&gt;
というブログ記事を見つけました。
知らない間に ed25519 にも対応していたようです。
とはいえ、そのためだけに Yubikey を新調するのも気が進まないので、しばらくの間は
NIST P-384 や RSA-4096 を使おうと思います。&lt;/p&gt;
&lt;p&gt;エアギャップコンピュータを使って GPG の primary key の管理などをしようと思いつつなかなかできていないのですが、
キーのバックアップのことなどを考えて悩んでいます。紙に印刷する/光学メディアに書き込むなどの方法が一般的(？)な
ようですが、紙や光学メディアも耐久性に不安があります。
金属板にレーザーで QR コードを印刷できれば……とは思いますが、さすがにコストがかかりすぎるので……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[6gramを使ってみました]]></title><description><![CDATA[mixi の新しいアプリの 6gram というアプリを使ってみました。
サービス内容はおおまかには kyash と似ていると言えますが、
グループでお金を出し合うことができる、インスタントカードを30枚まで発行できる、
発行カードがJCB…]]></description><link>https://ny-a.github.io/blog22020-02/6gram-app/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-02/6gram-app/</guid><pubDate>Sat, 01 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;mixi の新しいアプリの &lt;a href=&quot;https://6gr.am/&quot;&gt;6gram&lt;/a&gt; というアプリを使ってみました。
サービス内容はおおまかには &lt;a href=&quot;https://kyash.co/&quot;&gt;kyash&lt;/a&gt; と似ていると言えますが、
グループでお金を出し合うことができる、インスタントカードを30枚まで発行できる、
発行カードがJCBプリペイドである、といった違いがあります。&lt;/p&gt;
&lt;p&gt;リアルカードは後日受付開始ということなので、現在はバーチャルカードでのオンライン決済と
QUICPay を使用した実店舗での決済が可能なようです。
QUICPay の決済速度は、一度試した感じだと kyash の高速化後のイメージが近いかなと思いました。&lt;/p&gt;
&lt;p&gt;アカウント登録時に発行されるバーチャルカードにはグループのカードを紐付けることができ、
紐付けると QUICPay で決済が可能になります。
任意に発行できるインスタントカードは紐付けることはできず、オンライン決済専用なようです。
考えてみれば QUICPay での支払い用にインスタントカードを発行する必要はありませんが……
食費など Wallet を分ける用途で使えると思っていたので少し期待外れではありました。&lt;/p&gt;
&lt;p&gt;また、インスタントカードやグループカードには100円単位でお金を出し入れすることが
できます。グループの説明に「自由に出し入れ」「割り勘不要」とあるように、
グループメンバー全員が自発的に入金して大まかに出し合うような仲のいいメンバーでの
使用がターゲットなように感じます。&lt;/p&gt;
&lt;p&gt;2月に入る前に iPhone 版もリリースされたので、気軽に勧められるようになりました。
公式の招待も割と早く届くようなので、気軽に招待リクエストを送ってみたらよさそうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GitHubActionsでGridsomeのブログのビルドを設定しました]]></title><description><![CDATA[昨日に続いて Gridsome のブログのビルドも自動化しました。 やっていることはほとんど Gatsby の場合と同じなので、設定ファイルを追加するだけです。 Jekyll のブログのビルドも一緒にやってしまおうと思っていたのですが、Jekyll…]]></description><link>https://ny-a.github.io/blog22020-01/config-gridsome-cd/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/config-gridsome-cd/</guid><pubDate>Fri, 31 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;昨日に続いて Gridsome のブログのビルドも自動化しました。&lt;/p&gt;
&lt;p&gt;やっていることはほとんど Gatsby の場合と同じなので、設定ファイルを追加するだけです。&lt;/p&gt;
&lt;p&gt;Jekyll のブログのビルドも一緒にやってしまおうと思っていたのですが、Jekyll のサブディレクトリの扱いが
Gatsby/Gridsome と違っていたので一旦後回しにしようと思います。
現状ほぼ画像等使っていないので、Jekyll の想定するディレクトリ構造にしてしまってもいいのですが、
現状の方が好ましいような気がするので、方法を考えてみようと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GitHubActionsを使ってデプロイを自動化しました]]></title><description><![CDATA[先日はブログのコンテンツと Gatsby のテンプレートを分離しましたが、
コンテンツを push すると CI/CD で自動でビルド・デプロイまでできるようにしました。 ビルド環境は Gatsby の方のレポジトリですが、 push…]]></description><link>https://ny-a.github.io/blog22020-01/config-continuous-delivery/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/config-continuous-delivery/</guid><pubDate>Thu, 30 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;先日はブログのコンテンツと Gatsby のテンプレートを分離しましたが、
コンテンツを push すると CI/CD で自動でビルド・デプロイまでできるようにしました。&lt;/p&gt;
&lt;p&gt;ビルド環境は Gatsby の方のレポジトリですが、 push でトリガーされるのはコンテンツのレポジトリなため、
&lt;a href=&quot;https://github.community/t5/GitHub-Actions/Triggering-by-other-repository/td-p/30668&quot;&gt;GitHub のフォーラム&lt;/a&gt;
を参考に、コンテンツのレポジトリに push されたときに Gatsby のレポジトリのビルドをトリガーするようにしました。&lt;/p&gt;
&lt;p&gt;この調子で Gridsome と Jekyll もビルド・デプロイを自動化して、デザインを統一しようと思います。
3つもデプロイする必要はないですが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Blogの内容を別レポジトリに移動しました]]></title><description><![CDATA[今までは gatsby のブログ用レポジトリにブログの内容を追加していましたが、
テンプレートと内容は分けた方がいいかなと思い、内容だけ別レポジトリに分けてみました。 具体的には、 gatsby-source-filesystem を使っていたのを gatsby-source…]]></description><link>https://ny-a.github.io/blog22020-01/move-blog-contents-to-another-repo/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/move-blog-contents-to-another-repo/</guid><pubDate>Wed, 29 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今までは gatsby のブログ用レポジトリにブログの内容を追加していましたが、
テンプレートと内容は分けた方がいいかなと思い、内容だけ別レポジトリに分けてみました。&lt;/p&gt;
&lt;p&gt;具体的には、 gatsby-source-filesystem を使っていたのを gatsby-source-git に変更しました。
基本的に gatsby-source-filesystem と同様に使えると書いてありましたが、
slug の生成に createFilePath を使っていたのが gatsby-source-filesystem に依存していたので、
node.parent.file.relativeDirectory から生成するように変更しました。&lt;/p&gt;
&lt;p&gt;また、 gatsby-source-git の指定だけだと、タイミングの問題なのか gatsby-transformer-remark あたりで
問題が発生していたので、 gatsby-source-filesystem でダミーのソースを指定することでとりあえず対処しました。&lt;/p&gt;
&lt;p&gt;レポジトリを分離したので CI を使ってビルドするようにしようかなと思ったのですが、そうすると
別に gatsby-source-git を使わなくても、 CI 側で事前に checkout しておけばいいのでは……と思ってきました。
また戻すかもしれません。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[grpc-nodeのビルドに失敗する]]></title><description><![CDATA[npm install grpc build from source fails
に書いてある通りなのですが……。 node v13 ではソースからのビルドになってインストールに失敗します。
node v10 を使えばバイナリパッケージがあるようです。 nvm…]]></description><link>https://ny-a.github.io/blog22020-01/can-not-build-grpc-node/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/can-not-build-grpc-node/</guid><pubDate>Tue, 28 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/grpc/grpc-node/issues/922&quot;&gt;npm install grpc build from source fails&lt;/a&gt;
に書いてある通りなのですが……。&lt;/p&gt;
&lt;p&gt;node v13 ではソースからのビルドになってインストールに失敗します。
node v10 を使えばバイナリパッケージがあるようです。&lt;/p&gt;
&lt;p&gt;nvm をインストールしてとりあえずの対処をしようと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[6gramとPCI-DSS]]></title><description><![CDATA[twitter で流れてきた
グループウォレットアプリ6gramの運用をはじめてみた / 6gram SRE NEXT 2020
を見ました。 PCI DSS の概要については
PCI DSS Quick Reference Guide…]]></description><link>https://ny-a.github.io/blog22020-01/6gram-pci-dss/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/6gram-pci-dss/</guid><pubDate>Mon, 27 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;twitter で流れてきた
&lt;a href=&quot;https://speakerdeck.com/ryosan470/6gram-sre-next-2020&quot;&gt;グループウォレットアプリ6gramの運用をはじめてみた / 6gram SRE NEXT 2020&lt;/a&gt;
を見ました。&lt;/p&gt;
&lt;p&gt;PCI DSS の概要については
&lt;a href=&quot;https://www.pcisecuritystandards.org/documents/PCI_DSS-QRG-v3_2_1.pdf&quot;&gt;PCI DSS Quick Reference Guide&lt;/a&gt;
これなんかに書いてある感じなんですかね？
PCI DSS については、クレジットカード情報の非保持化などは聞いたことがありますが、
具体的にまともに対応する場合の戦略などは聞いたことがなかったので、興味深いと感じました。&lt;/p&gt;
&lt;p&gt;また、
&lt;a href=&quot;https://speakerdeck.com/enerick/elixir-dejue-ji-sabisuwotukututemita&quot;&gt;Elixir で決済サービスをつくってみた&lt;/a&gt;
によると、Elixir を使っているようで、私は Elixir を使ったことがないので使ってみたいと思いました。&lt;/p&gt;
&lt;p&gt;Developers Summit でも 6gram のセッションがあるようなので、聞いてみたいと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[gridsomeを使ってみました]]></title><description><![CDATA[いつものように
9 Projects you can do to become a Frontend Master in 2020
を進めていっています。
今回は gridsome を使ったブログです。 だいたい gatsby…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-gridsome/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-gridsome/</guid><pubDate>Sun, 26 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;いつものように
&lt;a href=&quot;https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h&quot;&gt;9 Projects you can do to become a Frontend Master in 2020&lt;/a&gt;
を進めていっています。
今回は gridsome を使ったブログです。&lt;/p&gt;
&lt;p&gt;だいたい gatsby と同じような感じですが、クエリを &lt;code class=&quot;language-text&quot;&gt;&amp;lt;page-query&amp;gt;&lt;/code&gt; 内に書くなど、 Vue らしさというか XML 側に寄せているような
雰囲気があるのが大きな違いでしょうか。&lt;/p&gt;
&lt;p&gt;HTML や vanilla な javascript はもはやバイナリのような扱いを受けることもあるので、
React/Gatsby など、 typescript などにロジックを寄せて、html なども生成するような形にするのが筋が通っているように感じられます。&lt;/p&gt;
&lt;p&gt;……というのは多分 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;page-query&amp;gt;&lt;/code&gt; 内のインデントがボロボロになってしまったのが気になったのもあると思います。
Intellij 用の gridsome プラグインを書きましょう……となりました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ページネーションの方向を変えました]]></title><description><![CDATA[個別のポストのページと、一覧ページのページネーションの向きが逆だったので、
個別のポストのページの方向に揃えました。 それと、 next や previous では方向が分かりにくいと感じることが多いため、 newer と older に変更しました。]]></description><link>https://ny-a.github.io/blog22020-01/change-pagination-direction/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/change-pagination-direction/</guid><pubDate>Sat, 25 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;個別のポストのページと、一覧ページのページネーションの向きが逆だったので、
個別のポストのページの方向に揃えました。&lt;/p&gt;
&lt;p&gt;それと、 next や previous では方向が分かりにくいと感じることが多いため、 newer と older に変更しました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Cockpitプロジェクトについて調べました]]></title><description><![CDATA[Cockpit は、Linux マシンの管理用の Web アプリです。 debian/RHEL 系では標準のレポジトリに入っていて、インストールすればあとは接続するだけで使えるようになります。 ある程度のことは GUI で設定可能ですし、 shell…]]></description><link>https://ny-a.github.io/blog22020-01/cockpit-project/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/cockpit-project/</guid><pubDate>Fri, 24 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://github.com/cockpit-project/cockpit&quot;&gt;Cockpit&lt;/a&gt; は、Linux マシンの管理用の Web アプリです。&lt;/p&gt;
&lt;p&gt;debian/RHEL 系では標準のレポジトリに入っていて、インストールすればあとは接続するだけで使えるようになります。&lt;/p&gt;
&lt;p&gt;ある程度のことは GUI で設定可能ですし、 shell も用意されているので、ほとんどの操作が可能です。
shell はショートカット等にも対応していて、操作性もいい方だと思いました。&lt;/p&gt;
&lt;p&gt;API のドキュメントなどもあるようなので、機能のカスタマイズもできそうです。
ブラウザからサーバーを管理する必要があれば使ってみようと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ヒューリスティック質問]]></title><description><![CDATA[なぜ「事実」と「意見」を区別して話せない人がいるのか。 - Books&Apps
を読んで、ターゲット質問とヒューリスティック質問というものを知りました。 Daniel Kahneman, Thinking, Fast and Slow…]]></description><link>https://ny-a.github.io/blog22020-01/heuristic-question/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/heuristic-question/</guid><pubDate>Thu, 23 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://blog.tinect.jp/?p=62453&quot;&gt;なぜ「事実」と「意見」を区別して話せない人がいるのか。 - Books&amp;#x26;Apps&lt;/a&gt;
を読んで、ターゲット質問とヒューリスティック質問というものを知りました。&lt;/p&gt;
&lt;p&gt;Daniel Kahneman, Thinking, Fast and Slow に書いてあるようで、原文の引用は以下にあります。
&lt;a href=&quot;https://jamesmacmillan.wordpress.com/2015/01/29/target-question-vs-heuristic-question/&quot;&gt;Target question vs. Heuristic question - Bologna&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;確かに脳がこういう動きをしている気はします。脳の動きについては自分自身のことでも完全には理解できていないので、
当てはまりそうなものを見つけて分析していきたいと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[W3Techsを見つけました]]></title><description><![CDATA[PHPはもうダメだ、PHP万歳！ - POSTD
を読んでいるときに、
W3Techs
の調査を見つけました。
最近 POSTD をあまり見ていなかったのですが、 2019/04 から更新がないようですね……。 W3Techs の調査を見てみると、PHP や jQuery…]]></description><link>https://ny-a.github.io/blog22020-01/found-w3techs/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/found-w3techs/</guid><pubDate>Wed, 22 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://postd.cc/php-is-dead-viva-le-php/&quot;&gt;PHPはもうダメだ、PHP万歳！ - POSTD&lt;/a&gt;
を読んでいるときに、
&lt;a href=&quot;https://w3techs.com/&quot;&gt;W3Techs&lt;/a&gt;
の調査を見つけました。
最近 POSTD をあまり見ていなかったのですが、 2019/04 から更新がないようですね……。&lt;/p&gt;
&lt;p&gt;W3Techs の調査を見てみると、PHP や jQuery の使用率が 70% を超えていて、
身の周りで感じる感覚とは全く違う値が示されています。
もしかしたら、 uglify や minify の影響を受けているのかもしれません。
ただ、既存プロジェクトで PHP などを使っている場面は普通に見かけるので、
身の周りで新規に作っているもの以外で考えると一般的なのかもしれません。&lt;/p&gt;
&lt;p&gt;最近は &lt;code class=&quot;language-text&quot;&gt;ecmascript&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;typescript&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;webpack&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;babel&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;core-js&lt;/code&gt; などがあるので、
jquery を少しずつ新しい技術に移行していくことも可能だと思っています。
時間を作って試してみたいと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;You might not need jQuery&lt;/a&gt;
も移行に役立ちそうです。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JSXを単体で使ってみました]]></title><description><![CDATA[JSX といえば React というイメージですが、別に一緒に使わないといけないわけではないと思うので、
,  あたりを使って試してみました。  相当のライブラリは一旦  を使ってみました。
Lessons learned using JSX without React…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-jsx/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-jsx/</guid><pubDate>Tue, 21 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;JSX といえば React というイメージですが、別に一緒に使わないといけないわけではないと思うので、
&lt;code class=&quot;language-text&quot;&gt;webpack&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;babel&lt;/code&gt; あたりを使って試してみました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;React.createElement&lt;/code&gt; 相当のライブラリは一旦 &lt;code class=&quot;language-text&quot;&gt;jsx-render&lt;/code&gt; を使ってみました。
&lt;a href=&quot;https://itnext.io/lessons-learned-using-jsx-without-react-bbddb6c28561&quot;&gt;Lessons learned using JSX without React&lt;/a&gt;
を参考にしましたが、レポジトリが消えているようなので代替を探す必要があるかもしれません。&lt;/p&gt;
&lt;p&gt;また、 &lt;code class=&quot;language-text&quot;&gt;eslint&lt;/code&gt; や &lt;code class=&quot;language-text&quot;&gt;prettier&lt;/code&gt; もよく使うのでインストールしました。
eslint で JSX はサポートされているようですが、 unused-var になるなど問題点もあるようです。&lt;/p&gt;
&lt;p&gt;Aurelia などもありますが、できるだけフロントエンドフレームワークを使わないで Web 標準を使って
Web アプリを作る方法を模索してみるのもよいかもしれません。(JSX, Web components など。)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Reactを使ってみました]]></title><description><![CDATA[9 Projects you can do to become a Frontend Master in 2020
を進めています。 Tutorial は
How to build a movie search app using React Hooks…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-react/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-react/</guid><pubDate>Mon, 20 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h&quot;&gt;9 Projects you can do to become a Frontend Master in 2020&lt;/a&gt;
を進めています。&lt;/p&gt;
&lt;p&gt;Tutorial は
&lt;a href=&quot;https://www.freecodecamp.org/news/how-to-build-a-movie-search-app-using-react-hooks-24eb72ddfaf7/&quot;&gt;How to build a movie search app using React Hooks&lt;/a&gt;
です。&lt;/p&gt;
&lt;p&gt;今回も &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; を使わずに from scratch で作成します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;yarn add -D @babel/core @babel/cli @babel/preset-env @babel/presetpack-dev-server style-loader css-loader babel-loader 
yarn add react react-dom                                      
yarn add -D @types/react @types/react-dom ts-loader typescript
yarn add react-hot-loader&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;styled-components なんかも使っていきたいと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Svelteをwebpackで使ってみました]]></title><description><![CDATA[Building A Svelte 3 Todo App From Start To Deployment
に従いつつ、 rollup の代わりに webpack を使って from stratch で作成してみました。 手順 まずは Svelte…]]></description><link>https://ny-a.github.io/blog22020-01/svelte-webpack/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/svelte-webpack/</guid><pubDate>Sun, 19 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://medium.com/codingthesmartway-com-blog/building-a-svelte-3-todo-app-from-start-to-deployment-1737f72c23a6&quot;&gt;Building A Svelte 3 Todo App From Start To Deployment&lt;/a&gt;
に従いつつ、 rollup の代わりに webpack を使って from stratch で作成してみました。&lt;/p&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;p&gt;まずは Svelte アプリの作成をします。 webpack を使った template は
&lt;a href=&quot;https://github.com/sveltejs/template-webpack&quot;&gt;sveltejs/template-webpack&lt;/a&gt;
にありますが、これを参考に以下のコマンドを実行します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir svelte-todo-webpack
cd svelte-todo-webpack
yarn init
git init
yarn add -D webpack{,-cli,-dev-server} svelte{,-loader} {css,style}-loader mini-css-extract-plugin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;今回は &lt;code class=&quot;language-text&quot;&gt;cross-env&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;serve&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;sirv-cli&lt;/code&gt; などを使わないようにするため、いくつか変更している箇所があります。
とは言っても、 &lt;code class=&quot;language-text&quot;&gt;serve&lt;/code&gt; はどこで使っているか分からなかったので、単に webpack の設定を function にして、
&lt;code class=&quot;language-text&quot;&gt;--env.NODE_ENV=development&lt;/code&gt; という風に渡すように変更しただけですが。……多分。&lt;/p&gt;
&lt;p&gt;あとはシュッと ToDo アプリの実装をします。簡単でしたね。&lt;/p&gt;
&lt;h2&gt;HMR でのエラー&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;TypeError: &amp;quot;todoitem.$on is not a function&amp;quot;&lt;/code&gt;
というようなエラーがブラウザのコンソールに出ていました。
どうやら HMR に対応していないようなので、 HMR を無効にすることで対応しました。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;他のフレームワークで webpack+babel+typescript といった構成にすることが多いので、 rollup のときよりも理解がしやすい
構成になっているかなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[esModuleInteropを使わないようにしました]]></title><description><![CDATA[このブログに Typescript を導入したとき、 default import でエラーが出ていたので一旦
 に  を追加して対処していました。 ただ、デフォルトの設定を変更するのはあまり好ましくないと感じたので、
microsoft/TypeScript#333…]]></description><link>https://ny-a.github.io/blog22020-01/get-rid-of-es-module-interop/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/get-rid-of-es-module-interop/</guid><pubDate>Sat, 18 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;このブログに Typescript を導入したとき、 default import でエラーが出ていたので一旦
&lt;code class=&quot;language-text&quot;&gt;tsconfig.json&lt;/code&gt; に &lt;code class=&quot;language-text&quot;&gt;esModuleInterop&lt;/code&gt; を追加して対処していました。&lt;/p&gt;
&lt;p&gt;ただ、デフォルトの設定を変更するのはあまり好ましくないと感じたので、
&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/3337&quot;&gt;microsoft/TypeScript#3337&lt;/a&gt;
を参考に、 &lt;code class=&quot;language-text&quot;&gt;import React from &amp;#39;react&lt;/code&gt; を &lt;code class=&quot;language-text&quot;&gt;import * as React from &amp;#39;react&lt;/code&gt; に
書き換えることで対処しました。&lt;/p&gt;
&lt;p&gt;これが esModuleInterop に対する正しい対処方法かは分かりませんが……。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsbyのブログにページネーションを追加しました]]></title><description><![CDATA[この Gatsby を使っているブログも10ポストを超えてきました。
そこで、普通のブログのようにページネーションを導入しました。 NickyMeuleman/gatsby-paginated-blog
を参考に、といっても  と  を編集するだけですが……。
commit e…]]></description><link>https://ny-a.github.io/blog22020-01/add-pagination-to-gatsby-blog/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/add-pagination-to-gatsby-blog/</guid><pubDate>Fri, 17 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;この Gatsby を使っているブログも10ポストを超えてきました。
そこで、普通のブログのようにページネーションを導入しました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/NickyMeuleman/gatsby-paginated-blog&quot;&gt;NickyMeuleman/gatsby-paginated-blog&lt;/a&gt;
を参考に、といっても &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; と &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt; を編集するだけですが……。
&lt;a href=&quot;https://github.com/ny-a/blog2/commit/e871f7ec3e153bb8feec22719ca94e8bce3347e2&quot;&gt;commit e871f7e&lt;/a&gt;
で変更した通りです。 &lt;/p&gt;
&lt;p&gt;実装を見てみると簡易的なもののようなので、10ページ程度になる前にもうちょっとちゃんとした
実装に変更しないといけないかなと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[unpkgとtagged template literal]]></title><description><![CDATA[UNPKG と tagged template literal を知りました。 IE 非対応……babel 使いましょうという感じですね。]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-unpkg-and-template-literal/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-unpkg-and-template-literal/</guid><pubDate>Thu, 16 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://unpkg.com/&quot;&gt;UNPKG&lt;/a&gt; と &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;tagged template literal&lt;/a&gt; を知りました。&lt;/p&gt;
&lt;p&gt;IE 非対応……babel 使いましょうという感じですね。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GatsbyでTypescriptを使い始めました]]></title><description><![CDATA[gatsbyを使い始めました で typescript について言及していたので、
typescript を導入してみました。 gatsby-plugin-typescript をインストールして、
props とかの型を適当につけて、tsx…]]></description><link>https://ny-a.github.io/blog22020-01/migrate-gatsby-blog-to-typescript/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/migrate-gatsby-blog-to-typescript/</guid><pubDate>Wed, 15 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-01/introduction-of-gatsby/&quot;&gt;gatsbyを使い始めました&lt;/a&gt; で typescript について言及していたので、
typescript を導入してみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-plugin-typescript/&quot;&gt;gatsby-plugin-typescript&lt;/a&gt; をインストールして、
props とかの型を適当につけて、tsx に変えればほぼ終了です。&lt;/p&gt;
&lt;p&gt;Gatsby の設定ファイルも typescript にしようと思って
&lt;a href=&quot;https://gist.github.com/clarkdave/53cc050fa58d9a70418f8a76982dd6c8&quot;&gt;clarkdave さんの Gist&lt;/a&gt;
を参考にやってみたのですが、 slug の生成周りがうまくいかなかったので、一旦そのままにしています。
Gatsby の actions なんかを調べながら再挑戦しようと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[CORSのテストができるサイトを見つけました]]></title><description><![CDATA[CORSのテストができるサイトを見つけました。 monsur/test-cors.org CORSのテストができます。 いやまあ、適当に Axios なんかでリクエスト飛ばせばいい話なんですが……]]></description><link>https://ny-a.github.io/blog22020-01/found-test-cors/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/found-test-cors/</guid><pubDate>Tue, 14 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;CORSのテストができるサイトを見つけました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/monsur/test-cors.org&quot;&gt;monsur/test-cors.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CORSのテストができます。&lt;/p&gt;
&lt;p&gt;いやまあ、適当に Axios なんかでリクエスト飛ばせばいい話なんですが……&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsbyのスタイルを変更しました]]></title><description><![CDATA[このブログを作成するときに  を使ったのですが、スタイルを変えていなかったので、
 から  をコピーしてみました。 そろそろ Gatsby についてもう少し学んでもいいかなと思いました。]]></description><link>https://ny-a.github.io/blog22020-01/append-default-style/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/append-default-style/</guid><pubDate>Mon, 13 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;このブログを作成するときに &lt;code class=&quot;language-text&quot;&gt;gatsby-starter-blog&lt;/code&gt; を使ったのですが、スタイルを変えていなかったので、
&lt;code class=&quot;language-text&quot;&gt;gatsby-starter-default&lt;/code&gt; から &lt;code class=&quot;language-text&quot;&gt;style.css&lt;/code&gt; をコピーしてみました。&lt;/p&gt;
&lt;p&gt;そろそろ Gatsby についてもう少し学んでもいいかなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[なぜIDEの支援機能を使うのか]]></title><description><![CDATA[少し前まで IDE の補完機能など、コーディングの支援機能を使いながらコーディングすることが、
なんだか IDE にコーディングさせられているようで嫌でした。 これは恐らく私だけが感じていることではなくて、初心者の方のツイートで
IDE…]]></description><link>https://ny-a.github.io/blog22020-01/why-programmers-use-ide/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/why-programmers-use-ide/</guid><pubDate>Sun, 12 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;少し前まで IDE の補完機能など、コーディングの支援機能を使いながらコーディングすることが、
なんだか IDE にコーディングさせられているようで嫌でした。&lt;/p&gt;
&lt;p&gt;これは恐らく私だけが感じていることではなくて、初心者の方のツイートで
IDE なしでコーディングする/コーディングできるようになりたい、といった
発言を見かけることがあります。&lt;/p&gt;
&lt;p&gt;ただ、これは開発の規模がまだ小さいときに強く感じるものだと思います。
コードベースの規模が大きくなってくると、細かい所まで全て覚えていられないですし、
コーディング量が増えるにつれてミスをする確立も上がっていきます。
そんなときに IDE を使っていると、例え補完機能を(候補が出ても無視して)
ほとんど使っていなかったとしても、ミスがあればすぐに知らせてくれますし、
仮にスペルに自信がないなどの場合にも補完機能を使ってスムーズにコーディングを進めることができます。
(もし補完機能を使っていなければ定義されている箇所を確認することになりますし、
早くミスを見つけるためには頻繁にコンパイル等をする必要があります。)&lt;/p&gt;
&lt;p&gt;コンピュータはコアとなるロジックを実装されるまで知りません。
プログラマーはそのコアロジックの実装に集中することで生産性を高めようとしています。
そのため、既に実装されている部分やライブラリについてはコンピュータの助けを借りて、
新しい部分の実装に集中することができるのです。&lt;/p&gt;
&lt;p&gt;もちろん、主体的にプログラミングする必要があります。
いくら候補が表示されているからといって、何も考えずにそれを選んでいると間違うこともあります。
自分で何を実装すべきかをきちんと認識した上で、実際のコード上の表現について
助けを借りる、といった考え方が合っているのかなと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AndroidアプリでHelloWorldをしました]]></title><description><![CDATA[今まで Android アプリ開発には Android Studio を使っていて、
IntelliJ IDEA と両方使っていたのですが、 Android アプリも
Intellij IDEA で開発してみました。 背景 今までも何度か IntelliJ で Android…]]></description><link>https://ny-a.github.io/blog22020-01/helloworld-android-with-intellij/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/helloworld-android-with-intellij/</guid><pubDate>Sat, 11 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今まで Android アプリ開発には Android Studio を使っていて、
IntelliJ IDEA と両方使っていたのですが、 Android アプリも
Intellij IDEA で開発してみました。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;今までも何度か IntelliJ で Android アプリの開発を試みていたのですが、
謎のエラーに悩まされていて、特に Visual Layout Editor が機能しなくて困っていました。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Sync Project with Gradle Files&lt;/code&gt; を選ぶと以下のエラーが出ていました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;New Gradle Sync is not supported due to containing Kotlin modules&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;原因&lt;/h2&gt;
&lt;p&gt;上記のエラーメッセージで検索すると、皆さんいろいろな方法で解決されているようですが、
私はどの方法でも解決しませんでした。&lt;/p&gt;
&lt;p&gt;結論としては、システムの JRE のバージョンが 13 だったことが原因だったようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Java#Launching_an_application_with_the_non-default_java_version&quot;&gt;Java - Arch Wiki&lt;/a&gt;
を参考に、 IntelliJ を Java8(1.8) を使って起動するようにしたら解決しました。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;IntelliJ の設定は複雑すぎる気がします……
とはいえ、新しい IDE を使う度に同じことを思っている気もします。&lt;/p&gt;
&lt;p&gt;シンプルにすればいいというわけではないですが、エラーメッセージはもう少し詳細に書いてほしいのと、
プロジェクト作成などある程度のことは CLI でもできるようにするなど、
問題の切り分けがやりやすくなればいいなと思いました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GnuPGのssh-agentエミュレータを使ってみました]]></title><description><![CDATA[今まではあまり気にしていなかったのですが、gh-pages のデプロイ時に2回パスフレーズを聞かれるのが
さすがに気になってしまい、 ssh-agent…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-gpg-ssh-agent/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-gpg-ssh-agent/</guid><pubDate>Fri, 10 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今まではあまり気にしていなかったのですが、gh-pages のデプロイ時に2回パスフレーズを聞かれるのが
さすがに気になってしまい、 ssh-agent を使うことにしました。&lt;/p&gt;
&lt;p&gt;前に何度か使っていたような記憶があるのですが、システム自体をあまり理解していなかったのもあり、
今の環境をセットアップするときには有効にしていませんでした。&lt;/p&gt;
&lt;h2&gt;設定&lt;/h2&gt;
&lt;p&gt;基本的には&lt;a href=&quot;https://wiki.archlinux.org/index.php/GnuPG#SSH_agent&quot;&gt;GnuPG - ArchWiki&lt;/a&gt; に従うだけです。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;~/.pam_environment&lt;/code&gt; で &lt;code class=&quot;language-text&quot;&gt;SSH_AUTH_SOCK&lt;/code&gt; の設定をして、Xorg で使う場合は TTY の設定をします。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;ssh-agent と変わらずパスフレーズのキャッシュなどは普通に便利なのですが、
gpg-agent は内部で ssh-key を gpg-key としてインポートしていそうな感じですね。(追って調査します)&lt;/p&gt;
&lt;p&gt;gpg-key で ssh することも可能なので、行く行くは gpg-key にまとめてしまおうかなと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[dockerのインストールでハマりました]]></title><description><![CDATA[Docker…]]></description><link>https://ny-a.github.io/blog22020-01/problem-on-installing-docker/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/problem-on-installing-docker/</guid><pubDate>Thu, 09 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Docker のインストールは何度もやったことがあるのですが、稼働中のサーバー上でインストールした経験はなかったので、
(特殊な状況というか、あまり好ましくない状況ですが)ネットワーク周りで少しハマりました。&lt;/p&gt;
&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;稼働中のサービスがあるホストで、再起動は避けたい状況でした。&lt;/p&gt;
&lt;p&gt;そのサービスのアップデートをデプロイする前に、docker コンテナ化したアップデート済みサービスを
デプロイして検証しようとしていました。&lt;/p&gt;
&lt;p&gt;いやまあ検証環境分けろはそうなんですが……。&lt;/p&gt;
&lt;h2&gt;発生した問題&lt;/h2&gt;
&lt;p&gt;centos7 に docker をインストールし、docker-compose でコンテナを起動した所、
他のコンテナとはネットワークアクセス可能なのに、外部へのアクセスができない状況でした。&lt;/p&gt;
&lt;p&gt;(直接？の原因としては、 iptables の FORWARD チェーンが DROP になっていました。)&lt;/p&gt;
&lt;p&gt;iptables に docker 用のルールが自動で追加されるようなのですが(手元のマシンには追加されていました)、そのホストには
追加されていませんでした。&lt;/p&gt;
&lt;h2&gt;解決方法&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;systemctl restart docker&lt;/code&gt; を実行しました。終わり。&lt;/p&gt;
&lt;h2&gt;まとめ？&lt;/h2&gt;
&lt;p&gt;普通にホスト再起動してあげましょう。
というかメンテナンスしよ？&lt;/p&gt;</content:encoded></item><item><title><![CDATA[すごいHaskell楽しく学ぼうを読み始めました]]></title><description><![CDATA[関数型言語は Elm などいくつか触ったことがありますが、 Haskell はきちんと触っていなかったので
すごいH…]]></description><link>https://ny-a.github.io/blog22020-01/reading-learn-you-a-haskell-for-great-good/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/reading-learn-you-a-haskell-for-great-good/</guid><pubDate>Wed, 08 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;関数型言語は Elm などいくつか触ったことがありますが、 Haskell はきちんと触っていなかったので
すごいH本を読んでみました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://learnyouahaskell.com/chapters&quot;&gt;英語版&lt;/a&gt;も公開されていますね。&lt;/p&gt;
&lt;h2&gt;型クラス&lt;/h2&gt;
&lt;p&gt;型クラスという名前は知っていましたが、具体的にどのようなものかは分かっていませんでした。&lt;/p&gt;
&lt;p&gt;サブクラスなども一貫性のある記述方法で、分かりやすいと感じました。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;8章あたりまで斜め読みをしただけなのですが、もう Haskell は楽しいと感じています。&lt;/p&gt;
&lt;p&gt;あとはモナドトランスフォーマーなどの理解を……(？)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Svelteを使ってみました]]></title><description><![CDATA[9 Projects you can do to become a Frontend Master in 2020
をこなしていきます。今回は Svelte で ToDo アプリを作るやつを少しだけ進めてみました。 導入 The easiest way to get…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-svelte/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-svelte/</guid><pubDate>Tue, 07 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h&quot;&gt;9 Projects you can do to become a Frontend Master in 2020&lt;/a&gt;
をこなしていきます。今回は Svelte で ToDo アプリを作るやつを少しだけ進めてみました。&lt;/p&gt;
&lt;h2&gt;導入&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://svelte.dev/blog/the-easiest-way-to-get-started&quot;&gt;The easiest way to get started with Svelte&lt;/a&gt;
に書いてある通りですが、 &lt;code class=&quot;language-text&quot;&gt;degit&lt;/code&gt; を &lt;code class=&quot;language-text&quot;&gt;yarn&lt;/code&gt; で使うには少し注意が必要です。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npx degit&lt;/code&gt; の場合、2番目の引数はカレントディレクトリのフォルダ名になりますが、
(&lt;code class=&quot;language-text&quot;&gt;~/node_modules/.bin/degit&lt;/code&gt; を使う場合の) &lt;code class=&quot;language-text&quot;&gt;yarn degit&lt;/code&gt; の場合は、ホームディレクトリからのフォルダ名になるような気がします。&lt;/p&gt;
&lt;p&gt;そのため、代わりに以下のコマンドを実行するのでもよさそうです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git clone https://github.com/sveltejs/template my-svelte-project
cd my-svelte-project
rm -r .git
yarn
yarn dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;今回はデフォルトの &lt;code class=&quot;language-text&quot;&gt;rollup&lt;/code&gt; をそのまま使ってみましたが、 &lt;code class=&quot;language-text&quot;&gt;webpack&lt;/code&gt; も使えるようです。
また &lt;code class=&quot;language-text&quot;&gt;webpack&lt;/code&gt; でも試してみようかなと思います。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchLinuxが壊れたときにまず試すことメモ]]></title><description><![CDATA[私は体に染みついていますが、他の人はそうではないと思うのでメモしておきます。 手順 USB key から起動して、いつも通りマウントして chroot して  する 自動化 まれによくあるので、installation 環境とデュアルブートにしておいて、fstab…]]></description><link>https://ny-a.github.io/blog22020-01/how-to-fix-broken-arch-linux/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/how-to-fix-broken-arch-linux/</guid><pubDate>Mon, 06 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;私は体に染みついていますが、他の人はそうではないと思うのでメモしておきます。&lt;/p&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;p&gt;USB key から起動して、いつも通りマウントして chroot して &lt;code class=&quot;language-text&quot;&gt;pacman -S linux&lt;/code&gt; する&lt;/p&gt;
&lt;h2&gt;自動化&lt;/h2&gt;
&lt;p&gt;まれによくあるので、installation 環境とデュアルブートにしておいて、fstabから自動マウントして、
いつも通りカーネルを再インストールするようにすると楽かもしれません。&lt;/p&gt;
&lt;p&gt;最近はほとんど壊れないのでモチベーションは低いですが……今後の課題とします。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[gatsbyを使い始めました]]></title><description><![CDATA[Jekyll を使い始めたところですが、早速浮気して Gatsby を使っていこうと思います。 9 Projects you can do to become a Frontend Master in 2020
に丁度 gatsby で blog…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-gatsby/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-gatsby/</guid><pubDate>Sun, 05 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Jekyll を使い始めたところですが、早速浮気して Gatsby を使っていこうと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h&quot;&gt;9 Projects you can do to become a Frontend Master in 2020&lt;/a&gt;
に丁度 gatsby で blog を作るという項目があったので、これを順不同でこなしていこうと思います。&lt;/p&gt;
&lt;h2&gt;導入&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby new&lt;/code&gt; を実行します。&lt;/p&gt;
&lt;h2&gt;gh-pages&lt;/h2&gt;
&lt;p&gt;公式ドキュメントの &lt;a href=&quot;https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/&quot;&gt;How Gatsby Works with GitHub Pages&lt;/a&gt;
を参考に、 &lt;code class=&quot;language-text&quot;&gt;yarn add -D gh-pages&lt;/code&gt; を実行して、 deploy スクリプトを追加します。&lt;/p&gt;
&lt;p&gt;また、 &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; に &lt;code class=&quot;language-text&quot;&gt;pathPrefix&lt;/code&gt; を追加して、実際のレポジトリに合わせて設定します。&lt;/p&gt;
&lt;h2&gt;GitHub Pagesにデプロイ&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;yarn deploy&lt;/code&gt; を実行します。&lt;/p&gt;
&lt;p&gt;標準では自動で &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt; ブランチに push されるようです。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;内部で GraphQL を使っていてなるほど〜となりました。
今までこういった Static Site Generator を使ったことはなかったのですが、理想に近いものだと感じました。&lt;/p&gt;
&lt;p&gt;でも github-pages 公式サポートのある Jekyll の方が楽なんですよね……少し悩んでいます。&lt;/p&gt;
&lt;p&gt;後日 gatsby with TypeScript に挑戦したいと思っています。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[octokit 4.15.0がリリースされました]]></title><description><![CDATA[octokitをアップデートしました では octokit のリリースがまだだったので github から
直接インストールするようにしてアップデートしましたが、 4.15.0 がリリースされたのでそちらにアップデートします。 github…]]></description><link>https://ny-a.github.io/blog22020-01/released-octokit/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/released-octokit/</guid><pubDate>Sat, 04 Jan 2020 01:18:27 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-01/update-octokit/&quot;&gt;octokitをアップデートしました&lt;/a&gt; では octokit のリリースがまだだったので github から
直接インストールするようにしてアップデートしましたが、 4.15.0 がリリースされたのでそちらにアップデートします。&lt;/p&gt;
&lt;h2&gt;github 指定を削除&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gem &amp;quot;octokit&amp;quot;, github: &amp;quot;octokit/octokit.rb&amp;quot;, ref: &amp;quot;ae5838a&amp;quot;&lt;/code&gt; を削除して、 &lt;code class=&quot;language-text&quot;&gt;bundle update&lt;/code&gt; を実行します。&lt;/p&gt;
&lt;p&gt;これで faraday 1.0 系でもエラーにならずに正しく実行できるようになりました。&lt;/p&gt;
&lt;p&gt;リリースありがとうございます！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Jekyllのタイムゾーン設定を変更しました]]></title><description><![CDATA[octokitをアップデートしました を投稿したのが01時
だったのですが、前日の投稿として表示されてしまいました。 原因・JST設定 GitHub の CI でのデフォルトのタイムゾーンが JST ではないからですね。 Jekyll の Configuration…]]></description><link>https://ny-a.github.io/blog22020-01/change-jekyll-timezone/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/change-jekyll-timezone/</guid><pubDate>Sat, 04 Jan 2020 01:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-01/update-octokit/&quot;&gt;octokitをアップデートしました&lt;/a&gt; を投稿したのが01時
だったのですが、前日の投稿として表示されてしまいました。&lt;/p&gt;
&lt;h2&gt;原因・JST設定&lt;/h2&gt;
&lt;p&gt;GitHub の CI でのデフォルトのタイムゾーンが JST ではないからですね。&lt;/p&gt;
&lt;p&gt;Jekyll の &lt;a href=&quot;https://jekyllrb.com/docs/configuration/options/&quot;&gt;Configuration Options&lt;/a&gt; を確認すると、
Timezone を設定できるようです。 &lt;code class=&quot;language-text&quot;&gt;Asia/Tokyo&lt;/code&gt; に設定しました。&lt;/p&gt;
&lt;h2&gt;UTC に揃える&lt;/h2&gt;
&lt;p&gt;全部 UTC に揃えたら楽だとは思いますが、朝09時に日付が変わるのはまだ慣れないので……
と思ったのですが、 gatsby の方で面倒だったのでやっぱり UTC に揃えることにしました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[octokitをアップデートしました]]></title><description><![CDATA[Jekyllを使い始めました でセットアップ時に
エラーが出ていたので調査しました。 原因  gem の 1.0 がリリースされたことが原因ですが、リリースされたのが丁度01/01でした。
情報が少なかったわけです。 依存ツリーとしては github-pages github…]]></description><link>https://ny-a.github.io/blog22020-01/update-octokit/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/update-octokit/</guid><pubDate>Fri, 03 Jan 2020 01:06:28 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/blog2/2020-01/introduction-of-jekyll/&quot;&gt;Jekyllを使い始めました&lt;/a&gt; でセットアップ時に
エラーが出ていたので調査しました。&lt;/p&gt;
&lt;h2&gt;原因&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;faraday&lt;/code&gt; gem の 1.0 がリリースされたことが原因ですが、リリースされたのが丁度01/01でした。
情報が少なかったわけです。&lt;/p&gt;
&lt;p&gt;依存ツリーとしては&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github-pages&lt;/li&gt;
&lt;li&gt;github-pages-health-check, jekyll-gist, jekyll-github-metadata&lt;/li&gt;
&lt;li&gt;octokit&lt;/li&gt;
&lt;li&gt;(sawyer)&lt;/li&gt;
&lt;li&gt;faraday&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;となっているようです。
また、 &lt;code class=&quot;language-text&quot;&gt;~&amp;gt; 0&lt;/code&gt; のような、1系が入らないバージョン指定もないようです。&lt;/p&gt;
&lt;h2&gt;各gemのissueの確認&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/pages-gem/issues/665&quot;&gt;issue github/pages-gem#665&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/octokit/octokit.rb/pull/1154&quot;&gt;PR octokit/octokit.rb#1154&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうやら原因は octokit にあるようです。
修正の PR 自体は master ブランチにマージされていて、リリースを待つだけのようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/octokit/octokit.rb/issues/1177&quot;&gt;issue octokit/octokit.rb#1177&lt;/a&gt; によると、来週にはリリースする予定ということです。&lt;/p&gt;
&lt;h2&gt;workaround&lt;/h2&gt;
&lt;p&gt;01/01 に書いたように faraday の 0.17 を指定することでもエラーは出なくなりますが、
octokit を github から取得するようにしても対応できます。&lt;/p&gt;
&lt;p&gt;具体的には、&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gem &amp;quot;octokit&amp;quot;, github: &amp;quot;octokit/octokit.rb&amp;quot;, ref: &amp;quot;ae5838a&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;を Gemfile に追加することで、 faraday の 1系を使えるようになります。&lt;/p&gt;
&lt;p&gt;(&lt;code class=&quot;language-text&quot;&gt;ae5838a&lt;/code&gt; 以降であればいいので、 &lt;code class=&quot;language-text&quot;&gt;branch: &amp;quot;master&amp;quot;&lt;/code&gt; などでも問題ないです。)&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;octokit のメンテナさん、リリース頑張ってください！いつもありがとうございます。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Progateを始めました]]></title><description><![CDATA[最近 Twitter で Progate という名前をよく見かけるので、 Go のレッスンを始めてみました。 レッスン1 やるだけ レッスン2 1枚目のスライドの内容とは関係ない部分ですが、Go のレッスン1、 レッスン…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-progate/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-progate/</guid><pubDate>Thu, 02 Jan 2020 14:50:52 GMT</pubDate><content:encoded>&lt;p&gt;最近 Twitter で Progate という名前をよく見かけるので、 Go のレッスンを始めてみました。&lt;/p&gt;
&lt;h2&gt;レッスン1&lt;/h2&gt;
&lt;p&gt;やるだけ&lt;/p&gt;
&lt;h2&gt;レッスン2&lt;/h2&gt;
&lt;p&gt;1枚目のスライドの内容とは関係ない部分ですが、Go のレッスン1、 レッスン2 を
それぞれ &lt;code class=&quot;language-text&quot;&gt;GoⅠ&lt;/code&gt; と &lt;code class=&quot;language-text&quot;&gt;GoⅡ&lt;/code&gt; と表わしているのが見た目に紛らわしいなと思いました。&lt;/p&gt;
&lt;p&gt;はい、やるだk……有料プランの説明が出てきました。&lt;/p&gt;
&lt;p&gt;そういえば始めの方のレッスンのみ無料ということだったので、とりあえず無料のレッスンを進めていきます。&lt;/p&gt;
&lt;h2&gt;レッスン3, レッスン4&lt;/h2&gt;
&lt;p&gt;やるだけ&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;Go、…… Better C？&lt;/p&gt;
&lt;p&gt;関数型が好きです、よろしくお願いします。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Jekyllを使い始めました]]></title><description><![CDATA[一年の計は元旦にあり！ …… ………… ……………… ( ˘ω˘ ) 元日なのでセーフということで…… Jekyll をセットアップしてブログを書き始めました。
今年は毎日何かアウトプットすることが目標です。 Jekyll…]]></description><link>https://ny-a.github.io/blog22020-01/introduction-of-jekyll/</link><guid isPermaLink="false">https://ny-a.github.io/blog22020-01/introduction-of-jekyll/</guid><pubDate>Wed, 01 Jan 2020 11:23:40 GMT</pubDate><content:encoded>&lt;p&gt;一年の計は元旦にあり！&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;…………&lt;/p&gt;
&lt;p&gt;………………&lt;/p&gt;
&lt;p&gt;( ˘ω˘ )&lt;/p&gt;
&lt;p&gt;元日なのでセーフということで……&lt;/p&gt;
&lt;p&gt;Jekyll をセットアップしてブログを書き始めました。
今年は毎日何かアウトプットすることが目標です。&lt;/p&gt;
&lt;h2&gt;Jekyll のセットアップ&lt;/h2&gt;
&lt;p&gt;セットアップの方法は、基本的に&lt;a href=&quot;https://jekyllrb.com/docs/github-pages/&quot;&gt;公式の docs&lt;/a&gt;に書いてある通りです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;jekyll new blog
cd blog
sed -i -e &amp;#39;s/^gem &amp;quot;jekyll&amp;quot;/# &amp;amp;/&amp;#39; -e &amp;#39;/gem &amp;quot;github-pages&amp;quot;/s/^#//&amp;#39; -e &amp;#39;$a gem &amp;quot;faraday&amp;quot;, &amp;quot;~&amp;gt; 0.17&amp;quot;&amp;#39; Gemfile
bundle update
sed -i -e &amp;#39;s#baseurl: &amp;quot;&amp;quot;#baseurl: &amp;quot;/blog&amp;quot;#&amp;#39; _config.yml
bundle exec jekyll serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1つ問題があり、数ヶ月前に同様の手順を踏んだときから &lt;code class=&quot;language-text&quot;&gt;faraday&lt;/code&gt; が 1.0 にアップデートされたようで、実行時に
&lt;code class=&quot;language-text&quot;&gt;jekyll 3.8.5 | Error:  uninitialized constant Faraday::Error::ClientError&lt;/code&gt; というエラーが出るようになっていました。&lt;/p&gt;
&lt;p&gt;そのため、 workaround として &lt;code class=&quot;language-text&quot;&gt;faraday&lt;/code&gt; を 0.17 系を使用するようにしました。&lt;/p&gt;
&lt;h2&gt;Happy new year!&lt;/h2&gt;
&lt;p&gt;&amp;#x26; Happy development!!&lt;/p&gt;</content:encoded></item></channel></rss>