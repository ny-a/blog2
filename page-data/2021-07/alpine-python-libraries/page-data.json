{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2021-07/alpine-python-libraries/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"8baa0758-742f-5506-a3c3-e1c3fdae9e50","excerpt":"Python を Docker 内で動かそうとするとき、\nAlpine ベースのコンテナを使うと軽量で嬉しかったりしますが、\npip でパッケージをインストールしようとすると、x86_64 アーキテクチャでも、\nバイナリが降ってくる代わりにソースからビルドする必要があったりします。 しかし、最近は Alpine…","html":"<p>Python を Docker 内で動かそうとするとき、\nAlpine ベースのコンテナを使うと軽量で嬉しかったりしますが、\npip でパッケージをインストールしようとすると、x86_64 アーキテクチャでも、\nバイナリが降ってくる代わりにソースからビルドする必要があったりします。</p>\n<p>しかし、最近は Alpine のパッケージも充実してきているので、\n(バージョンを気にしなければ) 割と apk add できることがあります。</p>\n<p><code class=\"language-text\">numpy</code>, <code class=\"language-text\">scipy</code>, <code class=\"language-text\">scikit-learn</code>, <code class=\"language-text\">pandas</code>, <code class=\"language-text\">boto3</code>\nなどは alpine のパッケージとして提供されているので、\nx86_64 向けバイナリとして入手することができます。</p>\n<p>Alpine のパッケージは Arch Linux の PKGBUILD 由来の\nAPKBUILD というファイルで定義されているので、\n公式リポジトリに入っていないパッケージも自分で作成すると嬉しいかもしれません。</p>","frontmatter":{"title":"AlpineベースのPythonコンテナのパッケージ管理","date":"July 19, 2021"}}},"pageContext":{"slug":"2021-07/alpine-python-libraries/","previous":{"fields":{"slug":"2021-07/google-graph/"},"frontmatter":{"title":"Googleで数学グラフ"}},"next":null}}}