{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-01/introduction-of-gatsby/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"76d6898e-2340-5e7f-8ff8-6609f81c76d3","excerpt":"Jekyll を使い始めたところですが、早速浮気して Gatsby を使っていこうと思います。 9 Projects you can do to become a Frontend Master in 2020\nに丁度 gatsby で blog…","html":"<p>Jekyll を使い始めたところですが、早速浮気して Gatsby を使っていこうと思います。</p>\n<p><a href=\"https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h\">9 Projects you can do to become a Frontend Master in 2020</a>\nに丁度 gatsby で blog を作るという項目があったので、これを順不同でこなしていこうと思います。</p>\n<h2>導入</h2>\n<p><code class=\"language-text\">gatsby new</code> を実行します。</p>\n<h2>gh-pages</h2>\n<p>公式ドキュメントの <a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\">How Gatsby Works with GitHub Pages</a>\nを参考に、 <code class=\"language-text\">yarn add -D gh-pages</code> を実行して、 deploy スクリプトを追加します。</p>\n<p>また、 <code class=\"language-text\">gatsby-config.js</code> に <code class=\"language-text\">pathPrefix</code> を追加して、実際のレポジトリに合わせて設定します。</p>\n<h2>GitHub Pagesにデプロイ</h2>\n<p><code class=\"language-text\">yarn deploy</code> を実行します。</p>\n<p>標準では自動で <code class=\"language-text\">gh-pages</code> ブランチに push されるようです。</p>\n<h2>感想</h2>\n<p>内部で GraphQL を使っていてなるほど〜となりました。\n今までこういった Static Site Generator を使ったことはなかったのですが、理想に近いものだと感じました。</p>\n<p>でも github-pages 公式サポートのある Jekyll の方が楽なんですよね……少し悩んでいます。</p>\n<p>後日 gatsby with TypeScript に挑戦したいと思っています。</p>","frontmatter":{"title":"gatsbyを使い始めました","date":"January 05, 2020","description":"gatsbyを使い始めました"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2020-01/introduction-of-gatsby/","previous":{"fields":{"slug":"/2020-01/released-octokit/"},"frontmatter":{"title":"octokit 4.15.0がリリースされました"}},"next":{"fields":{"slug":"/2020-01/how-to-fix-broken-arch-linux/"},"frontmatter":{"title":"ArchLinuxが壊れたときにまず試すことメモ"}}}}}