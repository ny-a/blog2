{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020-01/introduction-of-jsx/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"0365845f-acb5-5298-a770-563e046f4b1e","excerpt":"JSX といえば React というイメージですが、別に一緒に使わないといけないわけではないと思うので、\n,  あたりを使って試してみました。  相当のライブラリは一旦  を使ってみました。\nLessons learned using JSX without React…","html":"<p>JSX といえば React というイメージですが、別に一緒に使わないといけないわけではないと思うので、\n<code class=\"language-text\">webpack</code>, <code class=\"language-text\">babel</code> あたりを使って試してみました。</p>\n<p><code class=\"language-text\">React.createElement</code> 相当のライブラリは一旦 <code class=\"language-text\">jsx-render</code> を使ってみました。\n<a href=\"https://itnext.io/lessons-learned-using-jsx-without-react-bbddb6c28561\">Lessons learned using JSX without React</a>\nを参考にしましたが、レポジトリが消えているようなので代替を探す必要があるかもしれません。</p>\n<p>また、 <code class=\"language-text\">eslint</code> や <code class=\"language-text\">prettier</code> もよく使うのでインストールしました。\neslint で JSX はサポートされているようですが、 unused-var になるなど問題点もあるようです。</p>\n<p>Aurelia などもありますが、できるだけフロントエンドフレームワークを使わないで Web 標準を使って\nWeb アプリを作る方法を模索してみるのもよいかもしれません。(JSX, Web components など。)</p>","frontmatter":{"title":"JSXを単体で使ってみました","date":"January 21, 2020"}}},"pageContext":{"slug":"2020-01/introduction-of-jsx/","previous":{"fields":{"slug":"2020-01/introduction-of-react/"},"frontmatter":{"title":"Reactを使ってみました"}},"next":{"fields":{"slug":"2020-01/found-w3techs/"},"frontmatter":{"title":"W3Techsを見つけました"}}}}}