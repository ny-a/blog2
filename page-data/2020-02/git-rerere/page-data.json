{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020-02/git-rerere/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"05fb5b5c-270b-58c5-92e3-3ad4623a87e6","excerpt":"The Git Rerere Command — Automate Solutions to Fix Merge Conflicts\nを見て  サブコマンドを知りました。\nと言ってもまだ experimental…","html":"<p><a href=\"https://levelup.gitconnected.com/the-git-rerere-command-automate-solutions-to-fix-merge-conflicts-d501a9ab9007\">The Git Rerere Command — Automate Solutions to Fix Merge Conflicts</a>\nを見て <code class=\"language-text\">git-rerere</code> サブコマンドを知りました。\nと言ってもまだ experimental なようで、 <code class=\"language-text\">git config [--global] rerere.enabled true</code> を実行しないと使えないようです。</p>\n<p>上記の記事を見て少し試してみましたが、業務では今のところ使おうとは思いませんでした。\nconflict したときに <code class=\"language-text\">git consult</code> みたいなコマンドを呼んで、過去の似た conflict 解消を含む merge commit を参照して、\n似たような解決を試みるようなものが欲しいのかなと思いました。\nといっても、それだと rebase なんかを consult できないので、 rerere の方が少し強力ではありますが。</p>\n<p><a href=\"https://git-scm.com/docs/git-rerere\">git-rerere のドキュメント</a> をちらっと見てみて、他にもいろいろな\nサブコマンドがあるのでそれを見てみたら、 <code class=\"language-text\">git-worktree</code> など知らないコマンドを知ることができて楽しいです。</p>\n<p>とはいえ、 git も複雑になりすぎているのでは……と思うこともあります。\nサブコマンドに分かれているとはいえ……</p>","frontmatter":{"title":"Git rerereサブコマンドを知りました","date":"February 16, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"2020-02/git-rerere/","previous":{"fields":{"slug":"2020-02/acr122-nfc-reader/"},"frontmatter":{"title":"NFCカードリーダーを買いました"}},"next":null}}}