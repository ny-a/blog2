{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2020-02/hwrng-is-slow/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"37d47dd7-6ff6-56b5-bdad-608c29f9fc5d","excerpt":"ArchLinux をインストールしているノート PC に  をインストールして、\n初期設定の状態で  を起動していたのですが、乱数生成が遅く感じたので調べてみました。 乱数生成の速度計測 乱数生成の速度の計測は以下のコマンドで行いました。 この結果が、前から使っているノート PC では 400kB/s…","html":"<p>ArchLinux をインストールしているノート PC に <code class=\"language-text\">rng-tools</code> をインストールして、\n初期設定の状態で <code class=\"language-text\">rngd.service</code> を起動していたのですが、乱数生成が遅く感じたので調べてみました。</p>\n<h2>乱数生成の速度計測</h2>\n<p>乱数生成の速度の計測は以下のコマンドで行いました。</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">sudo dd if=/dev/random of=/dev/null bs=1 count=1000000 iflag=fullblock status=progress</code></pre></div>\n<p>この結果が、前から使っているノート PC では 400kB/s 程度出ていて、\n<a href=\"https://wiki.archlinux.org/index.php/Rng-tools\">Rng-tools - ArchWiki</a>\nでは 50kB/s 程度出ていれば問題ないと書かれていますが、\n新しい方のノート PC では 4kB/s 程度でした。</p>\n<p><code class=\"language-text\">/dev</code> を確認してみると、 <code class=\"language-text\">/dev/hwrng</code> は存在して、 <code class=\"language-text\">rngd</code> もそれを認識して正常に使用しているようでした。\n搭載している tpm は 2.0 で、特に tpm 関連のエラーも出ていません。\nまた、 <code class=\"language-text\">lscpu</code> で確認すると、 <code class=\"language-text\">rdrand</code> <code class=\"language-text\">rdseed</code> 両方のフラグが立っています。</p>\n<h2>rngd のソースの優先順位</h2>\n<p><a href=\"https://www.mankier.com/8/rngd#Entropy_Sources\">rngd(8) の Entropy_Source</a>\nを見ると、 </p>\n<ol>\n<li>hwrng</li>\n<li>tpm</li>\n<li>rdrand</li>\n<li>darn</li>\n<li>nist</li>\n<li>jitter</li>\n<li>pkcs11</li>\n</ol>\n<p>の順で使用するようです。</p>\n<h2>hwrng の無効化</h2>\n<p>そこで、 <code class=\"language-text\">-r /</code> など、適当なパスを指定して、hwrng を使わないように設定しました。\nその結果、 600 kB/s 程度出るようになりました。</p>\n<p>hwrng の方が品質がよさそうですが、普段そこまでエントロピーの品質を気にしない場面においては、\n速度が出る方が便利そうだと思い今回はこのように設定しました。\nGPG キーなんかを作るときは hwrng を使った方がよさそうですが、そもそもノート PC などインターネットに接続された\nマシンよりも、専用に用意したオフラインのマシンを使用する方が安全だと思うので、ほとんどの場面において\n問題なさそうです。</p>","frontmatter":{"title":"/dev/randomが遅かったので高速化を試してみました","date":"February 23, 2020"}}},"pageContext":{"slug":"2020-02/hwrng-is-slow/","previous":{"fields":{"slug":"2020-02/nftables-with-docker/"},"frontmatter":{"title":"nftablesでdockerを使ってみました"}},"next":{"fields":{"slug":"2020-02/aws-cli-assume-role/"},"frontmatter":{"title":"AWS CLIでAssumeRole"}}}}}