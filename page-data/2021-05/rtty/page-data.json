{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2021-05/rtty/","result":{"data":{"site":{"siteMetadata":{"title":"Blog"}},"markdownRemark":{"id":"eaa4fe55-5076-56fe-b824-31894d2a343e","excerpt":"セキュリティ・ネクストキャンプに応募しようと思うので、その講義の中で扱われる\nRTTY について少し試してみようと思いました。 講師の方のプロジェクトは imaoca/RTTY - GitHub にあります。 ここでは、サンプルの音声ファイルとして Wikipedia の RTTY.ogg…","html":"<p>セキュリティ・ネクストキャンプに応募しようと思うので、その講義の中で扱われる\nRTTY について少し試してみようと思いました。</p>\n<p>講師の方のプロジェクトは <a href=\"https://github.com/imaoca/RTTY\">imaoca/RTTY - GitHub</a> にあります。</p>\n<p>ここでは、サンプルの音声ファイルとして Wikipedia の <a href=\"https://en.wikipedia.org/wiki/File:RTTY.ogg\">RTTY.ogg</a> を\n使用します。</p>\n<p>ただ、このままでは使用できず、このプロジェクトのスクリプトで仮定されているフォーマットに\n変換する必要があります。</p>\n<p>サクっと ffmpeg を使って 8KHz sampling, mono, 8bit quantization, and no sign な wav ファイルに\n変換しましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ffmpeg -i RTTY.ogg -ar 8k -c:a pcm_u8 -f wav rtty3s.wav</code></pre></div>\n<p><code class=\"language-text\">-i</code> の後の ogg ファイルが入力、<code class=\"language-text\">-ar</code> がサンプリングレート、<code class=\"language-text\">-c:a</code> で量子化ビット数と符号なしを指定して、\n<code class=\"language-text\">-f</code> で wav フォーマットを指定、最後に出力先ファイル名です。</p>\n<p>あとは README の Usage に従って、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python rtty8k.py &gt; rtty.csv</code></pre></div>\n<p>を実行すれば、Excel なんかで読み込んでグラフ化することができるでしょう。</p>\n<h2>詰まった所</h2>\n<p>wav ファイルのフォーマットです。\nサンプリングレートについては、始めは元ファイルの48kHzのままにして、プログラム側のパラメータ修正で\nなんとかしていたのですが、フォーマットは pcm_s16le のままだとダメでした……。</p>\n<p>普段 pcm_u8 なんて使わないので。。。README は穴が開くくらい読みましょうという感じでした。</p>","frontmatter":{"title":"RTTY のデコードを試してみました","date":"May 29, 2021"}}},"pageContext":{"slug":"2021-05/rtty/","previous":{"fields":{"slug":"2020-08/amazon-1day-express/"},"frontmatter":{"title":"Amazon の翌日お急ぎ便"}},"next":{"fields":{"slug":"2021-05/uim-in-docker/"},"frontmatter":{"title":"Docker 内で uim が使えました"}}}}}